/* Generated by Yosys 0.9 (git sha1 1979e0b) */

(* src = "lib/byte_striping.v:7" *)
module BYTE_STRIPING(lane_0, lane_1, valid_0, valid_1, data_in, valid_in, clk_2f, clk_f);
  (* src = "lib/byte_striping.v:14" *)
  wire [31:0] _000_;
  (* src = "lib/byte_striping.v:14" *)
  wire [31:0] _001_;
  (* src = "lib/byte_striping.v:14" *)
  wire _002_;
  (* src = "lib/byte_striping.v:14" *)
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  (* src = "lib/byte_striping.v:12" *)
  input clk_2f;
  (* src = "lib/byte_striping.v:12" *)
  input clk_f;
  (* src = "lib/byte_striping.v:10" *)
  input [31:0] data_in;
  (* src = "lib/byte_striping.v:8" *)
  output [31:0] lane_0;
  (* src = "lib/byte_striping.v:8" *)
  output [31:0] lane_1;
  (* src = "lib/byte_striping.v:9" *)
  output valid_0;
  (* src = "lib/byte_striping.v:9" *)
  output valid_1;
  (* src = "lib/byte_striping.v:11" *)
  input valid_in;
  NOT _233_ (
    .A(clk_f),
    .Y(_004_)
  );
  NAND _234_ (
    .A(valid_in),
    .B(clk_f),
    .Y(_005_)
  );
  NAND _235_ (
    .A(valid_1),
    .B(_004_),
    .Y(_006_)
  );
  NAND _236_ (
    .A(_005_),
    .B(_006_),
    .Y(_003_)
  );
  NAND _237_ (
    .A(valid_in),
    .B(data_in[0]),
    .Y(_007_)
  );
  NOR _238_ (
    .A(clk_f),
    .B(lane_1[0]),
    .Y(_008_)
  );
  NAND _239_ (
    .A(clk_f),
    .B(_007_),
    .Y(_009_)
  );
  NOT _240_ (
    .A(_009_),
    .Y(_010_)
  );
  NOR _241_ (
    .A(_008_),
    .B(_010_),
    .Y(_001_[0])
  );
  NAND _242_ (
    .A(data_in[1]),
    .B(valid_in),
    .Y(_011_)
  );
  NOR _243_ (
    .A(clk_f),
    .B(lane_1[1]),
    .Y(_012_)
  );
  NAND _244_ (
    .A(clk_f),
    .B(_011_),
    .Y(_013_)
  );
  NOT _245_ (
    .A(_013_),
    .Y(_014_)
  );
  NOR _246_ (
    .A(_012_),
    .B(_014_),
    .Y(_001_[1])
  );
  NAND _247_ (
    .A(valid_in),
    .B(data_in[2]),
    .Y(_015_)
  );
  NOR _248_ (
    .A(clk_f),
    .B(lane_1[2]),
    .Y(_016_)
  );
  NAND _249_ (
    .A(clk_f),
    .B(_015_),
    .Y(_017_)
  );
  NOT _250_ (
    .A(_017_),
    .Y(_018_)
  );
  NOR _251_ (
    .A(_016_),
    .B(_018_),
    .Y(_001_[2])
  );
  NAND _252_ (
    .A(valid_in),
    .B(data_in[3]),
    .Y(_019_)
  );
  NOR _253_ (
    .A(clk_f),
    .B(lane_1[3]),
    .Y(_020_)
  );
  NAND _254_ (
    .A(clk_f),
    .B(_019_),
    .Y(_021_)
  );
  NOT _255_ (
    .A(_021_),
    .Y(_022_)
  );
  NOR _256_ (
    .A(_020_),
    .B(_022_),
    .Y(_001_[3])
  );
  NAND _257_ (
    .A(valid_in),
    .B(data_in[4]),
    .Y(_023_)
  );
  NOR _258_ (
    .A(clk_f),
    .B(lane_1[4]),
    .Y(_024_)
  );
  NAND _259_ (
    .A(clk_f),
    .B(_023_),
    .Y(_025_)
  );
  NOT _260_ (
    .A(_025_),
    .Y(_026_)
  );
  NOR _261_ (
    .A(_024_),
    .B(_026_),
    .Y(_001_[4])
  );
  NAND _262_ (
    .A(valid_in),
    .B(data_in[5]),
    .Y(_027_)
  );
  NOR _263_ (
    .A(clk_f),
    .B(lane_1[5]),
    .Y(_028_)
  );
  NAND _264_ (
    .A(clk_f),
    .B(_027_),
    .Y(_029_)
  );
  NOT _265_ (
    .A(_029_),
    .Y(_030_)
  );
  NOR _266_ (
    .A(_028_),
    .B(_030_),
    .Y(_001_[5])
  );
  NAND _267_ (
    .A(valid_in),
    .B(data_in[6]),
    .Y(_031_)
  );
  NOR _268_ (
    .A(clk_f),
    .B(lane_1[6]),
    .Y(_032_)
  );
  NAND _269_ (
    .A(clk_f),
    .B(_031_),
    .Y(_033_)
  );
  NOT _270_ (
    .A(_033_),
    .Y(_034_)
  );
  NOR _271_ (
    .A(_032_),
    .B(_034_),
    .Y(_001_[6])
  );
  NAND _272_ (
    .A(valid_in),
    .B(data_in[7]),
    .Y(_035_)
  );
  NOR _273_ (
    .A(clk_f),
    .B(lane_1[7]),
    .Y(_036_)
  );
  NAND _274_ (
    .A(clk_f),
    .B(_035_),
    .Y(_037_)
  );
  NOT _275_ (
    .A(_037_),
    .Y(_038_)
  );
  NOR _276_ (
    .A(_036_),
    .B(_038_),
    .Y(_001_[7])
  );
  NAND _277_ (
    .A(valid_in),
    .B(data_in[8]),
    .Y(_039_)
  );
  NOR _278_ (
    .A(clk_f),
    .B(lane_1[8]),
    .Y(_040_)
  );
  NAND _279_ (
    .A(clk_f),
    .B(_039_),
    .Y(_041_)
  );
  NOT _280_ (
    .A(_041_),
    .Y(_042_)
  );
  NOR _281_ (
    .A(_040_),
    .B(_042_),
    .Y(_001_[8])
  );
  NAND _282_ (
    .A(valid_in),
    .B(data_in[9]),
    .Y(_043_)
  );
  NOR _283_ (
    .A(clk_f),
    .B(lane_1[9]),
    .Y(_044_)
  );
  NAND _284_ (
    .A(clk_f),
    .B(_043_),
    .Y(_045_)
  );
  NOT _285_ (
    .A(_045_),
    .Y(_046_)
  );
  NOR _286_ (
    .A(_044_),
    .B(_046_),
    .Y(_001_[9])
  );
  NAND _287_ (
    .A(valid_in),
    .B(data_in[10]),
    .Y(_047_)
  );
  NOR _288_ (
    .A(clk_f),
    .B(lane_1[10]),
    .Y(_048_)
  );
  NAND _289_ (
    .A(clk_f),
    .B(_047_),
    .Y(_049_)
  );
  NOT _290_ (
    .A(_049_),
    .Y(_050_)
  );
  NOR _291_ (
    .A(_048_),
    .B(_050_),
    .Y(_001_[10])
  );
  NAND _292_ (
    .A(valid_in),
    .B(data_in[11]),
    .Y(_051_)
  );
  NOR _293_ (
    .A(clk_f),
    .B(lane_1[11]),
    .Y(_052_)
  );
  NAND _294_ (
    .A(clk_f),
    .B(_051_),
    .Y(_053_)
  );
  NOT _295_ (
    .A(_053_),
    .Y(_054_)
  );
  NOR _296_ (
    .A(_052_),
    .B(_054_),
    .Y(_001_[11])
  );
  NAND _297_ (
    .A(valid_in),
    .B(data_in[12]),
    .Y(_055_)
  );
  NOR _298_ (
    .A(clk_f),
    .B(lane_1[12]),
    .Y(_056_)
  );
  NAND _299_ (
    .A(clk_f),
    .B(_055_),
    .Y(_057_)
  );
  NOT _300_ (
    .A(_057_),
    .Y(_058_)
  );
  NOR _301_ (
    .A(_056_),
    .B(_058_),
    .Y(_001_[12])
  );
  NAND _302_ (
    .A(valid_in),
    .B(data_in[13]),
    .Y(_059_)
  );
  NOR _303_ (
    .A(clk_f),
    .B(lane_1[13]),
    .Y(_060_)
  );
  NAND _304_ (
    .A(clk_f),
    .B(_059_),
    .Y(_061_)
  );
  NOT _305_ (
    .A(_061_),
    .Y(_062_)
  );
  NOR _306_ (
    .A(_060_),
    .B(_062_),
    .Y(_001_[13])
  );
  NAND _307_ (
    .A(valid_in),
    .B(data_in[14]),
    .Y(_063_)
  );
  NOR _308_ (
    .A(clk_f),
    .B(lane_1[14]),
    .Y(_064_)
  );
  NAND _309_ (
    .A(clk_f),
    .B(_063_),
    .Y(_065_)
  );
  NOT _310_ (
    .A(_065_),
    .Y(_066_)
  );
  NOR _311_ (
    .A(_064_),
    .B(_066_),
    .Y(_001_[14])
  );
  NAND _312_ (
    .A(valid_in),
    .B(data_in[15]),
    .Y(_067_)
  );
  NOR _313_ (
    .A(clk_f),
    .B(lane_1[15]),
    .Y(_068_)
  );
  NAND _314_ (
    .A(clk_f),
    .B(_067_),
    .Y(_069_)
  );
  NOT _315_ (
    .A(_069_),
    .Y(_070_)
  );
  NOR _316_ (
    .A(_068_),
    .B(_070_),
    .Y(_001_[15])
  );
  NAND _317_ (
    .A(valid_in),
    .B(data_in[16]),
    .Y(_071_)
  );
  NOR _318_ (
    .A(clk_f),
    .B(lane_1[16]),
    .Y(_072_)
  );
  NAND _319_ (
    .A(clk_f),
    .B(_071_),
    .Y(_073_)
  );
  NOT _320_ (
    .A(_073_),
    .Y(_074_)
  );
  NOR _321_ (
    .A(_072_),
    .B(_074_),
    .Y(_001_[16])
  );
  NAND _322_ (
    .A(valid_in),
    .B(data_in[17]),
    .Y(_075_)
  );
  NOR _323_ (
    .A(clk_f),
    .B(lane_1[17]),
    .Y(_076_)
  );
  NAND _324_ (
    .A(clk_f),
    .B(_075_),
    .Y(_077_)
  );
  NOT _325_ (
    .A(_077_),
    .Y(_078_)
  );
  NOR _326_ (
    .A(_076_),
    .B(_078_),
    .Y(_001_[17])
  );
  NAND _327_ (
    .A(valid_in),
    .B(data_in[18]),
    .Y(_079_)
  );
  NOR _328_ (
    .A(clk_f),
    .B(lane_1[18]),
    .Y(_080_)
  );
  NAND _329_ (
    .A(clk_f),
    .B(_079_),
    .Y(_081_)
  );
  NOT _330_ (
    .A(_081_),
    .Y(_082_)
  );
  NOR _331_ (
    .A(_080_),
    .B(_082_),
    .Y(_001_[18])
  );
  NAND _332_ (
    .A(valid_in),
    .B(data_in[19]),
    .Y(_083_)
  );
  NOR _333_ (
    .A(clk_f),
    .B(lane_1[19]),
    .Y(_084_)
  );
  NAND _334_ (
    .A(clk_f),
    .B(_083_),
    .Y(_085_)
  );
  NOT _335_ (
    .A(_085_),
    .Y(_086_)
  );
  NOR _336_ (
    .A(_084_),
    .B(_086_),
    .Y(_001_[19])
  );
  NAND _337_ (
    .A(valid_in),
    .B(data_in[20]),
    .Y(_087_)
  );
  NOR _338_ (
    .A(clk_f),
    .B(lane_1[20]),
    .Y(_088_)
  );
  NAND _339_ (
    .A(clk_f),
    .B(_087_),
    .Y(_089_)
  );
  NOT _340_ (
    .A(_089_),
    .Y(_090_)
  );
  NOR _341_ (
    .A(_088_),
    .B(_090_),
    .Y(_001_[20])
  );
  NAND _342_ (
    .A(valid_in),
    .B(data_in[21]),
    .Y(_091_)
  );
  NOR _343_ (
    .A(clk_f),
    .B(lane_1[21]),
    .Y(_092_)
  );
  NAND _344_ (
    .A(clk_f),
    .B(_091_),
    .Y(_093_)
  );
  NOT _345_ (
    .A(_093_),
    .Y(_094_)
  );
  NOR _346_ (
    .A(_092_),
    .B(_094_),
    .Y(_001_[21])
  );
  NAND _347_ (
    .A(valid_in),
    .B(data_in[22]),
    .Y(_095_)
  );
  NOR _348_ (
    .A(clk_f),
    .B(lane_1[22]),
    .Y(_096_)
  );
  NAND _349_ (
    .A(clk_f),
    .B(_095_),
    .Y(_097_)
  );
  NOT _350_ (
    .A(_097_),
    .Y(_098_)
  );
  NOR _351_ (
    .A(_096_),
    .B(_098_),
    .Y(_001_[22])
  );
  NAND _352_ (
    .A(valid_in),
    .B(data_in[23]),
    .Y(_099_)
  );
  NOR _353_ (
    .A(clk_f),
    .B(lane_1[23]),
    .Y(_100_)
  );
  NAND _354_ (
    .A(clk_f),
    .B(_099_),
    .Y(_101_)
  );
  NOT _355_ (
    .A(_101_),
    .Y(_102_)
  );
  NOR _356_ (
    .A(_100_),
    .B(_102_),
    .Y(_001_[23])
  );
  NAND _357_ (
    .A(valid_in),
    .B(data_in[24]),
    .Y(_103_)
  );
  NOR _358_ (
    .A(clk_f),
    .B(lane_1[24]),
    .Y(_104_)
  );
  NAND _359_ (
    .A(clk_f),
    .B(_103_),
    .Y(_105_)
  );
  NOT _360_ (
    .A(_105_),
    .Y(_106_)
  );
  NOR _361_ (
    .A(_104_),
    .B(_106_),
    .Y(_001_[24])
  );
  NAND _362_ (
    .A(valid_in),
    .B(data_in[25]),
    .Y(_107_)
  );
  NOR _363_ (
    .A(clk_f),
    .B(lane_1[25]),
    .Y(_108_)
  );
  NAND _364_ (
    .A(clk_f),
    .B(_107_),
    .Y(_109_)
  );
  NOT _365_ (
    .A(_109_),
    .Y(_110_)
  );
  NOR _366_ (
    .A(_108_),
    .B(_110_),
    .Y(_001_[25])
  );
  NAND _367_ (
    .A(valid_in),
    .B(data_in[26]),
    .Y(_111_)
  );
  NOR _368_ (
    .A(clk_f),
    .B(lane_1[26]),
    .Y(_112_)
  );
  NAND _369_ (
    .A(clk_f),
    .B(_111_),
    .Y(_113_)
  );
  NOT _370_ (
    .A(_113_),
    .Y(_114_)
  );
  NOR _371_ (
    .A(_112_),
    .B(_114_),
    .Y(_001_[26])
  );
  NAND _372_ (
    .A(valid_in),
    .B(data_in[27]),
    .Y(_115_)
  );
  NOR _373_ (
    .A(clk_f),
    .B(lane_1[27]),
    .Y(_116_)
  );
  NAND _374_ (
    .A(clk_f),
    .B(_115_),
    .Y(_117_)
  );
  NOT _375_ (
    .A(_117_),
    .Y(_118_)
  );
  NOR _376_ (
    .A(_116_),
    .B(_118_),
    .Y(_001_[27])
  );
  NAND _377_ (
    .A(valid_in),
    .B(data_in[28]),
    .Y(_119_)
  );
  NOR _378_ (
    .A(clk_f),
    .B(lane_1[28]),
    .Y(_120_)
  );
  NAND _379_ (
    .A(clk_f),
    .B(_119_),
    .Y(_121_)
  );
  NOT _380_ (
    .A(_121_),
    .Y(_122_)
  );
  NOR _381_ (
    .A(_120_),
    .B(_122_),
    .Y(_001_[28])
  );
  NAND _382_ (
    .A(valid_in),
    .B(data_in[29]),
    .Y(_123_)
  );
  NOR _383_ (
    .A(clk_f),
    .B(lane_1[29]),
    .Y(_124_)
  );
  NAND _384_ (
    .A(clk_f),
    .B(_123_),
    .Y(_125_)
  );
  NOT _385_ (
    .A(_125_),
    .Y(_126_)
  );
  NOR _386_ (
    .A(_124_),
    .B(_126_),
    .Y(_001_[29])
  );
  NAND _387_ (
    .A(valid_in),
    .B(data_in[30]),
    .Y(_127_)
  );
  NOR _388_ (
    .A(clk_f),
    .B(lane_1[30]),
    .Y(_128_)
  );
  NAND _389_ (
    .A(clk_f),
    .B(_127_),
    .Y(_129_)
  );
  NOT _390_ (
    .A(_129_),
    .Y(_130_)
  );
  NOR _391_ (
    .A(_128_),
    .B(_130_),
    .Y(_001_[30])
  );
  NAND _392_ (
    .A(valid_in),
    .B(data_in[31]),
    .Y(_131_)
  );
  NOR _393_ (
    .A(clk_f),
    .B(lane_1[31]),
    .Y(_132_)
  );
  NAND _394_ (
    .A(clk_f),
    .B(_131_),
    .Y(_133_)
  );
  NOT _395_ (
    .A(_133_),
    .Y(_134_)
  );
  NOR _396_ (
    .A(_132_),
    .B(_134_),
    .Y(_001_[31])
  );
  NAND _397_ (
    .A(clk_f),
    .B(lane_0[0]),
    .Y(_135_)
  );
  NOR _398_ (
    .A(clk_f),
    .B(_007_),
    .Y(_136_)
  );
  NOT _399_ (
    .A(_136_),
    .Y(_137_)
  );
  NAND _400_ (
    .A(_135_),
    .B(_137_),
    .Y(_000_[0])
  );
  NAND _401_ (
    .A(clk_f),
    .B(lane_0[1]),
    .Y(_138_)
  );
  NOR _402_ (
    .A(clk_f),
    .B(_011_),
    .Y(_139_)
  );
  NOT _403_ (
    .A(_139_),
    .Y(_140_)
  );
  NAND _404_ (
    .A(_138_),
    .B(_140_),
    .Y(_000_[1])
  );
  NAND _405_ (
    .A(clk_f),
    .B(lane_0[2]),
    .Y(_141_)
  );
  NOR _406_ (
    .A(clk_f),
    .B(_015_),
    .Y(_142_)
  );
  NOT _407_ (
    .A(_142_),
    .Y(_143_)
  );
  NAND _408_ (
    .A(_141_),
    .B(_143_),
    .Y(_000_[2])
  );
  NAND _409_ (
    .A(clk_f),
    .B(lane_0[3]),
    .Y(_144_)
  );
  NOR _410_ (
    .A(clk_f),
    .B(_019_),
    .Y(_145_)
  );
  NOT _411_ (
    .A(_145_),
    .Y(_146_)
  );
  NAND _412_ (
    .A(_144_),
    .B(_146_),
    .Y(_000_[3])
  );
  NAND _413_ (
    .A(clk_f),
    .B(lane_0[4]),
    .Y(_147_)
  );
  NOR _414_ (
    .A(clk_f),
    .B(_023_),
    .Y(_148_)
  );
  NOT _415_ (
    .A(_148_),
    .Y(_149_)
  );
  NAND _416_ (
    .A(_147_),
    .B(_149_),
    .Y(_000_[4])
  );
  NAND _417_ (
    .A(clk_f),
    .B(lane_0[5]),
    .Y(_150_)
  );
  NOR _418_ (
    .A(clk_f),
    .B(_027_),
    .Y(_151_)
  );
  NOT _419_ (
    .A(_151_),
    .Y(_152_)
  );
  NAND _420_ (
    .A(_150_),
    .B(_152_),
    .Y(_000_[5])
  );
  NAND _421_ (
    .A(clk_f),
    .B(lane_0[6]),
    .Y(_153_)
  );
  NOR _422_ (
    .A(clk_f),
    .B(_031_),
    .Y(_154_)
  );
  NOT _423_ (
    .A(_154_),
    .Y(_155_)
  );
  NAND _424_ (
    .A(_153_),
    .B(_155_),
    .Y(_000_[6])
  );
  NAND _425_ (
    .A(clk_f),
    .B(lane_0[7]),
    .Y(_156_)
  );
  NOR _426_ (
    .A(clk_f),
    .B(_035_),
    .Y(_157_)
  );
  NOT _427_ (
    .A(_157_),
    .Y(_158_)
  );
  NAND _428_ (
    .A(_156_),
    .B(_158_),
    .Y(_000_[7])
  );
  NAND _429_ (
    .A(clk_f),
    .B(lane_0[8]),
    .Y(_159_)
  );
  NOR _430_ (
    .A(clk_f),
    .B(_039_),
    .Y(_160_)
  );
  NOT _431_ (
    .A(_160_),
    .Y(_161_)
  );
  NAND _432_ (
    .A(_159_),
    .B(_161_),
    .Y(_000_[8])
  );
  NAND _433_ (
    .A(clk_f),
    .B(lane_0[9]),
    .Y(_162_)
  );
  NOR _434_ (
    .A(clk_f),
    .B(_043_),
    .Y(_163_)
  );
  NOT _435_ (
    .A(_163_),
    .Y(_164_)
  );
  NAND _436_ (
    .A(_162_),
    .B(_164_),
    .Y(_000_[9])
  );
  NAND _437_ (
    .A(clk_f),
    .B(lane_0[10]),
    .Y(_165_)
  );
  NOR _438_ (
    .A(clk_f),
    .B(_047_),
    .Y(_166_)
  );
  NOT _439_ (
    .A(_166_),
    .Y(_167_)
  );
  NAND _440_ (
    .A(_165_),
    .B(_167_),
    .Y(_000_[10])
  );
  NAND _441_ (
    .A(clk_f),
    .B(lane_0[11]),
    .Y(_168_)
  );
  NOR _442_ (
    .A(clk_f),
    .B(_051_),
    .Y(_169_)
  );
  NOT _443_ (
    .A(_169_),
    .Y(_170_)
  );
  NAND _444_ (
    .A(_168_),
    .B(_170_),
    .Y(_000_[11])
  );
  NAND _445_ (
    .A(clk_f),
    .B(lane_0[12]),
    .Y(_171_)
  );
  NOR _446_ (
    .A(clk_f),
    .B(_055_),
    .Y(_172_)
  );
  NOT _447_ (
    .A(_172_),
    .Y(_173_)
  );
  NAND _448_ (
    .A(_171_),
    .B(_173_),
    .Y(_000_[12])
  );
  NAND _449_ (
    .A(clk_f),
    .B(lane_0[13]),
    .Y(_174_)
  );
  NOR _450_ (
    .A(clk_f),
    .B(_059_),
    .Y(_175_)
  );
  NOT _451_ (
    .A(_175_),
    .Y(_176_)
  );
  NAND _452_ (
    .A(_174_),
    .B(_176_),
    .Y(_000_[13])
  );
  NAND _453_ (
    .A(clk_f),
    .B(lane_0[14]),
    .Y(_177_)
  );
  NOR _454_ (
    .A(clk_f),
    .B(_063_),
    .Y(_178_)
  );
  NOT _455_ (
    .A(_178_),
    .Y(_179_)
  );
  NAND _456_ (
    .A(_177_),
    .B(_179_),
    .Y(_000_[14])
  );
  NAND _457_ (
    .A(clk_f),
    .B(lane_0[15]),
    .Y(_180_)
  );
  NOR _458_ (
    .A(clk_f),
    .B(_067_),
    .Y(_181_)
  );
  NOT _459_ (
    .A(_181_),
    .Y(_182_)
  );
  NAND _460_ (
    .A(_180_),
    .B(_182_),
    .Y(_000_[15])
  );
  NAND _461_ (
    .A(clk_f),
    .B(lane_0[16]),
    .Y(_183_)
  );
  NOR _462_ (
    .A(clk_f),
    .B(_071_),
    .Y(_184_)
  );
  NOT _463_ (
    .A(_184_),
    .Y(_185_)
  );
  NAND _464_ (
    .A(_183_),
    .B(_185_),
    .Y(_000_[16])
  );
  NAND _465_ (
    .A(clk_f),
    .B(lane_0[17]),
    .Y(_186_)
  );
  NOR _466_ (
    .A(clk_f),
    .B(_075_),
    .Y(_187_)
  );
  NOT _467_ (
    .A(_187_),
    .Y(_188_)
  );
  NAND _468_ (
    .A(_186_),
    .B(_188_),
    .Y(_000_[17])
  );
  NAND _469_ (
    .A(clk_f),
    .B(lane_0[18]),
    .Y(_189_)
  );
  NOR _470_ (
    .A(clk_f),
    .B(_079_),
    .Y(_190_)
  );
  NOT _471_ (
    .A(_190_),
    .Y(_191_)
  );
  NAND _472_ (
    .A(_189_),
    .B(_191_),
    .Y(_000_[18])
  );
  NAND _473_ (
    .A(clk_f),
    .B(lane_0[19]),
    .Y(_192_)
  );
  NOR _474_ (
    .A(clk_f),
    .B(_083_),
    .Y(_193_)
  );
  NOT _475_ (
    .A(_193_),
    .Y(_194_)
  );
  NAND _476_ (
    .A(_192_),
    .B(_194_),
    .Y(_000_[19])
  );
  NAND _477_ (
    .A(clk_f),
    .B(lane_0[20]),
    .Y(_195_)
  );
  NOR _478_ (
    .A(clk_f),
    .B(_087_),
    .Y(_196_)
  );
  NOT _479_ (
    .A(_196_),
    .Y(_197_)
  );
  NAND _480_ (
    .A(_195_),
    .B(_197_),
    .Y(_000_[20])
  );
  NAND _481_ (
    .A(clk_f),
    .B(lane_0[21]),
    .Y(_198_)
  );
  NOR _482_ (
    .A(clk_f),
    .B(_091_),
    .Y(_199_)
  );
  NOT _483_ (
    .A(_199_),
    .Y(_200_)
  );
  NAND _484_ (
    .A(_198_),
    .B(_200_),
    .Y(_000_[21])
  );
  NAND _485_ (
    .A(clk_f),
    .B(lane_0[22]),
    .Y(_201_)
  );
  NOR _486_ (
    .A(clk_f),
    .B(_095_),
    .Y(_202_)
  );
  NOT _487_ (
    .A(_202_),
    .Y(_203_)
  );
  NAND _488_ (
    .A(_201_),
    .B(_203_),
    .Y(_000_[22])
  );
  NAND _489_ (
    .A(clk_f),
    .B(lane_0[23]),
    .Y(_204_)
  );
  NOR _490_ (
    .A(clk_f),
    .B(_099_),
    .Y(_205_)
  );
  NOT _491_ (
    .A(_205_),
    .Y(_206_)
  );
  NAND _492_ (
    .A(_204_),
    .B(_206_),
    .Y(_000_[23])
  );
  NAND _493_ (
    .A(clk_f),
    .B(lane_0[24]),
    .Y(_207_)
  );
  NOR _494_ (
    .A(clk_f),
    .B(_103_),
    .Y(_208_)
  );
  NOT _495_ (
    .A(_208_),
    .Y(_209_)
  );
  NAND _496_ (
    .A(_207_),
    .B(_209_),
    .Y(_000_[24])
  );
  NAND _497_ (
    .A(clk_f),
    .B(lane_0[25]),
    .Y(_210_)
  );
  NOR _498_ (
    .A(clk_f),
    .B(_107_),
    .Y(_211_)
  );
  NOT _499_ (
    .A(_211_),
    .Y(_212_)
  );
  NAND _500_ (
    .A(_210_),
    .B(_212_),
    .Y(_000_[25])
  );
  NAND _501_ (
    .A(clk_f),
    .B(lane_0[26]),
    .Y(_213_)
  );
  NOR _502_ (
    .A(clk_f),
    .B(_111_),
    .Y(_214_)
  );
  NOT _503_ (
    .A(_214_),
    .Y(_215_)
  );
  NAND _504_ (
    .A(_213_),
    .B(_215_),
    .Y(_000_[26])
  );
  NAND _505_ (
    .A(clk_f),
    .B(lane_0[27]),
    .Y(_216_)
  );
  NOR _506_ (
    .A(clk_f),
    .B(_115_),
    .Y(_217_)
  );
  NOT _507_ (
    .A(_217_),
    .Y(_218_)
  );
  NAND _508_ (
    .A(_216_),
    .B(_218_),
    .Y(_000_[27])
  );
  NAND _509_ (
    .A(clk_f),
    .B(lane_0[28]),
    .Y(_219_)
  );
  NOR _510_ (
    .A(clk_f),
    .B(_119_),
    .Y(_220_)
  );
  NOT _511_ (
    .A(_220_),
    .Y(_221_)
  );
  NAND _512_ (
    .A(_219_),
    .B(_221_),
    .Y(_000_[28])
  );
  NAND _513_ (
    .A(clk_f),
    .B(lane_0[29]),
    .Y(_222_)
  );
  NOR _514_ (
    .A(clk_f),
    .B(_123_),
    .Y(_223_)
  );
  NOT _515_ (
    .A(_223_),
    .Y(_224_)
  );
  NAND _516_ (
    .A(_222_),
    .B(_224_),
    .Y(_000_[29])
  );
  NAND _517_ (
    .A(clk_f),
    .B(lane_0[30]),
    .Y(_225_)
  );
  NOR _518_ (
    .A(clk_f),
    .B(_127_),
    .Y(_226_)
  );
  NOT _519_ (
    .A(_226_),
    .Y(_227_)
  );
  NAND _520_ (
    .A(_225_),
    .B(_227_),
    .Y(_000_[30])
  );
  NAND _521_ (
    .A(clk_f),
    .B(lane_0[31]),
    .Y(_228_)
  );
  NOR _522_ (
    .A(clk_f),
    .B(_131_),
    .Y(_229_)
  );
  NOT _523_ (
    .A(_229_),
    .Y(_230_)
  );
  NAND _524_ (
    .A(_228_),
    .B(_230_),
    .Y(_000_[31])
  );
  NAND _525_ (
    .A(clk_f),
    .B(valid_0),
    .Y(_231_)
  );
  NAND _526_ (
    .A(valid_in),
    .B(_004_),
    .Y(_232_)
  );
  NAND _527_ (
    .A(_231_),
    .B(_232_),
    .Y(_002_)
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _528_ (
    .C(clk_2f),
    .D(_002_),
    .Q(valid_0)
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _529_ (
    .C(clk_2f),
    .D(_003_),
    .Q(valid_1)
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _530_ (
    .C(clk_2f),
    .D(_000_[0]),
    .Q(lane_0[0])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _531_ (
    .C(clk_2f),
    .D(_000_[1]),
    .Q(lane_0[1])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _532_ (
    .C(clk_2f),
    .D(_000_[2]),
    .Q(lane_0[2])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _533_ (
    .C(clk_2f),
    .D(_000_[3]),
    .Q(lane_0[3])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _534_ (
    .C(clk_2f),
    .D(_000_[4]),
    .Q(lane_0[4])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _535_ (
    .C(clk_2f),
    .D(_000_[5]),
    .Q(lane_0[5])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _536_ (
    .C(clk_2f),
    .D(_000_[6]),
    .Q(lane_0[6])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _537_ (
    .C(clk_2f),
    .D(_000_[7]),
    .Q(lane_0[7])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _538_ (
    .C(clk_2f),
    .D(_000_[8]),
    .Q(lane_0[8])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _539_ (
    .C(clk_2f),
    .D(_000_[9]),
    .Q(lane_0[9])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _540_ (
    .C(clk_2f),
    .D(_000_[10]),
    .Q(lane_0[10])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _541_ (
    .C(clk_2f),
    .D(_000_[11]),
    .Q(lane_0[11])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _542_ (
    .C(clk_2f),
    .D(_000_[12]),
    .Q(lane_0[12])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _543_ (
    .C(clk_2f),
    .D(_000_[13]),
    .Q(lane_0[13])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _544_ (
    .C(clk_2f),
    .D(_000_[14]),
    .Q(lane_0[14])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _545_ (
    .C(clk_2f),
    .D(_000_[15]),
    .Q(lane_0[15])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _546_ (
    .C(clk_2f),
    .D(_000_[16]),
    .Q(lane_0[16])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _547_ (
    .C(clk_2f),
    .D(_000_[17]),
    .Q(lane_0[17])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _548_ (
    .C(clk_2f),
    .D(_000_[18]),
    .Q(lane_0[18])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _549_ (
    .C(clk_2f),
    .D(_000_[19]),
    .Q(lane_0[19])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _550_ (
    .C(clk_2f),
    .D(_000_[20]),
    .Q(lane_0[20])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _551_ (
    .C(clk_2f),
    .D(_000_[21]),
    .Q(lane_0[21])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _552_ (
    .C(clk_2f),
    .D(_000_[22]),
    .Q(lane_0[22])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _553_ (
    .C(clk_2f),
    .D(_000_[23]),
    .Q(lane_0[23])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _554_ (
    .C(clk_2f),
    .D(_000_[24]),
    .Q(lane_0[24])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _555_ (
    .C(clk_2f),
    .D(_000_[25]),
    .Q(lane_0[25])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _556_ (
    .C(clk_2f),
    .D(_000_[26]),
    .Q(lane_0[26])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _557_ (
    .C(clk_2f),
    .D(_000_[27]),
    .Q(lane_0[27])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _558_ (
    .C(clk_2f),
    .D(_000_[28]),
    .Q(lane_0[28])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _559_ (
    .C(clk_2f),
    .D(_000_[29]),
    .Q(lane_0[29])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _560_ (
    .C(clk_2f),
    .D(_000_[30]),
    .Q(lane_0[30])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _561_ (
    .C(clk_2f),
    .D(_000_[31]),
    .Q(lane_0[31])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _562_ (
    .C(clk_2f),
    .D(_001_[0]),
    .Q(lane_1[0])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _563_ (
    .C(clk_2f),
    .D(_001_[1]),
    .Q(lane_1[1])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _564_ (
    .C(clk_2f),
    .D(_001_[2]),
    .Q(lane_1[2])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _565_ (
    .C(clk_2f),
    .D(_001_[3]),
    .Q(lane_1[3])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _566_ (
    .C(clk_2f),
    .D(_001_[4]),
    .Q(lane_1[4])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _567_ (
    .C(clk_2f),
    .D(_001_[5]),
    .Q(lane_1[5])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _568_ (
    .C(clk_2f),
    .D(_001_[6]),
    .Q(lane_1[6])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _569_ (
    .C(clk_2f),
    .D(_001_[7]),
    .Q(lane_1[7])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _570_ (
    .C(clk_2f),
    .D(_001_[8]),
    .Q(lane_1[8])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _571_ (
    .C(clk_2f),
    .D(_001_[9]),
    .Q(lane_1[9])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _572_ (
    .C(clk_2f),
    .D(_001_[10]),
    .Q(lane_1[10])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _573_ (
    .C(clk_2f),
    .D(_001_[11]),
    .Q(lane_1[11])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _574_ (
    .C(clk_2f),
    .D(_001_[12]),
    .Q(lane_1[12])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _575_ (
    .C(clk_2f),
    .D(_001_[13]),
    .Q(lane_1[13])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _576_ (
    .C(clk_2f),
    .D(_001_[14]),
    .Q(lane_1[14])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _577_ (
    .C(clk_2f),
    .D(_001_[15]),
    .Q(lane_1[15])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _578_ (
    .C(clk_2f),
    .D(_001_[16]),
    .Q(lane_1[16])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _579_ (
    .C(clk_2f),
    .D(_001_[17]),
    .Q(lane_1[17])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _580_ (
    .C(clk_2f),
    .D(_001_[18]),
    .Q(lane_1[18])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _581_ (
    .C(clk_2f),
    .D(_001_[19]),
    .Q(lane_1[19])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _582_ (
    .C(clk_2f),
    .D(_001_[20]),
    .Q(lane_1[20])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _583_ (
    .C(clk_2f),
    .D(_001_[21]),
    .Q(lane_1[21])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _584_ (
    .C(clk_2f),
    .D(_001_[22]),
    .Q(lane_1[22])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _585_ (
    .C(clk_2f),
    .D(_001_[23]),
    .Q(lane_1[23])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _586_ (
    .C(clk_2f),
    .D(_001_[24]),
    .Q(lane_1[24])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _587_ (
    .C(clk_2f),
    .D(_001_[25]),
    .Q(lane_1[25])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _588_ (
    .C(clk_2f),
    .D(_001_[26]),
    .Q(lane_1[26])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _589_ (
    .C(clk_2f),
    .D(_001_[27]),
    .Q(lane_1[27])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _590_ (
    .C(clk_2f),
    .D(_001_[28]),
    .Q(lane_1[28])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _591_ (
    .C(clk_2f),
    .D(_001_[29]),
    .Q(lane_1[29])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _592_ (
    .C(clk_2f),
    .D(_001_[30]),
    .Q(lane_1[30])
  );
  (* src = "lib/byte_striping.v:14" *)
  DFF _593_ (
    .C(clk_2f),
    .D(_001_[31]),
    .Q(lane_1[31])
  );
endmodule

(* src = "lib/byte_unstriping.v:7" *)
module BYTE_UNSTRIPING(data_out, valid_out, lane_0, lane_1, valid_0, valid_1, clk_2f, clk_f);
  (* src = "lib/byte_unstriping.v:13" *)
  wire [31:0] _000_;
  (* src = "lib/byte_unstriping.v:13" *)
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  (* src = "lib/byte_unstriping.v:11" *)
  input clk_2f;
  (* src = "lib/byte_unstriping.v:11" *)
  input clk_f;
  (* src = "lib/byte_unstriping.v:8" *)
  output [31:0] data_out;
  (* src = "lib/byte_unstriping.v:10" *)
  input [31:0] lane_0;
  (* src = "lib/byte_unstriping.v:10" *)
  input [31:0] lane_1;
  (* src = "lib/byte_unstriping.v:11" *)
  input valid_0;
  (* src = "lib/byte_unstriping.v:11" *)
  input valid_1;
  (* src = "lib/byte_unstriping.v:9" *)
  output valid_out;
  NOT _072_ (
    .A(valid_1),
    .Y(_002_)
  );
  NOT _073_ (
    .A(valid_0),
    .Y(_003_)
  );
  NOT _074_ (
    .A(clk_f),
    .Y(_004_)
  );
  NOR _075_ (
    .A(_003_),
    .B(clk_f),
    .Y(_005_)
  );
  NOR _076_ (
    .A(_002_),
    .B(_004_),
    .Y(_006_)
  );
  NOR _077_ (
    .A(_005_),
    .B(_006_),
    .Y(_007_)
  );
  NOT _078_ (
    .A(_007_),
    .Y(_001_)
  );
  NAND _079_ (
    .A(lane_0[0]),
    .B(_005_),
    .Y(_008_)
  );
  NAND _080_ (
    .A(lane_1[0]),
    .B(_006_),
    .Y(_009_)
  );
  NAND _081_ (
    .A(_008_),
    .B(_009_),
    .Y(_000_[0])
  );
  NAND _082_ (
    .A(lane_0[1]),
    .B(_005_),
    .Y(_010_)
  );
  NAND _083_ (
    .A(lane_1[1]),
    .B(_006_),
    .Y(_011_)
  );
  NAND _084_ (
    .A(_010_),
    .B(_011_),
    .Y(_000_[1])
  );
  NAND _085_ (
    .A(lane_0[2]),
    .B(_005_),
    .Y(_012_)
  );
  NAND _086_ (
    .A(lane_1[2]),
    .B(_006_),
    .Y(_013_)
  );
  NAND _087_ (
    .A(_012_),
    .B(_013_),
    .Y(_000_[2])
  );
  NAND _088_ (
    .A(lane_0[3]),
    .B(_005_),
    .Y(_014_)
  );
  NAND _089_ (
    .A(lane_1[3]),
    .B(_006_),
    .Y(_015_)
  );
  NAND _090_ (
    .A(_014_),
    .B(_015_),
    .Y(_000_[3])
  );
  NAND _091_ (
    .A(lane_0[4]),
    .B(_005_),
    .Y(_016_)
  );
  NAND _092_ (
    .A(lane_1[4]),
    .B(_006_),
    .Y(_017_)
  );
  NAND _093_ (
    .A(_016_),
    .B(_017_),
    .Y(_000_[4])
  );
  NAND _094_ (
    .A(lane_0[5]),
    .B(_005_),
    .Y(_018_)
  );
  NAND _095_ (
    .A(lane_1[5]),
    .B(_006_),
    .Y(_019_)
  );
  NAND _096_ (
    .A(_018_),
    .B(_019_),
    .Y(_000_[5])
  );
  NAND _097_ (
    .A(lane_0[6]),
    .B(_005_),
    .Y(_020_)
  );
  NAND _098_ (
    .A(lane_1[6]),
    .B(_006_),
    .Y(_021_)
  );
  NAND _099_ (
    .A(_020_),
    .B(_021_),
    .Y(_000_[6])
  );
  NAND _100_ (
    .A(lane_0[7]),
    .B(_005_),
    .Y(_022_)
  );
  NAND _101_ (
    .A(lane_1[7]),
    .B(_006_),
    .Y(_023_)
  );
  NAND _102_ (
    .A(_022_),
    .B(_023_),
    .Y(_000_[7])
  );
  NAND _103_ (
    .A(lane_0[8]),
    .B(_005_),
    .Y(_024_)
  );
  NAND _104_ (
    .A(lane_1[8]),
    .B(_006_),
    .Y(_025_)
  );
  NAND _105_ (
    .A(_024_),
    .B(_025_),
    .Y(_000_[8])
  );
  NAND _106_ (
    .A(lane_0[9]),
    .B(_005_),
    .Y(_026_)
  );
  NAND _107_ (
    .A(lane_1[9]),
    .B(_006_),
    .Y(_027_)
  );
  NAND _108_ (
    .A(_026_),
    .B(_027_),
    .Y(_000_[9])
  );
  NAND _109_ (
    .A(lane_0[10]),
    .B(_005_),
    .Y(_028_)
  );
  NAND _110_ (
    .A(lane_1[10]),
    .B(_006_),
    .Y(_029_)
  );
  NAND _111_ (
    .A(_028_),
    .B(_029_),
    .Y(_000_[10])
  );
  NAND _112_ (
    .A(lane_0[11]),
    .B(_005_),
    .Y(_030_)
  );
  NAND _113_ (
    .A(lane_1[11]),
    .B(_006_),
    .Y(_031_)
  );
  NAND _114_ (
    .A(_030_),
    .B(_031_),
    .Y(_000_[11])
  );
  NAND _115_ (
    .A(lane_0[12]),
    .B(_005_),
    .Y(_032_)
  );
  NAND _116_ (
    .A(lane_1[12]),
    .B(_006_),
    .Y(_033_)
  );
  NAND _117_ (
    .A(_032_),
    .B(_033_),
    .Y(_000_[12])
  );
  NAND _118_ (
    .A(lane_0[13]),
    .B(_005_),
    .Y(_034_)
  );
  NAND _119_ (
    .A(lane_1[13]),
    .B(_006_),
    .Y(_035_)
  );
  NAND _120_ (
    .A(_034_),
    .B(_035_),
    .Y(_000_[13])
  );
  NAND _121_ (
    .A(lane_0[14]),
    .B(_005_),
    .Y(_036_)
  );
  NAND _122_ (
    .A(lane_1[14]),
    .B(_006_),
    .Y(_037_)
  );
  NAND _123_ (
    .A(_036_),
    .B(_037_),
    .Y(_000_[14])
  );
  NAND _124_ (
    .A(lane_0[15]),
    .B(_005_),
    .Y(_038_)
  );
  NAND _125_ (
    .A(lane_1[15]),
    .B(_006_),
    .Y(_039_)
  );
  NAND _126_ (
    .A(_038_),
    .B(_039_),
    .Y(_000_[15])
  );
  NAND _127_ (
    .A(lane_0[16]),
    .B(_005_),
    .Y(_040_)
  );
  NAND _128_ (
    .A(lane_1[16]),
    .B(_006_),
    .Y(_041_)
  );
  NAND _129_ (
    .A(_040_),
    .B(_041_),
    .Y(_000_[16])
  );
  NAND _130_ (
    .A(lane_0[17]),
    .B(_005_),
    .Y(_042_)
  );
  NAND _131_ (
    .A(lane_1[17]),
    .B(_006_),
    .Y(_043_)
  );
  NAND _132_ (
    .A(_042_),
    .B(_043_),
    .Y(_000_[17])
  );
  NAND _133_ (
    .A(lane_0[18]),
    .B(_005_),
    .Y(_044_)
  );
  NAND _134_ (
    .A(lane_1[18]),
    .B(_006_),
    .Y(_045_)
  );
  NAND _135_ (
    .A(_044_),
    .B(_045_),
    .Y(_000_[18])
  );
  NAND _136_ (
    .A(lane_0[19]),
    .B(_005_),
    .Y(_046_)
  );
  NAND _137_ (
    .A(lane_1[19]),
    .B(_006_),
    .Y(_047_)
  );
  NAND _138_ (
    .A(_046_),
    .B(_047_),
    .Y(_000_[19])
  );
  NAND _139_ (
    .A(lane_0[20]),
    .B(_005_),
    .Y(_048_)
  );
  NAND _140_ (
    .A(lane_1[20]),
    .B(_006_),
    .Y(_049_)
  );
  NAND _141_ (
    .A(_048_),
    .B(_049_),
    .Y(_000_[20])
  );
  NAND _142_ (
    .A(lane_0[21]),
    .B(_005_),
    .Y(_050_)
  );
  NAND _143_ (
    .A(lane_1[21]),
    .B(_006_),
    .Y(_051_)
  );
  NAND _144_ (
    .A(_050_),
    .B(_051_),
    .Y(_000_[21])
  );
  NAND _145_ (
    .A(lane_0[22]),
    .B(_005_),
    .Y(_052_)
  );
  NAND _146_ (
    .A(lane_1[22]),
    .B(_006_),
    .Y(_053_)
  );
  NAND _147_ (
    .A(_052_),
    .B(_053_),
    .Y(_000_[22])
  );
  NAND _148_ (
    .A(lane_0[23]),
    .B(_005_),
    .Y(_054_)
  );
  NAND _149_ (
    .A(lane_1[23]),
    .B(_006_),
    .Y(_055_)
  );
  NAND _150_ (
    .A(_054_),
    .B(_055_),
    .Y(_000_[23])
  );
  NAND _151_ (
    .A(lane_0[24]),
    .B(_005_),
    .Y(_056_)
  );
  NAND _152_ (
    .A(lane_1[24]),
    .B(_006_),
    .Y(_057_)
  );
  NAND _153_ (
    .A(_056_),
    .B(_057_),
    .Y(_000_[24])
  );
  NAND _154_ (
    .A(lane_0[25]),
    .B(_005_),
    .Y(_058_)
  );
  NAND _155_ (
    .A(lane_1[25]),
    .B(_006_),
    .Y(_059_)
  );
  NAND _156_ (
    .A(_058_),
    .B(_059_),
    .Y(_000_[25])
  );
  NAND _157_ (
    .A(lane_0[26]),
    .B(_005_),
    .Y(_060_)
  );
  NAND _158_ (
    .A(lane_1[26]),
    .B(_006_),
    .Y(_061_)
  );
  NAND _159_ (
    .A(_060_),
    .B(_061_),
    .Y(_000_[26])
  );
  NAND _160_ (
    .A(lane_0[27]),
    .B(_005_),
    .Y(_062_)
  );
  NAND _161_ (
    .A(lane_1[27]),
    .B(_006_),
    .Y(_063_)
  );
  NAND _162_ (
    .A(_062_),
    .B(_063_),
    .Y(_000_[27])
  );
  NAND _163_ (
    .A(lane_0[28]),
    .B(_005_),
    .Y(_064_)
  );
  NAND _164_ (
    .A(lane_1[28]),
    .B(_006_),
    .Y(_065_)
  );
  NAND _165_ (
    .A(_064_),
    .B(_065_),
    .Y(_000_[28])
  );
  NAND _166_ (
    .A(lane_0[29]),
    .B(_005_),
    .Y(_066_)
  );
  NAND _167_ (
    .A(lane_1[29]),
    .B(_006_),
    .Y(_067_)
  );
  NAND _168_ (
    .A(_066_),
    .B(_067_),
    .Y(_000_[29])
  );
  NAND _169_ (
    .A(lane_0[30]),
    .B(_005_),
    .Y(_068_)
  );
  NAND _170_ (
    .A(lane_1[30]),
    .B(_006_),
    .Y(_069_)
  );
  NAND _171_ (
    .A(_068_),
    .B(_069_),
    .Y(_000_[30])
  );
  NAND _172_ (
    .A(lane_0[31]),
    .B(_005_),
    .Y(_070_)
  );
  NAND _173_ (
    .A(lane_1[31]),
    .B(_006_),
    .Y(_071_)
  );
  NAND _174_ (
    .A(_070_),
    .B(_071_),
    .Y(_000_[31])
  );
  (* src = "lib/byte_unstriping.v:13" *)
  DFF _175_ (
    .C(clk_2f),
    .D(_000_[0]),
    .Q(data_out[0])
  );
  (* src = "lib/byte_unstriping.v:13" *)
  DFF _176_ (
    .C(clk_2f),
    .D(_000_[1]),
    .Q(data_out[1])
  );
  (* src = "lib/byte_unstriping.v:13" *)
  DFF _177_ (
    .C(clk_2f),
    .D(_000_[2]),
    .Q(data_out[2])
  );
  (* src = "lib/byte_unstriping.v:13" *)
  DFF _178_ (
    .C(clk_2f),
    .D(_000_[3]),
    .Q(data_out[3])
  );
  (* src = "lib/byte_unstriping.v:13" *)
  DFF _179_ (
    .C(clk_2f),
    .D(_000_[4]),
    .Q(data_out[4])
  );
  (* src = "lib/byte_unstriping.v:13" *)
  DFF _180_ (
    .C(clk_2f),
    .D(_000_[5]),
    .Q(data_out[5])
  );
  (* src = "lib/byte_unstriping.v:13" *)
  DFF _181_ (
    .C(clk_2f),
    .D(_000_[6]),
    .Q(data_out[6])
  );
  (* src = "lib/byte_unstriping.v:13" *)
  DFF _182_ (
    .C(clk_2f),
    .D(_000_[7]),
    .Q(data_out[7])
  );
  (* src = "lib/byte_unstriping.v:13" *)
  DFF _183_ (
    .C(clk_2f),
    .D(_000_[8]),
    .Q(data_out[8])
  );
  (* src = "lib/byte_unstriping.v:13" *)
  DFF _184_ (
    .C(clk_2f),
    .D(_000_[9]),
    .Q(data_out[9])
  );
  (* src = "lib/byte_unstriping.v:13" *)
  DFF _185_ (
    .C(clk_2f),
    .D(_000_[10]),
    .Q(data_out[10])
  );
  (* src = "lib/byte_unstriping.v:13" *)
  DFF _186_ (
    .C(clk_2f),
    .D(_000_[11]),
    .Q(data_out[11])
  );
  (* src = "lib/byte_unstriping.v:13" *)
  DFF _187_ (
    .C(clk_2f),
    .D(_000_[12]),
    .Q(data_out[12])
  );
  (* src = "lib/byte_unstriping.v:13" *)
  DFF _188_ (
    .C(clk_2f),
    .D(_000_[13]),
    .Q(data_out[13])
  );
  (* src = "lib/byte_unstriping.v:13" *)
  DFF _189_ (
    .C(clk_2f),
    .D(_000_[14]),
    .Q(data_out[14])
  );
  (* src = "lib/byte_unstriping.v:13" *)
  DFF _190_ (
    .C(clk_2f),
    .D(_000_[15]),
    .Q(data_out[15])
  );
  (* src = "lib/byte_unstriping.v:13" *)
  DFF _191_ (
    .C(clk_2f),
    .D(_000_[16]),
    .Q(data_out[16])
  );
  (* src = "lib/byte_unstriping.v:13" *)
  DFF _192_ (
    .C(clk_2f),
    .D(_000_[17]),
    .Q(data_out[17])
  );
  (* src = "lib/byte_unstriping.v:13" *)
  DFF _193_ (
    .C(clk_2f),
    .D(_000_[18]),
    .Q(data_out[18])
  );
  (* src = "lib/byte_unstriping.v:13" *)
  DFF _194_ (
    .C(clk_2f),
    .D(_000_[19]),
    .Q(data_out[19])
  );
  (* src = "lib/byte_unstriping.v:13" *)
  DFF _195_ (
    .C(clk_2f),
    .D(_000_[20]),
    .Q(data_out[20])
  );
  (* src = "lib/byte_unstriping.v:13" *)
  DFF _196_ (
    .C(clk_2f),
    .D(_000_[21]),
    .Q(data_out[21])
  );
  (* src = "lib/byte_unstriping.v:13" *)
  DFF _197_ (
    .C(clk_2f),
    .D(_000_[22]),
    .Q(data_out[22])
  );
  (* src = "lib/byte_unstriping.v:13" *)
  DFF _198_ (
    .C(clk_2f),
    .D(_000_[23]),
    .Q(data_out[23])
  );
  (* src = "lib/byte_unstriping.v:13" *)
  DFF _199_ (
    .C(clk_2f),
    .D(_000_[24]),
    .Q(data_out[24])
  );
  (* src = "lib/byte_unstriping.v:13" *)
  DFF _200_ (
    .C(clk_2f),
    .D(_000_[25]),
    .Q(data_out[25])
  );
  (* src = "lib/byte_unstriping.v:13" *)
  DFF _201_ (
    .C(clk_2f),
    .D(_000_[26]),
    .Q(data_out[26])
  );
  (* src = "lib/byte_unstriping.v:13" *)
  DFF _202_ (
    .C(clk_2f),
    .D(_000_[27]),
    .Q(data_out[27])
  );
  (* src = "lib/byte_unstriping.v:13" *)
  DFF _203_ (
    .C(clk_2f),
    .D(_000_[28]),
    .Q(data_out[28])
  );
  (* src = "lib/byte_unstriping.v:13" *)
  DFF _204_ (
    .C(clk_2f),
    .D(_000_[29]),
    .Q(data_out[29])
  );
  (* src = "lib/byte_unstriping.v:13" *)
  DFF _205_ (
    .C(clk_2f),
    .D(_000_[30]),
    .Q(data_out[30])
  );
  (* src = "lib/byte_unstriping.v:13" *)
  DFF _206_ (
    .C(clk_2f),
    .D(_000_[31]),
    .Q(data_out[31])
  );
  (* src = "lib/byte_unstriping.v:13" *)
  DFF _207_ (
    .C(clk_2f),
    .D(_001_),
    .Q(valid_out)
  );
endmodule

(* top =  1  *)
(* src = "src/phy.v:6" *)
module PHY(data_out, valid_out, data_in, valid_in, reset, clk_32f, sincronizar_bus);
  (* src = "src/phy.v:12" *)
  wire bus_serial_0;
  (* src = "src/phy.v:12" *)
  wire bus_serial_1;
  (* src = "src/phy.v:10" *)
  input clk_32f;
  (* src = "src/phy.v:9" *)
  input [31:0] data_in;
  (* src = "src/phy.v:7" *)
  output [31:0] data_out;
  (* src = "src/phy.v:10" *)
  input reset;
  (* src = "src/phy.v:10" *)
  input sincronizar_bus;
  (* src = "src/phy.v:10" *)
  input valid_in;
  (* src = "src/phy.v:8" *)
  output valid_out;
  (* module_not_derived = 32'd1 *)
  (* src = "src/phy.v:17" *)
  PHY_RX receptor (
    .clk_32f(clk_32f),
    .data_in_0(bus_serial_0),
    .data_in_1(bus_serial_1),
    .data_out(data_out),
    .reset(reset),
    .sincronizar_bus(sincronizar_bus),
    .valid_out(valid_out)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "src/phy.v:15" *)
  PHY_TX transmisor (
    .clk_32f(clk_32f),
    .data_in(data_in),
    .data_out_0(bus_serial_0),
    .data_out_1(bus_serial_1),
    .reset(reset),
    .valid_in(valid_in)
  );
endmodule

(* src = "src/phy_rx.v:7" *)
module PHY_RX(data_out, valid_out, data_in_0, data_in_1, reset, clk_32f, sincronizar_bus);
  (* src = "src/phy_rx.v:20" *)
  wire bus_sinc;
  (* src = "src/phy_rx.v:14" *)
  wire clk_2f;
  (* src = "src/phy_rx.v:11" *)
  input clk_32f;
  (* src = "src/phy_rx.v:14" *)
  wire clk_4f;
  (* src = "src/phy_rx.v:14" *)
  wire clk_f;
  (* src = "src/phy_rx.v:16" *)
  wire [31:0] data_32b_0;
  (* src = "src/phy_rx.v:16" *)
  wire [31:0] data_32b_1;
  (* src = "src/phy_rx.v:15" *)
  wire [7:0] data_8b_0;
  (* src = "src/phy_rx.v:15" *)
  wire [7:0] data_8b_1;
  (* src = "src/phy_rx.v:10" *)
  input data_in_0;
  (* src = "src/phy_rx.v:10" *)
  input data_in_1;
  (* src = "src/phy_rx.v:8" *)
  output [31:0] data_out;
  (* src = "src/phy_rx.v:11" *)
  input reset;
  (* src = "src/phy_rx.v:11" *)
  input sincronizar_bus;
  (* src = "src/phy_rx.v:20" *)
  (* unused_bits = "0" *)
  wire tierra;
  (* src = "src/phy_rx.v:19" *)
  wire valid_32b_0;
  (* src = "src/phy_rx.v:19" *)
  wire valid_32b_1;
  (* src = "src/phy_rx.v:18" *)
  wire valid_8b_0;
  (* src = "src/phy_rx.v:18" *)
  wire valid_8b_1;
  (* src = "src/phy_rx.v:9" *)
  output valid_out;
  (* module_not_derived = 32'd1 *)
  (* src = "src/phy_rx.v:24" *)
  BYTE_UNSTRIPING bte_unstrp (
    .clk_2f(clk_2f),
    .clk_f(clk_f),
    .data_out(data_out),
    .lane_0(data_32b_0),
    .lane_1(data_32b_1),
    .valid_0(valid_32b_0),
    .valid_1(valid_32b_1),
    .valid_out(valid_out)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "src/phy_rx.v:22" *)
  clk_gen clock_gen (
    .clk_2f(clk_2f),
    .clk_32f(clk_32f),
    .clk_4f(clk_4f),
    .clk_f(clk_f),
    .reset(reset)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "src/phy_rx.v:26" *)
  m8_32 conv_0 (
    .clk_32f(clk_32f),
    .clk_4f(clk_4f),
    .clk_f(clk_f),
    .data_8_32(data_32b_0),
    .data_input(data_8b_0),
    .reset(reset),
    .sinc(sincronizar_bus),
    .sincout(bus_sinc),
    .valid_8_32(valid_32b_0),
    .valid_input(valid_8b_0)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "src/phy_rx.v:28" *)
  m8_32 conv_1 (
    .clk_32f(clk_32f),
    .clk_4f(clk_4f),
    .clk_f(clk_f),
    .data_8_32(data_32b_1),
    .data_input(data_8b_1),
    .reset(reset),
    .sinc(bus_sinc),
    .sincout(tierra),
    .valid_8_32(valid_32b_1),
    .valid_input(valid_8b_1)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "src/phy_rx.v:31" *)
  serial_paralelo serelo_0 (
    .clk_32f(clk_32f),
    .clk_4f(clk_4f),
    .data_in(data_in_0),
    .data_out(data_8b_0),
    .reset(reset),
    .valid_out(valid_8b_0)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "src/phy_rx.v:32" *)
  serial_paralelo serelo_1 (
    .clk_32f(clk_32f),
    .clk_4f(clk_4f),
    .data_in(data_in_1),
    .data_out(data_8b_1),
    .reset(reset),
    .valid_out(valid_8b_1)
  );
endmodule

(* src = "src/phy_tx.v:8" *)
module PHY_TX(data_out_0, data_out_1, data_in, valid_in, reset, clk_32f);
  (* src = "src/phy_tx.v:14" *)
  wire clk_2f;
  (* src = "src/phy_tx.v:11" *)
  input clk_32f;
  (* src = "src/phy_tx.v:14" *)
  wire clk_4f;
  (* src = "src/phy_tx.v:14" *)
  wire clk_f;
  (* src = "src/phy_tx.v:16" *)
  wire [7:0] data_8b_0;
  (* src = "src/phy_tx.v:16" *)
  wire [7:0] data_8b_1;
  (* src = "src/phy_tx.v:10" *)
  input [31:0] data_in;
  (* src = "src/phy_tx.v:9" *)
  output data_out_0;
  (* src = "src/phy_tx.v:9" *)
  output data_out_1;
  (* src = "src/phy_tx.v:15" *)
  wire [31:0] lane_0;
  (* src = "src/phy_tx.v:15" *)
  wire [31:0] lane_1;
  (* src = "src/phy_tx.v:11" *)
  input reset;
  (* src = "src/phy_tx.v:18" *)
  wire valid_0;
  (* src = "src/phy_tx.v:18" *)
  wire valid_1;
  (* src = "src/phy_tx.v:11" *)
  input valid_in;
  (* src = "src/phy_tx.v:17" *)
  wire valid_out_0;
  (* src = "src/phy_tx.v:17" *)
  wire valid_out_1;
  (* module_not_derived = 32'd1 *)
  (* src = "src/phy_tx.v:23" *)
  BYTE_STRIPING bte_strp (
    .clk_2f(clk_2f),
    .clk_f(clk_f),
    .data_in(data_in),
    .lane_0(lane_0),
    .lane_1(lane_1),
    .valid_0(valid_0),
    .valid_1(valid_1),
    .valid_in(valid_in)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "src/phy_tx.v:21" *)
  clk_gen clock_gen (
    .clk_2f(clk_2f),
    .clk_32f(clk_32f),
    .clk_4f(clk_4f),
    .clk_f(clk_f),
    .reset(reset)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "src/phy_tx.v:25" *)
  m32_8 conv_0 (
    .clk_4f(clk_4f),
    .data_32_8(data_8b_0),
    .data_strp(lane_0),
    .reset(reset),
    .valid_32_8(valid_out_0),
    .valid_strp(valid_0)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "src/phy_tx.v:26" *)
  m32_8 conv_1 (
    .clk_4f(clk_4f),
    .data_32_8(data_8b_1),
    .data_strp(lane_1),
    .reset(reset),
    .valid_32_8(valid_out_1),
    .valid_strp(valid_1)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "src/phy_tx.v:29" *)
  paralelo_serial parial_0 (
    .clk_32f(clk_32f),
    .clk_4f(clk_4f),
    .data_in(data_8b_0),
    .data_out(data_out_0),
    .reset(reset),
    .valid_in(valid_out_0)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "src/phy_tx.v:30" *)
  paralelo_serial parial_1 (
    .clk_32f(clk_32f),
    .clk_4f(clk_4f),
    .data_in(data_8b_1),
    .data_out(data_out_1),
    .reset(reset),
    .valid_in(valid_out_1)
  );
endmodule

(* src = "lib/clk_gen.v:8" *)
module clk_gen(clk_f, clk_2f, clk_4f, clk_32f, reset);
  (* src = "lib/clk_gen.v:9" *)
  output clk_2f;
  (* src = "lib/clk_gen.v:11" *)
  input clk_32f;
  (* src = "lib/clk_gen.v:10" *)
  output clk_4f;
  (* src = "lib/clk_gen.v:8" *)
  output clk_f;
  (* src = "lib/clk_gen.v:14" *)
  wire q2;
  (* src = "lib/clk_gen.v:12" *)
  input reset;
  assign clk_2f = 1'h0;
  assign clk_4f = 1'h0;
  assign clk_f = 1'h0;
  assign q2 = 1'h0;
endmodule

(* src = "lib/m32_8.v:7" *)
module m32_8(data_32_8, valid_32_8, data_strp, valid_strp, reset, clk_4f);
  (* src = "lib/m32_8.v:16" *)
  wire [7:0] _000_;
  (* src = "lib/m32_8.v:16" *)
  wire [1:0] _001_;
  (* src = "lib/m32_8.v:16" *)
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  (* src = "lib/m32_8.v:12" *)
  input clk_4f;
  (* src = "lib/m32_8.v:7" *)
  output [7:0] data_32_8;
  (* src = "lib/m32_8.v:9" *)
  input [31:0] data_strp;
  (* src = "lib/m32_8.v:11" *)
  input reset;
  (* init = 2'h0 *)
  (* src = "lib/m32_8.v:14" *)
  wire [1:0] selector;
  (* src = "lib/m32_8.v:8" *)
  output valid_32_8;
  (* src = "lib/m32_8.v:10" *)
  input valid_strp;
  NOT _068_ (
    .A(selector[0]),
    .Y(_030_)
  );
  NOT _069_ (
    .A(selector[1]),
    .Y(_031_)
  );
  NAND _070_ (
    .A(valid_strp),
    .B(reset),
    .Y(_032_)
  );
  NOT _071_ (
    .A(_032_),
    .Y(_002_)
  );
  NOR _072_ (
    .A(selector[0]),
    .B(_031_),
    .Y(_033_)
  );
  NAND _073_ (
    .A(data_strp[8]),
    .B(_033_),
    .Y(_034_)
  );
  NOR _074_ (
    .A(selector[0]),
    .B(selector[1]),
    .Y(_035_)
  );
  NAND _075_ (
    .A(data_strp[24]),
    .B(_035_),
    .Y(_036_)
  );
  NAND _076_ (
    .A(_034_),
    .B(_036_),
    .Y(_037_)
  );
  NOR _077_ (
    .A(_030_),
    .B(selector[1]),
    .Y(_038_)
  );
  NAND _078_ (
    .A(data_strp[16]),
    .B(_038_),
    .Y(_039_)
  );
  NOR _079_ (
    .A(_030_),
    .B(_031_),
    .Y(_040_)
  );
  NAND _080_ (
    .A(data_strp[0]),
    .B(_040_),
    .Y(_041_)
  );
  NAND _081_ (
    .A(_039_),
    .B(_041_),
    .Y(_042_)
  );
  NOR _082_ (
    .A(_037_),
    .B(_042_),
    .Y(_043_)
  );
  NOR _083_ (
    .A(_032_),
    .B(_043_),
    .Y(_000_[0])
  );
  NAND _084_ (
    .A(data_strp[1]),
    .B(_040_),
    .Y(_044_)
  );
  NAND _085_ (
    .A(data_strp[25]),
    .B(_035_),
    .Y(_045_)
  );
  NAND _086_ (
    .A(_044_),
    .B(_045_),
    .Y(_046_)
  );
  NAND _087_ (
    .A(data_strp[9]),
    .B(_033_),
    .Y(_047_)
  );
  NAND _088_ (
    .A(data_strp[17]),
    .B(_038_),
    .Y(_048_)
  );
  NAND _089_ (
    .A(_047_),
    .B(_048_),
    .Y(_049_)
  );
  NOR _090_ (
    .A(_046_),
    .B(_049_),
    .Y(_050_)
  );
  NOR _091_ (
    .A(_032_),
    .B(_050_),
    .Y(_000_[1])
  );
  NAND _092_ (
    .A(data_strp[2]),
    .B(_040_),
    .Y(_051_)
  );
  NAND _093_ (
    .A(data_strp[26]),
    .B(_035_),
    .Y(_052_)
  );
  NAND _094_ (
    .A(_051_),
    .B(_052_),
    .Y(_053_)
  );
  NAND _095_ (
    .A(data_strp[10]),
    .B(_033_),
    .Y(_054_)
  );
  NAND _096_ (
    .A(data_strp[18]),
    .B(_038_),
    .Y(_055_)
  );
  NAND _097_ (
    .A(_054_),
    .B(_055_),
    .Y(_056_)
  );
  NOR _098_ (
    .A(_053_),
    .B(_056_),
    .Y(_057_)
  );
  NOR _099_ (
    .A(_032_),
    .B(_057_),
    .Y(_000_[2])
  );
  NAND _100_ (
    .A(data_strp[3]),
    .B(_040_),
    .Y(_058_)
  );
  NAND _101_ (
    .A(data_strp[27]),
    .B(_035_),
    .Y(_059_)
  );
  NAND _102_ (
    .A(_058_),
    .B(_059_),
    .Y(_060_)
  );
  NAND _103_ (
    .A(data_strp[11]),
    .B(_033_),
    .Y(_061_)
  );
  NAND _104_ (
    .A(data_strp[19]),
    .B(_038_),
    .Y(_062_)
  );
  NAND _105_ (
    .A(_061_),
    .B(_062_),
    .Y(_063_)
  );
  NOR _106_ (
    .A(_060_),
    .B(_063_),
    .Y(_064_)
  );
  NOR _107_ (
    .A(_032_),
    .B(_064_),
    .Y(_000_[3])
  );
  NAND _108_ (
    .A(data_strp[4]),
    .B(_040_),
    .Y(_065_)
  );
  NAND _109_ (
    .A(data_strp[28]),
    .B(_035_),
    .Y(_066_)
  );
  NAND _110_ (
    .A(_065_),
    .B(_066_),
    .Y(_067_)
  );
  NAND _111_ (
    .A(data_strp[12]),
    .B(_033_),
    .Y(_003_)
  );
  NAND _112_ (
    .A(data_strp[20]),
    .B(_038_),
    .Y(_004_)
  );
  NAND _113_ (
    .A(_003_),
    .B(_004_),
    .Y(_005_)
  );
  NOR _114_ (
    .A(_067_),
    .B(_005_),
    .Y(_006_)
  );
  NOR _115_ (
    .A(_032_),
    .B(_006_),
    .Y(_000_[4])
  );
  NAND _116_ (
    .A(data_strp[5]),
    .B(_040_),
    .Y(_007_)
  );
  NAND _117_ (
    .A(data_strp[29]),
    .B(_035_),
    .Y(_008_)
  );
  NAND _118_ (
    .A(_007_),
    .B(_008_),
    .Y(_009_)
  );
  NAND _119_ (
    .A(data_strp[13]),
    .B(_033_),
    .Y(_010_)
  );
  NAND _120_ (
    .A(data_strp[21]),
    .B(_038_),
    .Y(_011_)
  );
  NAND _121_ (
    .A(_010_),
    .B(_011_),
    .Y(_012_)
  );
  NOR _122_ (
    .A(_009_),
    .B(_012_),
    .Y(_013_)
  );
  NOR _123_ (
    .A(_032_),
    .B(_013_),
    .Y(_000_[5])
  );
  NAND _124_ (
    .A(data_strp[6]),
    .B(_040_),
    .Y(_014_)
  );
  NAND _125_ (
    .A(data_strp[30]),
    .B(_035_),
    .Y(_015_)
  );
  NAND _126_ (
    .A(_014_),
    .B(_015_),
    .Y(_016_)
  );
  NAND _127_ (
    .A(data_strp[14]),
    .B(_033_),
    .Y(_017_)
  );
  NAND _128_ (
    .A(data_strp[22]),
    .B(_038_),
    .Y(_018_)
  );
  NAND _129_ (
    .A(_017_),
    .B(_018_),
    .Y(_019_)
  );
  NOR _130_ (
    .A(_016_),
    .B(_019_),
    .Y(_020_)
  );
  NOR _131_ (
    .A(_032_),
    .B(_020_),
    .Y(_000_[6])
  );
  NAND _132_ (
    .A(data_strp[7]),
    .B(_040_),
    .Y(_021_)
  );
  NAND _133_ (
    .A(data_strp[31]),
    .B(_035_),
    .Y(_022_)
  );
  NAND _134_ (
    .A(_021_),
    .B(_022_),
    .Y(_023_)
  );
  NAND _135_ (
    .A(data_strp[15]),
    .B(_033_),
    .Y(_024_)
  );
  NAND _136_ (
    .A(data_strp[23]),
    .B(_038_),
    .Y(_025_)
  );
  NAND _137_ (
    .A(_024_),
    .B(_025_),
    .Y(_026_)
  );
  NOR _138_ (
    .A(_023_),
    .B(_026_),
    .Y(_027_)
  );
  NOR _139_ (
    .A(_032_),
    .B(_027_),
    .Y(_000_[7])
  );
  NOR _140_ (
    .A(selector[0]),
    .B(_032_),
    .Y(_001_[0])
  );
  NOR _141_ (
    .A(_032_),
    .B(_040_),
    .Y(_028_)
  );
  NOT _142_ (
    .A(_028_),
    .Y(_029_)
  );
  NOR _143_ (
    .A(_035_),
    .B(_029_),
    .Y(_001_[1])
  );
  (* src = "lib/m32_8.v:16" *)
  DFF _144_ (
    .C(clk_4f),
    .D(_001_[0]),
    .Q(selector[0])
  );
  (* src = "lib/m32_8.v:16" *)
  DFF _145_ (
    .C(clk_4f),
    .D(_001_[1]),
    .Q(selector[1])
  );
  (* src = "lib/m32_8.v:16" *)
  DFF _146_ (
    .C(clk_4f),
    .D(_000_[0]),
    .Q(data_32_8[0])
  );
  (* src = "lib/m32_8.v:16" *)
  DFF _147_ (
    .C(clk_4f),
    .D(_000_[1]),
    .Q(data_32_8[1])
  );
  (* src = "lib/m32_8.v:16" *)
  DFF _148_ (
    .C(clk_4f),
    .D(_000_[2]),
    .Q(data_32_8[2])
  );
  (* src = "lib/m32_8.v:16" *)
  DFF _149_ (
    .C(clk_4f),
    .D(_000_[3]),
    .Q(data_32_8[3])
  );
  (* src = "lib/m32_8.v:16" *)
  DFF _150_ (
    .C(clk_4f),
    .D(_000_[4]),
    .Q(data_32_8[4])
  );
  (* src = "lib/m32_8.v:16" *)
  DFF _151_ (
    .C(clk_4f),
    .D(_000_[5]),
    .Q(data_32_8[5])
  );
  (* src = "lib/m32_8.v:16" *)
  DFF _152_ (
    .C(clk_4f),
    .D(_000_[6]),
    .Q(data_32_8[6])
  );
  (* src = "lib/m32_8.v:16" *)
  DFF _153_ (
    .C(clk_4f),
    .D(_000_[7]),
    .Q(data_32_8[7])
  );
  (* src = "lib/m32_8.v:16" *)
  DFF _154_ (
    .C(clk_4f),
    .D(_002_),
    .Q(valid_32_8)
  );
endmodule

(* src = "lib/m8_32.v:7" *)
module m8_32(data_8_32, valid_8_32, sincout, data_input, sinc, valid_input, reset, clk_f, clk_4f, clk_32f);
  (* src = "lib/m8_32.v:21" *)
  wire _0000_;
  (* src = "lib/m8_32.v:21" *)
  wire _0001_;
  (* src = "lib/m8_32.v:21" *)
  wire [31:0] _0002_;
  (* src = "lib/m8_32.v:21" *)
  wire [31:0] _0003_;
  (* src = "lib/m8_32.v:21" *)
  wire [31:0] _0004_;
  (* src = "lib/m8_32.v:21" *)
  wire [31:0] _0005_;
  (* src = "lib/m8_32.v:21" *)
  wire [31:0] _0006_;
  (* src = "lib/m8_32.v:21" *)
  wire [31:0] _0007_;
  (* src = "lib/m8_32.v:52" *)
  wire [31:0] _0008_;
  (* src = "lib/m8_32.v:21" *)
  wire _0009_;
  (* src = "lib/m8_32.v:52" *)
  wire _0010_;
  wire _0011_;
  wire _0012_;
  wire _0013_;
  wire _0014_;
  wire _0015_;
  wire _0016_;
  wire _0017_;
  wire _0018_;
  wire _0019_;
  wire _0020_;
  wire _0021_;
  wire _0022_;
  wire _0023_;
  wire _0024_;
  wire _0025_;
  wire _0026_;
  wire _0027_;
  wire _0028_;
  wire _0029_;
  wire _0030_;
  wire _0031_;
  wire _0032_;
  wire _0033_;
  wire _0034_;
  wire _0035_;
  wire _0036_;
  wire _0037_;
  wire _0038_;
  wire _0039_;
  wire _0040_;
  wire _0041_;
  wire _0042_;
  wire _0043_;
  wire _0044_;
  wire _0045_;
  wire _0046_;
  wire _0047_;
  wire _0048_;
  wire _0049_;
  wire _0050_;
  wire _0051_;
  wire _0052_;
  wire _0053_;
  wire _0054_;
  wire _0055_;
  wire _0056_;
  wire _0057_;
  wire _0058_;
  wire _0059_;
  wire _0060_;
  wire _0061_;
  wire _0062_;
  wire _0063_;
  wire _0064_;
  wire _0065_;
  wire _0066_;
  wire _0067_;
  wire _0068_;
  wire _0069_;
  wire _0070_;
  wire _0071_;
  wire _0072_;
  wire _0073_;
  wire _0074_;
  wire _0075_;
  wire _0076_;
  wire _0077_;
  wire _0078_;
  wire _0079_;
  wire _0080_;
  wire _0081_;
  wire _0082_;
  wire _0083_;
  wire _0084_;
  wire _0085_;
  wire _0086_;
  wire _0087_;
  wire _0088_;
  wire _0089_;
  wire _0090_;
  wire _0091_;
  wire _0092_;
  wire _0093_;
  wire _0094_;
  wire _0095_;
  wire _0096_;
  wire _0097_;
  wire _0098_;
  wire _0099_;
  wire _0100_;
  wire _0101_;
  wire _0102_;
  wire _0103_;
  wire _0104_;
  wire _0105_;
  wire _0106_;
  wire _0107_;
  wire _0108_;
  wire _0109_;
  wire _0110_;
  wire _0111_;
  wire _0112_;
  wire _0113_;
  wire _0114_;
  wire _0115_;
  wire _0116_;
  wire _0117_;
  wire _0118_;
  wire _0119_;
  wire _0120_;
  wire _0121_;
  wire _0122_;
  wire _0123_;
  wire _0124_;
  wire _0125_;
  wire _0126_;
  wire _0127_;
  wire _0128_;
  wire _0129_;
  wire _0130_;
  wire _0131_;
  wire _0132_;
  wire _0133_;
  wire _0134_;
  wire _0135_;
  wire _0136_;
  wire _0137_;
  wire _0138_;
  wire _0139_;
  wire _0140_;
  wire _0141_;
  wire _0142_;
  wire _0143_;
  wire _0144_;
  wire _0145_;
  wire _0146_;
  wire _0147_;
  wire _0148_;
  wire _0149_;
  wire _0150_;
  wire _0151_;
  wire _0152_;
  wire _0153_;
  wire _0154_;
  wire _0155_;
  wire _0156_;
  wire _0157_;
  wire _0158_;
  wire _0159_;
  wire _0160_;
  wire _0161_;
  wire _0162_;
  wire _0163_;
  wire _0164_;
  wire _0165_;
  wire _0166_;
  wire _0167_;
  wire _0168_;
  wire _0169_;
  wire _0170_;
  wire _0171_;
  wire _0172_;
  wire _0173_;
  wire _0174_;
  wire _0175_;
  wire _0176_;
  wire _0177_;
  wire _0178_;
  wire _0179_;
  wire _0180_;
  wire _0181_;
  wire _0182_;
  wire _0183_;
  wire _0184_;
  wire _0185_;
  wire _0186_;
  wire _0187_;
  wire _0188_;
  wire _0189_;
  wire _0190_;
  wire _0191_;
  wire _0192_;
  wire _0193_;
  wire _0194_;
  wire _0195_;
  wire _0196_;
  wire _0197_;
  wire _0198_;
  wire _0199_;
  wire _0200_;
  wire _0201_;
  wire _0202_;
  wire _0203_;
  wire _0204_;
  wire _0205_;
  wire _0206_;
  wire _0207_;
  wire _0208_;
  wire _0209_;
  wire _0210_;
  wire _0211_;
  wire _0212_;
  wire _0213_;
  wire _0214_;
  wire _0215_;
  wire _0216_;
  wire _0217_;
  wire _0218_;
  wire _0219_;
  wire _0220_;
  wire _0221_;
  wire _0222_;
  wire _0223_;
  wire _0224_;
  wire _0225_;
  wire _0226_;
  wire _0227_;
  wire _0228_;
  wire _0229_;
  wire _0230_;
  wire _0231_;
  wire _0232_;
  wire _0233_;
  wire _0234_;
  wire _0235_;
  wire _0236_;
  wire _0237_;
  wire _0238_;
  wire _0239_;
  wire _0240_;
  wire _0241_;
  wire _0242_;
  wire _0243_;
  wire _0244_;
  wire _0245_;
  wire _0246_;
  wire _0247_;
  wire _0248_;
  wire _0249_;
  wire _0250_;
  wire _0251_;
  wire _0252_;
  wire _0253_;
  wire _0254_;
  wire _0255_;
  wire _0256_;
  wire _0257_;
  wire _0258_;
  wire _0259_;
  wire _0260_;
  wire _0261_;
  wire _0262_;
  wire _0263_;
  wire _0264_;
  wire _0265_;
  wire _0266_;
  wire _0267_;
  wire _0268_;
  wire _0269_;
  wire _0270_;
  wire _0271_;
  wire _0272_;
  wire _0273_;
  wire _0274_;
  wire _0275_;
  wire _0276_;
  wire _0277_;
  wire _0278_;
  wire _0279_;
  wire _0280_;
  wire _0281_;
  wire _0282_;
  wire _0283_;
  wire _0284_;
  wire _0285_;
  wire _0286_;
  wire _0287_;
  wire _0288_;
  wire _0289_;
  wire _0290_;
  wire _0291_;
  wire _0292_;
  wire _0293_;
  wire _0294_;
  wire _0295_;
  wire _0296_;
  wire _0297_;
  wire _0298_;
  wire _0299_;
  wire _0300_;
  wire _0301_;
  wire _0302_;
  wire _0303_;
  wire _0304_;
  wire _0305_;
  wire _0306_;
  wire _0307_;
  wire _0308_;
  wire _0309_;
  wire _0310_;
  wire _0311_;
  wire _0312_;
  wire _0313_;
  wire _0314_;
  wire _0315_;
  wire _0316_;
  wire _0317_;
  wire _0318_;
  wire _0319_;
  wire _0320_;
  wire _0321_;
  wire _0322_;
  wire _0323_;
  wire _0324_;
  wire _0325_;
  wire _0326_;
  wire _0327_;
  wire _0328_;
  wire _0329_;
  wire _0330_;
  wire _0331_;
  wire _0332_;
  wire _0333_;
  wire _0334_;
  wire _0335_;
  wire _0336_;
  wire _0337_;
  wire _0338_;
  wire _0339_;
  wire _0340_;
  wire _0341_;
  wire _0342_;
  wire _0343_;
  wire _0344_;
  wire _0345_;
  wire _0346_;
  wire _0347_;
  wire _0348_;
  wire _0349_;
  wire _0350_;
  wire _0351_;
  wire _0352_;
  wire _0353_;
  wire _0354_;
  wire _0355_;
  wire _0356_;
  wire _0357_;
  wire _0358_;
  wire _0359_;
  wire _0360_;
  wire _0361_;
  wire _0362_;
  wire _0363_;
  wire _0364_;
  wire _0365_;
  wire _0366_;
  wire _0367_;
  wire _0368_;
  wire _0369_;
  wire _0370_;
  wire _0371_;
  wire _0372_;
  wire _0373_;
  wire _0374_;
  wire _0375_;
  wire _0376_;
  wire _0377_;
  wire _0378_;
  wire _0379_;
  wire _0380_;
  wire _0381_;
  wire _0382_;
  wire _0383_;
  wire _0384_;
  wire _0385_;
  wire _0386_;
  wire _0387_;
  wire _0388_;
  wire _0389_;
  wire _0390_;
  wire _0391_;
  wire _0392_;
  wire _0393_;
  wire _0394_;
  wire _0395_;
  wire _0396_;
  wire _0397_;
  wire _0398_;
  wire _0399_;
  wire _0400_;
  wire _0401_;
  wire _0402_;
  wire _0403_;
  wire _0404_;
  wire _0405_;
  wire _0406_;
  wire _0407_;
  wire _0408_;
  wire _0409_;
  wire _0410_;
  wire _0411_;
  wire _0412_;
  wire _0413_;
  (* src = "lib/m8_32.v:19" *)
  wire boomer0;
  (* src = "lib/m8_32.v:19" *)
  wire boomer1;
  (* src = "lib/m8_32.v:19" *)
  wire boomer2;
  (* src = "lib/m8_32.v:19" *)
  wire boomer3;
  (* src = "lib/m8_32.v:19" *)
  wire boomer4;
  (* src = "lib/m8_32.v:19" *)
  wire boomer5;
  (* src = "lib/m8_32.v:18" *)
  wire [31:0] buffer0;
  (* src = "lib/m8_32.v:18" *)
  wire [31:0] buffer1;
  (* src = "lib/m8_32.v:18" *)
  wire [31:0] buffer2;
  (* src = "lib/m8_32.v:18" *)
  wire [31:0] buffer3;
  (* src = "lib/m8_32.v:18" *)
  wire [31:0] buffer4;
  (* src = "lib/m8_32.v:18" *)
  wire [31:0] buffer5;
  (* src = "lib/m8_32.v:16" *)
  input clk_32f;
  (* src = "lib/m8_32.v:15" *)
  input clk_4f;
  (* src = "lib/m8_32.v:14" *)
  input clk_f;
  (* src = "lib/m8_32.v:7" *)
  output [31:0] data_8_32;
  (* src = "lib/m8_32.v:10" *)
  input [7:0] data_input;
  (* src = "lib/m8_32.v:13" *)
  input reset;
  (* src = "lib/m8_32.v:11" *)
  input sinc;
  (* src = "lib/m8_32.v:9" *)
  output sincout;
  (* src = "lib/m8_32.v:8" *)
  output valid_8_32;
  (* src = "lib/m8_32.v:12" *)
  input valid_input;
  NOT _0414_ (
    .A(sinc),
    .Y(_0018_)
  );
  NOT _0415_ (
    .A(valid_input),
    .Y(_0019_)
  );
  NOT _0416_ (
    .A(data_input[2]),
    .Y(_0020_)
  );
  NOT _0417_ (
    .A(data_input[3]),
    .Y(_0021_)
  );
  NOT _0418_ (
    .A(data_input[4]),
    .Y(_0022_)
  );
  NOT _0419_ (
    .A(data_input[5]),
    .Y(_0023_)
  );
  NOT _0420_ (
    .A(data_input[7]),
    .Y(_0024_)
  );
  NAND _0421_ (
    .A(boomer5),
    .B(sinc),
    .Y(_0025_)
  );
  NAND _0422_ (
    .A(boomer3),
    .B(_0018_),
    .Y(_0026_)
  );
  NAND _0423_ (
    .A(_0025_),
    .B(_0026_),
    .Y(_0010_)
  );
  NAND _0424_ (
    .A(sinc),
    .B(buffer5[0]),
    .Y(_0027_)
  );
  NAND _0425_ (
    .A(_0018_),
    .B(buffer3[0]),
    .Y(_0028_)
  );
  NAND _0426_ (
    .A(_0027_),
    .B(_0028_),
    .Y(_0008_[0])
  );
  NAND _0427_ (
    .A(sinc),
    .B(buffer5[1]),
    .Y(_0029_)
  );
  NAND _0428_ (
    .A(_0018_),
    .B(buffer3[1]),
    .Y(_0030_)
  );
  NAND _0429_ (
    .A(_0029_),
    .B(_0030_),
    .Y(_0008_[1])
  );
  NAND _0430_ (
    .A(sinc),
    .B(buffer5[2]),
    .Y(_0031_)
  );
  NAND _0431_ (
    .A(_0018_),
    .B(buffer3[2]),
    .Y(_0032_)
  );
  NAND _0432_ (
    .A(_0031_),
    .B(_0032_),
    .Y(_0008_[2])
  );
  NAND _0433_ (
    .A(sinc),
    .B(buffer5[3]),
    .Y(_0033_)
  );
  NAND _0434_ (
    .A(_0018_),
    .B(buffer3[3]),
    .Y(_0034_)
  );
  NAND _0435_ (
    .A(_0033_),
    .B(_0034_),
    .Y(_0008_[3])
  );
  NAND _0436_ (
    .A(sinc),
    .B(buffer5[4]),
    .Y(_0035_)
  );
  NAND _0437_ (
    .A(_0018_),
    .B(buffer3[4]),
    .Y(_0036_)
  );
  NAND _0438_ (
    .A(_0035_),
    .B(_0036_),
    .Y(_0008_[4])
  );
  NAND _0439_ (
    .A(sinc),
    .B(buffer5[5]),
    .Y(_0037_)
  );
  NAND _0440_ (
    .A(_0018_),
    .B(buffer3[5]),
    .Y(_0038_)
  );
  NAND _0441_ (
    .A(_0037_),
    .B(_0038_),
    .Y(_0008_[5])
  );
  NAND _0442_ (
    .A(sinc),
    .B(buffer5[6]),
    .Y(_0039_)
  );
  NAND _0443_ (
    .A(_0018_),
    .B(buffer3[6]),
    .Y(_0040_)
  );
  NAND _0444_ (
    .A(_0039_),
    .B(_0040_),
    .Y(_0008_[6])
  );
  NAND _0445_ (
    .A(sinc),
    .B(buffer5[7]),
    .Y(_0041_)
  );
  NAND _0446_ (
    .A(_0018_),
    .B(buffer3[7]),
    .Y(_0042_)
  );
  NAND _0447_ (
    .A(_0041_),
    .B(_0042_),
    .Y(_0008_[7])
  );
  NAND _0448_ (
    .A(sinc),
    .B(buffer5[8]),
    .Y(_0043_)
  );
  NAND _0449_ (
    .A(_0018_),
    .B(buffer3[8]),
    .Y(_0044_)
  );
  NAND _0450_ (
    .A(_0043_),
    .B(_0044_),
    .Y(_0008_[8])
  );
  NAND _0451_ (
    .A(sinc),
    .B(buffer5[9]),
    .Y(_0045_)
  );
  NAND _0452_ (
    .A(_0018_),
    .B(buffer3[9]),
    .Y(_0046_)
  );
  NAND _0453_ (
    .A(_0045_),
    .B(_0046_),
    .Y(_0008_[9])
  );
  NAND _0454_ (
    .A(sinc),
    .B(buffer5[10]),
    .Y(_0047_)
  );
  NAND _0455_ (
    .A(_0018_),
    .B(buffer3[10]),
    .Y(_0048_)
  );
  NAND _0456_ (
    .A(_0047_),
    .B(_0048_),
    .Y(_0008_[10])
  );
  NAND _0457_ (
    .A(sinc),
    .B(buffer5[11]),
    .Y(_0049_)
  );
  NAND _0458_ (
    .A(_0018_),
    .B(buffer3[11]),
    .Y(_0050_)
  );
  NAND _0459_ (
    .A(_0049_),
    .B(_0050_),
    .Y(_0008_[11])
  );
  NAND _0460_ (
    .A(sinc),
    .B(buffer5[12]),
    .Y(_0051_)
  );
  NAND _0461_ (
    .A(_0018_),
    .B(buffer3[12]),
    .Y(_0052_)
  );
  NAND _0462_ (
    .A(_0051_),
    .B(_0052_),
    .Y(_0008_[12])
  );
  NAND _0463_ (
    .A(sinc),
    .B(buffer5[13]),
    .Y(_0053_)
  );
  NAND _0464_ (
    .A(_0018_),
    .B(buffer3[13]),
    .Y(_0054_)
  );
  NAND _0465_ (
    .A(_0053_),
    .B(_0054_),
    .Y(_0008_[13])
  );
  NAND _0466_ (
    .A(sinc),
    .B(buffer5[14]),
    .Y(_0055_)
  );
  NAND _0467_ (
    .A(_0018_),
    .B(buffer3[14]),
    .Y(_0056_)
  );
  NAND _0468_ (
    .A(_0055_),
    .B(_0056_),
    .Y(_0008_[14])
  );
  NAND _0469_ (
    .A(sinc),
    .B(buffer5[15]),
    .Y(_0057_)
  );
  NAND _0470_ (
    .A(_0018_),
    .B(buffer3[15]),
    .Y(_0058_)
  );
  NAND _0471_ (
    .A(_0057_),
    .B(_0058_),
    .Y(_0008_[15])
  );
  NAND _0472_ (
    .A(sinc),
    .B(buffer5[16]),
    .Y(_0059_)
  );
  NAND _0473_ (
    .A(_0018_),
    .B(buffer3[16]),
    .Y(_0060_)
  );
  NAND _0474_ (
    .A(_0059_),
    .B(_0060_),
    .Y(_0008_[16])
  );
  NAND _0475_ (
    .A(sinc),
    .B(buffer5[17]),
    .Y(_0061_)
  );
  NAND _0476_ (
    .A(_0018_),
    .B(buffer3[17]),
    .Y(_0062_)
  );
  NAND _0477_ (
    .A(_0061_),
    .B(_0062_),
    .Y(_0008_[17])
  );
  NAND _0478_ (
    .A(sinc),
    .B(buffer5[18]),
    .Y(_0063_)
  );
  NAND _0479_ (
    .A(_0018_),
    .B(buffer3[18]),
    .Y(_0064_)
  );
  NAND _0480_ (
    .A(_0063_),
    .B(_0064_),
    .Y(_0008_[18])
  );
  NAND _0481_ (
    .A(sinc),
    .B(buffer5[19]),
    .Y(_0065_)
  );
  NAND _0482_ (
    .A(_0018_),
    .B(buffer3[19]),
    .Y(_0066_)
  );
  NAND _0483_ (
    .A(_0065_),
    .B(_0066_),
    .Y(_0008_[19])
  );
  NAND _0484_ (
    .A(sinc),
    .B(buffer5[20]),
    .Y(_0067_)
  );
  NAND _0485_ (
    .A(_0018_),
    .B(buffer3[20]),
    .Y(_0068_)
  );
  NAND _0486_ (
    .A(_0067_),
    .B(_0068_),
    .Y(_0008_[20])
  );
  NAND _0487_ (
    .A(sinc),
    .B(buffer5[21]),
    .Y(_0069_)
  );
  NAND _0488_ (
    .A(_0018_),
    .B(buffer3[21]),
    .Y(_0070_)
  );
  NAND _0489_ (
    .A(_0069_),
    .B(_0070_),
    .Y(_0008_[21])
  );
  NAND _0490_ (
    .A(sinc),
    .B(buffer5[22]),
    .Y(_0071_)
  );
  NAND _0491_ (
    .A(_0018_),
    .B(buffer3[22]),
    .Y(_0072_)
  );
  NAND _0492_ (
    .A(_0071_),
    .B(_0072_),
    .Y(_0008_[22])
  );
  NAND _0493_ (
    .A(sinc),
    .B(buffer5[23]),
    .Y(_0073_)
  );
  NAND _0494_ (
    .A(_0018_),
    .B(buffer3[23]),
    .Y(_0074_)
  );
  NAND _0495_ (
    .A(_0073_),
    .B(_0074_),
    .Y(_0008_[23])
  );
  NAND _0496_ (
    .A(sinc),
    .B(buffer5[24]),
    .Y(_0075_)
  );
  NAND _0497_ (
    .A(_0018_),
    .B(buffer3[24]),
    .Y(_0076_)
  );
  NAND _0498_ (
    .A(_0075_),
    .B(_0076_),
    .Y(_0008_[24])
  );
  NAND _0499_ (
    .A(sinc),
    .B(buffer5[25]),
    .Y(_0077_)
  );
  NAND _0500_ (
    .A(_0018_),
    .B(buffer3[25]),
    .Y(_0078_)
  );
  NAND _0501_ (
    .A(_0077_),
    .B(_0078_),
    .Y(_0008_[25])
  );
  NAND _0502_ (
    .A(sinc),
    .B(buffer5[26]),
    .Y(_0079_)
  );
  NAND _0503_ (
    .A(_0018_),
    .B(buffer3[26]),
    .Y(_0080_)
  );
  NAND _0504_ (
    .A(_0079_),
    .B(_0080_),
    .Y(_0008_[26])
  );
  NAND _0505_ (
    .A(sinc),
    .B(buffer5[27]),
    .Y(_0081_)
  );
  NAND _0506_ (
    .A(_0018_),
    .B(buffer3[27]),
    .Y(_0082_)
  );
  NAND _0507_ (
    .A(_0081_),
    .B(_0082_),
    .Y(_0008_[27])
  );
  NAND _0508_ (
    .A(sinc),
    .B(buffer5[28]),
    .Y(_0083_)
  );
  NAND _0509_ (
    .A(_0018_),
    .B(buffer3[28]),
    .Y(_0084_)
  );
  NAND _0510_ (
    .A(_0083_),
    .B(_0084_),
    .Y(_0008_[28])
  );
  NAND _0511_ (
    .A(sinc),
    .B(buffer5[29]),
    .Y(_0085_)
  );
  NAND _0512_ (
    .A(_0018_),
    .B(buffer3[29]),
    .Y(_0086_)
  );
  NAND _0513_ (
    .A(_0085_),
    .B(_0086_),
    .Y(_0008_[29])
  );
  NAND _0514_ (
    .A(sinc),
    .B(buffer5[30]),
    .Y(_0087_)
  );
  NAND _0515_ (
    .A(_0018_),
    .B(buffer3[30]),
    .Y(_0088_)
  );
  NAND _0516_ (
    .A(_0087_),
    .B(_0088_),
    .Y(_0008_[30])
  );
  NAND _0517_ (
    .A(sinc),
    .B(buffer5[31]),
    .Y(_0089_)
  );
  NAND _0518_ (
    .A(_0018_),
    .B(buffer3[31]),
    .Y(_0090_)
  );
  NAND _0519_ (
    .A(_0089_),
    .B(_0090_),
    .Y(_0008_[31])
  );
  NOR _0520_ (
    .A(_0018_),
    .B(_0019_),
    .Y(_0091_)
  );
  NAND _0521_ (
    .A(sinc),
    .B(valid_input),
    .Y(_0092_)
  );
  NAND _0522_ (
    .A(buffer4[0]),
    .B(_0091_),
    .Y(_0093_)
  );
  NAND _0523_ (
    .A(buffer5[0]),
    .B(_0092_),
    .Y(_0094_)
  );
  NAND _0524_ (
    .A(_0093_),
    .B(_0094_),
    .Y(_0007_[0])
  );
  NAND _0525_ (
    .A(buffer4[1]),
    .B(_0091_),
    .Y(_0095_)
  );
  NAND _0526_ (
    .A(buffer5[1]),
    .B(_0092_),
    .Y(_0096_)
  );
  NAND _0527_ (
    .A(_0095_),
    .B(_0096_),
    .Y(_0007_[1])
  );
  NAND _0528_ (
    .A(buffer4[2]),
    .B(_0091_),
    .Y(_0097_)
  );
  NAND _0529_ (
    .A(buffer5[2]),
    .B(_0092_),
    .Y(_0098_)
  );
  NAND _0530_ (
    .A(_0097_),
    .B(_0098_),
    .Y(_0007_[2])
  );
  NAND _0531_ (
    .A(buffer4[3]),
    .B(_0091_),
    .Y(_0099_)
  );
  NAND _0532_ (
    .A(buffer5[3]),
    .B(_0092_),
    .Y(_0100_)
  );
  NAND _0533_ (
    .A(_0099_),
    .B(_0100_),
    .Y(_0007_[3])
  );
  NAND _0534_ (
    .A(buffer4[4]),
    .B(_0091_),
    .Y(_0101_)
  );
  NAND _0535_ (
    .A(buffer5[4]),
    .B(_0092_),
    .Y(_0102_)
  );
  NAND _0536_ (
    .A(_0101_),
    .B(_0102_),
    .Y(_0007_[4])
  );
  NAND _0537_ (
    .A(buffer4[5]),
    .B(_0091_),
    .Y(_0103_)
  );
  NAND _0538_ (
    .A(buffer5[5]),
    .B(_0092_),
    .Y(_0104_)
  );
  NAND _0539_ (
    .A(_0103_),
    .B(_0104_),
    .Y(_0007_[5])
  );
  NAND _0540_ (
    .A(buffer4[6]),
    .B(_0091_),
    .Y(_0105_)
  );
  NAND _0541_ (
    .A(buffer5[6]),
    .B(_0092_),
    .Y(_0106_)
  );
  NAND _0542_ (
    .A(_0105_),
    .B(_0106_),
    .Y(_0007_[6])
  );
  NAND _0543_ (
    .A(buffer4[7]),
    .B(_0091_),
    .Y(_0107_)
  );
  NAND _0544_ (
    .A(buffer5[7]),
    .B(_0092_),
    .Y(_0108_)
  );
  NAND _0545_ (
    .A(_0107_),
    .B(_0108_),
    .Y(_0007_[7])
  );
  NAND _0546_ (
    .A(buffer4[8]),
    .B(_0091_),
    .Y(_0109_)
  );
  NAND _0547_ (
    .A(buffer5[8]),
    .B(_0092_),
    .Y(_0110_)
  );
  NAND _0548_ (
    .A(_0109_),
    .B(_0110_),
    .Y(_0007_[8])
  );
  NAND _0549_ (
    .A(buffer4[9]),
    .B(_0091_),
    .Y(_0111_)
  );
  NAND _0550_ (
    .A(buffer5[9]),
    .B(_0092_),
    .Y(_0112_)
  );
  NAND _0551_ (
    .A(_0111_),
    .B(_0112_),
    .Y(_0007_[9])
  );
  NAND _0552_ (
    .A(buffer4[10]),
    .B(_0091_),
    .Y(_0113_)
  );
  NAND _0553_ (
    .A(buffer5[10]),
    .B(_0092_),
    .Y(_0114_)
  );
  NAND _0554_ (
    .A(_0113_),
    .B(_0114_),
    .Y(_0007_[10])
  );
  NAND _0555_ (
    .A(buffer4[11]),
    .B(_0091_),
    .Y(_0115_)
  );
  NAND _0556_ (
    .A(buffer5[11]),
    .B(_0092_),
    .Y(_0116_)
  );
  NAND _0557_ (
    .A(_0115_),
    .B(_0116_),
    .Y(_0007_[11])
  );
  NAND _0558_ (
    .A(buffer4[12]),
    .B(_0091_),
    .Y(_0117_)
  );
  NAND _0559_ (
    .A(buffer5[12]),
    .B(_0092_),
    .Y(_0118_)
  );
  NAND _0560_ (
    .A(_0117_),
    .B(_0118_),
    .Y(_0007_[12])
  );
  NAND _0561_ (
    .A(buffer4[13]),
    .B(_0091_),
    .Y(_0119_)
  );
  NAND _0562_ (
    .A(buffer5[13]),
    .B(_0092_),
    .Y(_0120_)
  );
  NAND _0563_ (
    .A(_0119_),
    .B(_0120_),
    .Y(_0007_[13])
  );
  NAND _0564_ (
    .A(buffer4[14]),
    .B(_0091_),
    .Y(_0121_)
  );
  NAND _0565_ (
    .A(buffer5[14]),
    .B(_0092_),
    .Y(_0122_)
  );
  NAND _0566_ (
    .A(_0121_),
    .B(_0122_),
    .Y(_0007_[14])
  );
  NAND _0567_ (
    .A(buffer4[15]),
    .B(_0091_),
    .Y(_0123_)
  );
  NAND _0568_ (
    .A(buffer5[15]),
    .B(_0092_),
    .Y(_0124_)
  );
  NAND _0569_ (
    .A(_0123_),
    .B(_0124_),
    .Y(_0007_[15])
  );
  NAND _0570_ (
    .A(buffer4[16]),
    .B(_0091_),
    .Y(_0125_)
  );
  NAND _0571_ (
    .A(buffer5[16]),
    .B(_0092_),
    .Y(_0126_)
  );
  NAND _0572_ (
    .A(_0125_),
    .B(_0126_),
    .Y(_0007_[16])
  );
  NAND _0573_ (
    .A(buffer4[17]),
    .B(_0091_),
    .Y(_0127_)
  );
  NAND _0574_ (
    .A(buffer5[17]),
    .B(_0092_),
    .Y(_0128_)
  );
  NAND _0575_ (
    .A(_0127_),
    .B(_0128_),
    .Y(_0007_[17])
  );
  NAND _0576_ (
    .A(buffer4[18]),
    .B(_0091_),
    .Y(_0129_)
  );
  NAND _0577_ (
    .A(buffer5[18]),
    .B(_0092_),
    .Y(_0130_)
  );
  NAND _0578_ (
    .A(_0129_),
    .B(_0130_),
    .Y(_0007_[18])
  );
  NAND _0579_ (
    .A(buffer4[19]),
    .B(_0091_),
    .Y(_0131_)
  );
  NAND _0580_ (
    .A(buffer5[19]),
    .B(_0092_),
    .Y(_0132_)
  );
  NAND _0581_ (
    .A(_0131_),
    .B(_0132_),
    .Y(_0007_[19])
  );
  NAND _0582_ (
    .A(buffer4[20]),
    .B(_0091_),
    .Y(_0133_)
  );
  NAND _0583_ (
    .A(buffer5[20]),
    .B(_0092_),
    .Y(_0134_)
  );
  NAND _0584_ (
    .A(_0133_),
    .B(_0134_),
    .Y(_0007_[20])
  );
  NAND _0585_ (
    .A(buffer4[21]),
    .B(_0091_),
    .Y(_0135_)
  );
  NAND _0586_ (
    .A(buffer5[21]),
    .B(_0092_),
    .Y(_0136_)
  );
  NAND _0587_ (
    .A(_0135_),
    .B(_0136_),
    .Y(_0007_[21])
  );
  NAND _0588_ (
    .A(buffer4[22]),
    .B(_0091_),
    .Y(_0137_)
  );
  NAND _0589_ (
    .A(buffer5[22]),
    .B(_0092_),
    .Y(_0138_)
  );
  NAND _0590_ (
    .A(_0137_),
    .B(_0138_),
    .Y(_0007_[22])
  );
  NAND _0591_ (
    .A(buffer4[23]),
    .B(_0091_),
    .Y(_0139_)
  );
  NAND _0592_ (
    .A(buffer5[23]),
    .B(_0092_),
    .Y(_0140_)
  );
  NAND _0593_ (
    .A(_0139_),
    .B(_0140_),
    .Y(_0007_[23])
  );
  NAND _0594_ (
    .A(buffer4[24]),
    .B(_0091_),
    .Y(_0141_)
  );
  NAND _0595_ (
    .A(buffer5[24]),
    .B(_0092_),
    .Y(_0142_)
  );
  NAND _0596_ (
    .A(_0141_),
    .B(_0142_),
    .Y(_0007_[24])
  );
  NAND _0597_ (
    .A(buffer4[25]),
    .B(_0091_),
    .Y(_0143_)
  );
  NAND _0598_ (
    .A(buffer5[25]),
    .B(_0092_),
    .Y(_0144_)
  );
  NAND _0599_ (
    .A(_0143_),
    .B(_0144_),
    .Y(_0007_[25])
  );
  NAND _0600_ (
    .A(buffer4[26]),
    .B(_0091_),
    .Y(_0145_)
  );
  NAND _0601_ (
    .A(buffer5[26]),
    .B(_0092_),
    .Y(_0146_)
  );
  NAND _0602_ (
    .A(_0145_),
    .B(_0146_),
    .Y(_0007_[26])
  );
  NAND _0603_ (
    .A(buffer4[27]),
    .B(_0091_),
    .Y(_0147_)
  );
  NAND _0604_ (
    .A(buffer5[27]),
    .B(_0092_),
    .Y(_0148_)
  );
  NAND _0605_ (
    .A(_0147_),
    .B(_0148_),
    .Y(_0007_[27])
  );
  NAND _0606_ (
    .A(buffer4[28]),
    .B(_0091_),
    .Y(_0149_)
  );
  NAND _0607_ (
    .A(buffer5[28]),
    .B(_0092_),
    .Y(_0150_)
  );
  NAND _0608_ (
    .A(_0149_),
    .B(_0150_),
    .Y(_0007_[28])
  );
  NAND _0609_ (
    .A(buffer4[29]),
    .B(_0091_),
    .Y(_0151_)
  );
  NAND _0610_ (
    .A(buffer5[29]),
    .B(_0092_),
    .Y(_0152_)
  );
  NAND _0611_ (
    .A(_0151_),
    .B(_0152_),
    .Y(_0007_[29])
  );
  NAND _0612_ (
    .A(buffer4[30]),
    .B(_0091_),
    .Y(_0153_)
  );
  NAND _0613_ (
    .A(buffer5[30]),
    .B(_0092_),
    .Y(_0154_)
  );
  NAND _0614_ (
    .A(_0153_),
    .B(_0154_),
    .Y(_0007_[30])
  );
  NAND _0615_ (
    .A(buffer4[31]),
    .B(_0091_),
    .Y(_0155_)
  );
  NAND _0616_ (
    .A(buffer5[31]),
    .B(_0092_),
    .Y(_0156_)
  );
  NAND _0617_ (
    .A(_0155_),
    .B(_0156_),
    .Y(_0007_[31])
  );
  NAND _0618_ (
    .A(boomer3),
    .B(sinc),
    .Y(_0157_)
  );
  NAND _0619_ (
    .A(_0018_),
    .B(boomer4),
    .Y(_0158_)
  );
  NAND _0620_ (
    .A(_0157_),
    .B(_0158_),
    .Y(_0000_)
  );
  NAND _0621_ (
    .A(valid_input),
    .B(buffer2[0]),
    .Y(_0159_)
  );
  NAND _0622_ (
    .A(buffer3[0]),
    .B(_0019_),
    .Y(_0160_)
  );
  NAND _0623_ (
    .A(_0159_),
    .B(_0160_),
    .Y(_0005_[0])
  );
  NAND _0624_ (
    .A(valid_input),
    .B(buffer2[1]),
    .Y(_0161_)
  );
  NAND _0625_ (
    .A(buffer3[1]),
    .B(_0019_),
    .Y(_0162_)
  );
  NAND _0626_ (
    .A(_0161_),
    .B(_0162_),
    .Y(_0005_[1])
  );
  NAND _0627_ (
    .A(valid_input),
    .B(buffer2[2]),
    .Y(_0163_)
  );
  NAND _0628_ (
    .A(buffer3[2]),
    .B(_0019_),
    .Y(_0164_)
  );
  NAND _0629_ (
    .A(_0163_),
    .B(_0164_),
    .Y(_0005_[2])
  );
  NAND _0630_ (
    .A(valid_input),
    .B(buffer2[3]),
    .Y(_0165_)
  );
  NAND _0631_ (
    .A(buffer3[3]),
    .B(_0019_),
    .Y(_0166_)
  );
  NAND _0632_ (
    .A(_0165_),
    .B(_0166_),
    .Y(_0005_[3])
  );
  NAND _0633_ (
    .A(valid_input),
    .B(buffer2[4]),
    .Y(_0167_)
  );
  NAND _0634_ (
    .A(buffer3[4]),
    .B(_0019_),
    .Y(_0168_)
  );
  NAND _0635_ (
    .A(_0167_),
    .B(_0168_),
    .Y(_0005_[4])
  );
  NAND _0636_ (
    .A(valid_input),
    .B(buffer2[5]),
    .Y(_0169_)
  );
  NAND _0637_ (
    .A(buffer3[5]),
    .B(_0019_),
    .Y(_0170_)
  );
  NAND _0638_ (
    .A(_0169_),
    .B(_0170_),
    .Y(_0005_[5])
  );
  NAND _0639_ (
    .A(valid_input),
    .B(buffer2[6]),
    .Y(_0171_)
  );
  NAND _0640_ (
    .A(buffer3[6]),
    .B(_0019_),
    .Y(_0172_)
  );
  NAND _0641_ (
    .A(_0171_),
    .B(_0172_),
    .Y(_0005_[6])
  );
  NAND _0642_ (
    .A(valid_input),
    .B(buffer2[7]),
    .Y(_0173_)
  );
  NAND _0643_ (
    .A(buffer3[7]),
    .B(_0019_),
    .Y(_0174_)
  );
  NAND _0644_ (
    .A(_0173_),
    .B(_0174_),
    .Y(_0005_[7])
  );
  NAND _0645_ (
    .A(valid_input),
    .B(buffer2[8]),
    .Y(_0175_)
  );
  NAND _0646_ (
    .A(buffer3[8]),
    .B(_0019_),
    .Y(_0176_)
  );
  NAND _0647_ (
    .A(_0175_),
    .B(_0176_),
    .Y(_0005_[8])
  );
  NAND _0648_ (
    .A(valid_input),
    .B(buffer2[9]),
    .Y(_0177_)
  );
  NAND _0649_ (
    .A(buffer3[9]),
    .B(_0019_),
    .Y(_0178_)
  );
  NAND _0650_ (
    .A(_0177_),
    .B(_0178_),
    .Y(_0005_[9])
  );
  NAND _0651_ (
    .A(valid_input),
    .B(buffer2[10]),
    .Y(_0179_)
  );
  NAND _0652_ (
    .A(buffer3[10]),
    .B(_0019_),
    .Y(_0180_)
  );
  NAND _0653_ (
    .A(_0179_),
    .B(_0180_),
    .Y(_0005_[10])
  );
  NAND _0654_ (
    .A(valid_input),
    .B(buffer2[11]),
    .Y(_0181_)
  );
  NAND _0655_ (
    .A(buffer3[11]),
    .B(_0019_),
    .Y(_0182_)
  );
  NAND _0656_ (
    .A(_0181_),
    .B(_0182_),
    .Y(_0005_[11])
  );
  NAND _0657_ (
    .A(valid_input),
    .B(buffer2[12]),
    .Y(_0183_)
  );
  NAND _0658_ (
    .A(buffer3[12]),
    .B(_0019_),
    .Y(_0184_)
  );
  NAND _0659_ (
    .A(_0183_),
    .B(_0184_),
    .Y(_0005_[12])
  );
  NAND _0660_ (
    .A(valid_input),
    .B(buffer2[13]),
    .Y(_0185_)
  );
  NAND _0661_ (
    .A(buffer3[13]),
    .B(_0019_),
    .Y(_0186_)
  );
  NAND _0662_ (
    .A(_0185_),
    .B(_0186_),
    .Y(_0005_[13])
  );
  NAND _0663_ (
    .A(valid_input),
    .B(buffer2[14]),
    .Y(_0187_)
  );
  NAND _0664_ (
    .A(buffer3[14]),
    .B(_0019_),
    .Y(_0188_)
  );
  NAND _0665_ (
    .A(_0187_),
    .B(_0188_),
    .Y(_0005_[14])
  );
  NAND _0666_ (
    .A(valid_input),
    .B(buffer2[15]),
    .Y(_0189_)
  );
  NAND _0667_ (
    .A(buffer3[15]),
    .B(_0019_),
    .Y(_0190_)
  );
  NAND _0668_ (
    .A(_0189_),
    .B(_0190_),
    .Y(_0005_[15])
  );
  NAND _0669_ (
    .A(valid_input),
    .B(buffer2[16]),
    .Y(_0191_)
  );
  NAND _0670_ (
    .A(buffer3[16]),
    .B(_0019_),
    .Y(_0192_)
  );
  NAND _0671_ (
    .A(_0191_),
    .B(_0192_),
    .Y(_0005_[16])
  );
  NAND _0672_ (
    .A(valid_input),
    .B(buffer2[17]),
    .Y(_0193_)
  );
  NAND _0673_ (
    .A(buffer3[17]),
    .B(_0019_),
    .Y(_0194_)
  );
  NAND _0674_ (
    .A(_0193_),
    .B(_0194_),
    .Y(_0005_[17])
  );
  NAND _0675_ (
    .A(valid_input),
    .B(buffer2[18]),
    .Y(_0195_)
  );
  NAND _0676_ (
    .A(buffer3[18]),
    .B(_0019_),
    .Y(_0196_)
  );
  NAND _0677_ (
    .A(_0195_),
    .B(_0196_),
    .Y(_0005_[18])
  );
  NAND _0678_ (
    .A(valid_input),
    .B(buffer2[19]),
    .Y(_0197_)
  );
  NAND _0679_ (
    .A(buffer3[19]),
    .B(_0019_),
    .Y(_0198_)
  );
  NAND _0680_ (
    .A(_0197_),
    .B(_0198_),
    .Y(_0005_[19])
  );
  NAND _0681_ (
    .A(valid_input),
    .B(buffer2[20]),
    .Y(_0199_)
  );
  NAND _0682_ (
    .A(buffer3[20]),
    .B(_0019_),
    .Y(_0200_)
  );
  NAND _0683_ (
    .A(_0199_),
    .B(_0200_),
    .Y(_0005_[20])
  );
  NAND _0684_ (
    .A(valid_input),
    .B(buffer2[21]),
    .Y(_0201_)
  );
  NAND _0685_ (
    .A(buffer3[21]),
    .B(_0019_),
    .Y(_0202_)
  );
  NAND _0686_ (
    .A(_0201_),
    .B(_0202_),
    .Y(_0005_[21])
  );
  NAND _0687_ (
    .A(valid_input),
    .B(buffer2[22]),
    .Y(_0203_)
  );
  NAND _0688_ (
    .A(buffer3[22]),
    .B(_0019_),
    .Y(_0204_)
  );
  NAND _0689_ (
    .A(_0203_),
    .B(_0204_),
    .Y(_0005_[22])
  );
  NAND _0690_ (
    .A(valid_input),
    .B(buffer2[23]),
    .Y(_0205_)
  );
  NAND _0691_ (
    .A(buffer3[23]),
    .B(_0019_),
    .Y(_0206_)
  );
  NAND _0692_ (
    .A(_0205_),
    .B(_0206_),
    .Y(_0005_[23])
  );
  NAND _0693_ (
    .A(valid_input),
    .B(buffer2[24]),
    .Y(_0207_)
  );
  NAND _0694_ (
    .A(buffer3[24]),
    .B(_0019_),
    .Y(_0208_)
  );
  NAND _0695_ (
    .A(_0207_),
    .B(_0208_),
    .Y(_0005_[24])
  );
  NAND _0696_ (
    .A(valid_input),
    .B(buffer2[25]),
    .Y(_0209_)
  );
  NAND _0697_ (
    .A(buffer3[25]),
    .B(_0019_),
    .Y(_0210_)
  );
  NAND _0698_ (
    .A(_0209_),
    .B(_0210_),
    .Y(_0005_[25])
  );
  NAND _0699_ (
    .A(valid_input),
    .B(buffer2[26]),
    .Y(_0211_)
  );
  NAND _0700_ (
    .A(buffer3[26]),
    .B(_0019_),
    .Y(_0212_)
  );
  NAND _0701_ (
    .A(_0211_),
    .B(_0212_),
    .Y(_0005_[26])
  );
  NAND _0702_ (
    .A(valid_input),
    .B(buffer2[27]),
    .Y(_0213_)
  );
  NAND _0703_ (
    .A(buffer3[27]),
    .B(_0019_),
    .Y(_0214_)
  );
  NAND _0704_ (
    .A(_0213_),
    .B(_0214_),
    .Y(_0005_[27])
  );
  NAND _0705_ (
    .A(valid_input),
    .B(buffer2[28]),
    .Y(_0215_)
  );
  NAND _0706_ (
    .A(buffer3[28]),
    .B(_0019_),
    .Y(_0216_)
  );
  NAND _0707_ (
    .A(_0215_),
    .B(_0216_),
    .Y(_0005_[28])
  );
  NAND _0708_ (
    .A(valid_input),
    .B(buffer2[29]),
    .Y(_0217_)
  );
  NAND _0709_ (
    .A(buffer3[29]),
    .B(_0019_),
    .Y(_0218_)
  );
  NAND _0710_ (
    .A(_0217_),
    .B(_0218_),
    .Y(_0005_[29])
  );
  NAND _0711_ (
    .A(valid_input),
    .B(buffer2[30]),
    .Y(_0219_)
  );
  NAND _0712_ (
    .A(buffer3[30]),
    .B(_0019_),
    .Y(_0220_)
  );
  NAND _0713_ (
    .A(_0219_),
    .B(_0220_),
    .Y(_0005_[30])
  );
  NAND _0714_ (
    .A(valid_input),
    .B(buffer2[31]),
    .Y(_0221_)
  );
  NAND _0715_ (
    .A(buffer3[31]),
    .B(_0019_),
    .Y(_0222_)
  );
  NAND _0716_ (
    .A(_0221_),
    .B(_0222_),
    .Y(_0005_[31])
  );
  NAND _0717_ (
    .A(buffer3[0]),
    .B(_0091_),
    .Y(_0223_)
  );
  NAND _0718_ (
    .A(buffer4[0]),
    .B(_0092_),
    .Y(_0224_)
  );
  NAND _0719_ (
    .A(_0223_),
    .B(_0224_),
    .Y(_0006_[0])
  );
  NAND _0720_ (
    .A(buffer3[1]),
    .B(_0091_),
    .Y(_0225_)
  );
  NAND _0721_ (
    .A(buffer4[1]),
    .B(_0092_),
    .Y(_0226_)
  );
  NAND _0722_ (
    .A(_0225_),
    .B(_0226_),
    .Y(_0006_[1])
  );
  NAND _0723_ (
    .A(buffer3[2]),
    .B(_0091_),
    .Y(_0227_)
  );
  NAND _0724_ (
    .A(buffer4[2]),
    .B(_0092_),
    .Y(_0228_)
  );
  NAND _0725_ (
    .A(_0227_),
    .B(_0228_),
    .Y(_0006_[2])
  );
  NAND _0726_ (
    .A(buffer3[3]),
    .B(_0091_),
    .Y(_0229_)
  );
  NAND _0727_ (
    .A(buffer4[3]),
    .B(_0092_),
    .Y(_0230_)
  );
  NAND _0728_ (
    .A(_0229_),
    .B(_0230_),
    .Y(_0006_[3])
  );
  NAND _0729_ (
    .A(buffer3[4]),
    .B(_0091_),
    .Y(_0231_)
  );
  NAND _0730_ (
    .A(buffer4[4]),
    .B(_0092_),
    .Y(_0232_)
  );
  NAND _0731_ (
    .A(_0231_),
    .B(_0232_),
    .Y(_0006_[4])
  );
  NAND _0732_ (
    .A(buffer3[5]),
    .B(_0091_),
    .Y(_0233_)
  );
  NAND _0733_ (
    .A(buffer4[5]),
    .B(_0092_),
    .Y(_0234_)
  );
  NAND _0734_ (
    .A(_0233_),
    .B(_0234_),
    .Y(_0006_[5])
  );
  NAND _0735_ (
    .A(buffer3[6]),
    .B(_0091_),
    .Y(_0235_)
  );
  NAND _0736_ (
    .A(buffer4[6]),
    .B(_0092_),
    .Y(_0236_)
  );
  NAND _0737_ (
    .A(_0235_),
    .B(_0236_),
    .Y(_0006_[6])
  );
  NAND _0738_ (
    .A(buffer3[7]),
    .B(_0091_),
    .Y(_0237_)
  );
  NAND _0739_ (
    .A(buffer4[7]),
    .B(_0092_),
    .Y(_0238_)
  );
  NAND _0740_ (
    .A(_0237_),
    .B(_0238_),
    .Y(_0006_[7])
  );
  NAND _0741_ (
    .A(buffer3[8]),
    .B(_0091_),
    .Y(_0239_)
  );
  NAND _0742_ (
    .A(buffer4[8]),
    .B(_0092_),
    .Y(_0240_)
  );
  NAND _0743_ (
    .A(_0239_),
    .B(_0240_),
    .Y(_0006_[8])
  );
  NAND _0744_ (
    .A(buffer3[9]),
    .B(_0091_),
    .Y(_0241_)
  );
  NAND _0745_ (
    .A(buffer4[9]),
    .B(_0092_),
    .Y(_0242_)
  );
  NAND _0746_ (
    .A(_0241_),
    .B(_0242_),
    .Y(_0006_[9])
  );
  NAND _0747_ (
    .A(buffer3[10]),
    .B(_0091_),
    .Y(_0243_)
  );
  NAND _0748_ (
    .A(buffer4[10]),
    .B(_0092_),
    .Y(_0244_)
  );
  NAND _0749_ (
    .A(_0243_),
    .B(_0244_),
    .Y(_0006_[10])
  );
  NAND _0750_ (
    .A(buffer3[11]),
    .B(_0091_),
    .Y(_0245_)
  );
  NAND _0751_ (
    .A(buffer4[11]),
    .B(_0092_),
    .Y(_0246_)
  );
  NAND _0752_ (
    .A(_0245_),
    .B(_0246_),
    .Y(_0006_[11])
  );
  NAND _0753_ (
    .A(buffer3[12]),
    .B(_0091_),
    .Y(_0247_)
  );
  NAND _0754_ (
    .A(buffer4[12]),
    .B(_0092_),
    .Y(_0248_)
  );
  NAND _0755_ (
    .A(_0247_),
    .B(_0248_),
    .Y(_0006_[12])
  );
  NAND _0756_ (
    .A(buffer3[13]),
    .B(_0091_),
    .Y(_0249_)
  );
  NAND _0757_ (
    .A(buffer4[13]),
    .B(_0092_),
    .Y(_0250_)
  );
  NAND _0758_ (
    .A(_0249_),
    .B(_0250_),
    .Y(_0006_[13])
  );
  NAND _0759_ (
    .A(buffer3[14]),
    .B(_0091_),
    .Y(_0251_)
  );
  NAND _0760_ (
    .A(buffer4[14]),
    .B(_0092_),
    .Y(_0252_)
  );
  NAND _0761_ (
    .A(_0251_),
    .B(_0252_),
    .Y(_0006_[14])
  );
  NAND _0762_ (
    .A(buffer3[15]),
    .B(_0091_),
    .Y(_0253_)
  );
  NAND _0763_ (
    .A(buffer4[15]),
    .B(_0092_),
    .Y(_0254_)
  );
  NAND _0764_ (
    .A(_0253_),
    .B(_0254_),
    .Y(_0006_[15])
  );
  NAND _0765_ (
    .A(buffer3[16]),
    .B(_0091_),
    .Y(_0255_)
  );
  NAND _0766_ (
    .A(buffer4[16]),
    .B(_0092_),
    .Y(_0256_)
  );
  NAND _0767_ (
    .A(_0255_),
    .B(_0256_),
    .Y(_0006_[16])
  );
  NAND _0768_ (
    .A(buffer3[17]),
    .B(_0091_),
    .Y(_0257_)
  );
  NAND _0769_ (
    .A(buffer4[17]),
    .B(_0092_),
    .Y(_0258_)
  );
  NAND _0770_ (
    .A(_0257_),
    .B(_0258_),
    .Y(_0006_[17])
  );
  NAND _0771_ (
    .A(buffer3[18]),
    .B(_0091_),
    .Y(_0259_)
  );
  NAND _0772_ (
    .A(buffer4[18]),
    .B(_0092_),
    .Y(_0260_)
  );
  NAND _0773_ (
    .A(_0259_),
    .B(_0260_),
    .Y(_0006_[18])
  );
  NAND _0774_ (
    .A(buffer3[19]),
    .B(_0091_),
    .Y(_0261_)
  );
  NAND _0775_ (
    .A(buffer4[19]),
    .B(_0092_),
    .Y(_0262_)
  );
  NAND _0776_ (
    .A(_0261_),
    .B(_0262_),
    .Y(_0006_[19])
  );
  NAND _0777_ (
    .A(buffer3[20]),
    .B(_0091_),
    .Y(_0263_)
  );
  NAND _0778_ (
    .A(buffer4[20]),
    .B(_0092_),
    .Y(_0264_)
  );
  NAND _0779_ (
    .A(_0263_),
    .B(_0264_),
    .Y(_0006_[20])
  );
  NAND _0780_ (
    .A(buffer3[21]),
    .B(_0091_),
    .Y(_0265_)
  );
  NAND _0781_ (
    .A(buffer4[21]),
    .B(_0092_),
    .Y(_0266_)
  );
  NAND _0782_ (
    .A(_0265_),
    .B(_0266_),
    .Y(_0006_[21])
  );
  NAND _0783_ (
    .A(buffer3[22]),
    .B(_0091_),
    .Y(_0267_)
  );
  NAND _0784_ (
    .A(buffer4[22]),
    .B(_0092_),
    .Y(_0268_)
  );
  NAND _0785_ (
    .A(_0267_),
    .B(_0268_),
    .Y(_0006_[22])
  );
  NAND _0786_ (
    .A(buffer3[23]),
    .B(_0091_),
    .Y(_0269_)
  );
  NAND _0787_ (
    .A(buffer4[23]),
    .B(_0092_),
    .Y(_0270_)
  );
  NAND _0788_ (
    .A(_0269_),
    .B(_0270_),
    .Y(_0006_[23])
  );
  NAND _0789_ (
    .A(buffer3[24]),
    .B(_0091_),
    .Y(_0271_)
  );
  NAND _0790_ (
    .A(buffer4[24]),
    .B(_0092_),
    .Y(_0272_)
  );
  NAND _0791_ (
    .A(_0271_),
    .B(_0272_),
    .Y(_0006_[24])
  );
  NAND _0792_ (
    .A(buffer3[25]),
    .B(_0091_),
    .Y(_0273_)
  );
  NAND _0793_ (
    .A(buffer4[25]),
    .B(_0092_),
    .Y(_0274_)
  );
  NAND _0794_ (
    .A(_0273_),
    .B(_0274_),
    .Y(_0006_[25])
  );
  NAND _0795_ (
    .A(buffer3[26]),
    .B(_0091_),
    .Y(_0275_)
  );
  NAND _0796_ (
    .A(buffer4[26]),
    .B(_0092_),
    .Y(_0276_)
  );
  NAND _0797_ (
    .A(_0275_),
    .B(_0276_),
    .Y(_0006_[26])
  );
  NAND _0798_ (
    .A(buffer3[27]),
    .B(_0091_),
    .Y(_0277_)
  );
  NAND _0799_ (
    .A(buffer4[27]),
    .B(_0092_),
    .Y(_0278_)
  );
  NAND _0800_ (
    .A(_0277_),
    .B(_0278_),
    .Y(_0006_[27])
  );
  NAND _0801_ (
    .A(buffer3[28]),
    .B(_0091_),
    .Y(_0279_)
  );
  NAND _0802_ (
    .A(buffer4[28]),
    .B(_0092_),
    .Y(_0280_)
  );
  NAND _0803_ (
    .A(_0279_),
    .B(_0280_),
    .Y(_0006_[28])
  );
  NAND _0804_ (
    .A(buffer3[29]),
    .B(_0091_),
    .Y(_0281_)
  );
  NAND _0805_ (
    .A(buffer4[29]),
    .B(_0092_),
    .Y(_0282_)
  );
  NAND _0806_ (
    .A(_0281_),
    .B(_0282_),
    .Y(_0006_[29])
  );
  NAND _0807_ (
    .A(buffer3[30]),
    .B(_0091_),
    .Y(_0283_)
  );
  NAND _0808_ (
    .A(buffer4[30]),
    .B(_0092_),
    .Y(_0284_)
  );
  NAND _0809_ (
    .A(_0283_),
    .B(_0284_),
    .Y(_0006_[30])
  );
  NAND _0810_ (
    .A(buffer3[31]),
    .B(_0091_),
    .Y(_0285_)
  );
  NAND _0811_ (
    .A(buffer4[31]),
    .B(_0092_),
    .Y(_0286_)
  );
  NAND _0812_ (
    .A(_0285_),
    .B(_0286_),
    .Y(_0006_[31])
  );
  NAND _0813_ (
    .A(valid_input),
    .B(buffer1[0]),
    .Y(_0287_)
  );
  NAND _0814_ (
    .A(_0019_),
    .B(buffer2[0]),
    .Y(_0288_)
  );
  NAND _0815_ (
    .A(_0287_),
    .B(_0288_),
    .Y(_0004_[0])
  );
  NAND _0816_ (
    .A(valid_input),
    .B(buffer1[1]),
    .Y(_0289_)
  );
  NAND _0817_ (
    .A(_0019_),
    .B(buffer2[1]),
    .Y(_0290_)
  );
  NAND _0818_ (
    .A(_0289_),
    .B(_0290_),
    .Y(_0004_[1])
  );
  NAND _0819_ (
    .A(valid_input),
    .B(buffer1[2]),
    .Y(_0291_)
  );
  NAND _0820_ (
    .A(_0019_),
    .B(buffer2[2]),
    .Y(_0292_)
  );
  NAND _0821_ (
    .A(_0291_),
    .B(_0292_),
    .Y(_0004_[2])
  );
  NAND _0822_ (
    .A(valid_input),
    .B(buffer1[3]),
    .Y(_0293_)
  );
  NAND _0823_ (
    .A(_0019_),
    .B(buffer2[3]),
    .Y(_0294_)
  );
  NAND _0824_ (
    .A(_0293_),
    .B(_0294_),
    .Y(_0004_[3])
  );
  NAND _0825_ (
    .A(valid_input),
    .B(buffer1[4]),
    .Y(_0295_)
  );
  NAND _0826_ (
    .A(_0019_),
    .B(buffer2[4]),
    .Y(_0296_)
  );
  NAND _0827_ (
    .A(_0295_),
    .B(_0296_),
    .Y(_0004_[4])
  );
  NAND _0828_ (
    .A(valid_input),
    .B(buffer1[5]),
    .Y(_0297_)
  );
  NAND _0829_ (
    .A(_0019_),
    .B(buffer2[5]),
    .Y(_0298_)
  );
  NAND _0830_ (
    .A(_0297_),
    .B(_0298_),
    .Y(_0004_[5])
  );
  NAND _0831_ (
    .A(valid_input),
    .B(buffer1[6]),
    .Y(_0299_)
  );
  NAND _0832_ (
    .A(_0019_),
    .B(buffer2[6]),
    .Y(_0300_)
  );
  NAND _0833_ (
    .A(_0299_),
    .B(_0300_),
    .Y(_0004_[6])
  );
  NAND _0834_ (
    .A(valid_input),
    .B(buffer1[7]),
    .Y(_0301_)
  );
  NAND _0835_ (
    .A(_0019_),
    .B(buffer2[7]),
    .Y(_0302_)
  );
  NAND _0836_ (
    .A(_0301_),
    .B(_0302_),
    .Y(_0004_[7])
  );
  NAND _0837_ (
    .A(valid_input),
    .B(buffer1[8]),
    .Y(_0303_)
  );
  NAND _0838_ (
    .A(_0019_),
    .B(buffer2[8]),
    .Y(_0304_)
  );
  NAND _0839_ (
    .A(_0303_),
    .B(_0304_),
    .Y(_0004_[8])
  );
  NAND _0840_ (
    .A(valid_input),
    .B(buffer1[9]),
    .Y(_0305_)
  );
  NAND _0841_ (
    .A(_0019_),
    .B(buffer2[9]),
    .Y(_0306_)
  );
  NAND _0842_ (
    .A(_0305_),
    .B(_0306_),
    .Y(_0004_[9])
  );
  NAND _0843_ (
    .A(valid_input),
    .B(buffer1[10]),
    .Y(_0307_)
  );
  NAND _0844_ (
    .A(_0019_),
    .B(buffer2[10]),
    .Y(_0308_)
  );
  NAND _0845_ (
    .A(_0307_),
    .B(_0308_),
    .Y(_0004_[10])
  );
  NAND _0846_ (
    .A(valid_input),
    .B(buffer1[11]),
    .Y(_0309_)
  );
  NAND _0847_ (
    .A(_0019_),
    .B(buffer2[11]),
    .Y(_0310_)
  );
  NAND _0848_ (
    .A(_0309_),
    .B(_0310_),
    .Y(_0004_[11])
  );
  NAND _0849_ (
    .A(valid_input),
    .B(buffer1[12]),
    .Y(_0311_)
  );
  NAND _0850_ (
    .A(_0019_),
    .B(buffer2[12]),
    .Y(_0312_)
  );
  NAND _0851_ (
    .A(_0311_),
    .B(_0312_),
    .Y(_0004_[12])
  );
  NAND _0852_ (
    .A(valid_input),
    .B(buffer1[13]),
    .Y(_0313_)
  );
  NAND _0853_ (
    .A(_0019_),
    .B(buffer2[13]),
    .Y(_0314_)
  );
  NAND _0854_ (
    .A(_0313_),
    .B(_0314_),
    .Y(_0004_[13])
  );
  NAND _0855_ (
    .A(valid_input),
    .B(buffer1[14]),
    .Y(_0315_)
  );
  NAND _0856_ (
    .A(_0019_),
    .B(buffer2[14]),
    .Y(_0316_)
  );
  NAND _0857_ (
    .A(_0315_),
    .B(_0316_),
    .Y(_0004_[14])
  );
  NAND _0858_ (
    .A(valid_input),
    .B(buffer1[15]),
    .Y(_0317_)
  );
  NAND _0859_ (
    .A(_0019_),
    .B(buffer2[15]),
    .Y(_0318_)
  );
  NAND _0860_ (
    .A(_0317_),
    .B(_0318_),
    .Y(_0004_[15])
  );
  NAND _0861_ (
    .A(valid_input),
    .B(buffer1[16]),
    .Y(_0319_)
  );
  NAND _0862_ (
    .A(_0019_),
    .B(buffer2[16]),
    .Y(_0320_)
  );
  NAND _0863_ (
    .A(_0319_),
    .B(_0320_),
    .Y(_0004_[16])
  );
  NAND _0864_ (
    .A(valid_input),
    .B(buffer1[17]),
    .Y(_0321_)
  );
  NAND _0865_ (
    .A(_0019_),
    .B(buffer2[17]),
    .Y(_0322_)
  );
  NAND _0866_ (
    .A(_0321_),
    .B(_0322_),
    .Y(_0004_[17])
  );
  NAND _0867_ (
    .A(valid_input),
    .B(buffer1[18]),
    .Y(_0323_)
  );
  NAND _0868_ (
    .A(_0019_),
    .B(buffer2[18]),
    .Y(_0324_)
  );
  NAND _0869_ (
    .A(_0323_),
    .B(_0324_),
    .Y(_0004_[18])
  );
  NAND _0870_ (
    .A(valid_input),
    .B(buffer1[19]),
    .Y(_0325_)
  );
  NAND _0871_ (
    .A(_0019_),
    .B(buffer2[19]),
    .Y(_0326_)
  );
  NAND _0872_ (
    .A(_0325_),
    .B(_0326_),
    .Y(_0004_[19])
  );
  NAND _0873_ (
    .A(valid_input),
    .B(buffer1[20]),
    .Y(_0327_)
  );
  NAND _0874_ (
    .A(_0019_),
    .B(buffer2[20]),
    .Y(_0328_)
  );
  NAND _0875_ (
    .A(_0327_),
    .B(_0328_),
    .Y(_0004_[20])
  );
  NAND _0876_ (
    .A(valid_input),
    .B(buffer1[21]),
    .Y(_0329_)
  );
  NAND _0877_ (
    .A(_0019_),
    .B(buffer2[21]),
    .Y(_0330_)
  );
  NAND _0878_ (
    .A(_0329_),
    .B(_0330_),
    .Y(_0004_[21])
  );
  NAND _0879_ (
    .A(valid_input),
    .B(buffer1[22]),
    .Y(_0331_)
  );
  NAND _0880_ (
    .A(_0019_),
    .B(buffer2[22]),
    .Y(_0332_)
  );
  NAND _0881_ (
    .A(_0331_),
    .B(_0332_),
    .Y(_0004_[22])
  );
  NAND _0882_ (
    .A(valid_input),
    .B(buffer1[23]),
    .Y(_0333_)
  );
  NAND _0883_ (
    .A(_0019_),
    .B(buffer2[23]),
    .Y(_0334_)
  );
  NAND _0884_ (
    .A(_0333_),
    .B(_0334_),
    .Y(_0004_[23])
  );
  NAND _0885_ (
    .A(valid_input),
    .B(buffer1[24]),
    .Y(_0335_)
  );
  NAND _0886_ (
    .A(_0019_),
    .B(buffer2[24]),
    .Y(_0336_)
  );
  NAND _0887_ (
    .A(_0335_),
    .B(_0336_),
    .Y(_0004_[24])
  );
  NAND _0888_ (
    .A(valid_input),
    .B(buffer1[25]),
    .Y(_0337_)
  );
  NAND _0889_ (
    .A(_0019_),
    .B(buffer2[25]),
    .Y(_0338_)
  );
  NAND _0890_ (
    .A(_0337_),
    .B(_0338_),
    .Y(_0004_[25])
  );
  NAND _0891_ (
    .A(valid_input),
    .B(buffer1[26]),
    .Y(_0339_)
  );
  NAND _0892_ (
    .A(_0019_),
    .B(buffer2[26]),
    .Y(_0340_)
  );
  NAND _0893_ (
    .A(_0339_),
    .B(_0340_),
    .Y(_0004_[26])
  );
  NAND _0894_ (
    .A(valid_input),
    .B(buffer1[27]),
    .Y(_0341_)
  );
  NAND _0895_ (
    .A(_0019_),
    .B(buffer2[27]),
    .Y(_0342_)
  );
  NAND _0896_ (
    .A(_0341_),
    .B(_0342_),
    .Y(_0004_[27])
  );
  NAND _0897_ (
    .A(valid_input),
    .B(buffer1[28]),
    .Y(_0343_)
  );
  NAND _0898_ (
    .A(_0019_),
    .B(buffer2[28]),
    .Y(_0344_)
  );
  NAND _0899_ (
    .A(_0343_),
    .B(_0344_),
    .Y(_0004_[28])
  );
  NAND _0900_ (
    .A(valid_input),
    .B(buffer1[29]),
    .Y(_0345_)
  );
  NAND _0901_ (
    .A(_0019_),
    .B(buffer2[29]),
    .Y(_0346_)
  );
  NAND _0902_ (
    .A(_0345_),
    .B(_0346_),
    .Y(_0004_[29])
  );
  NAND _0903_ (
    .A(valid_input),
    .B(buffer1[30]),
    .Y(_0347_)
  );
  NAND _0904_ (
    .A(_0019_),
    .B(buffer2[30]),
    .Y(_0348_)
  );
  NAND _0905_ (
    .A(_0347_),
    .B(_0348_),
    .Y(_0004_[30])
  );
  NAND _0906_ (
    .A(valid_input),
    .B(buffer1[31]),
    .Y(_0349_)
  );
  NAND _0907_ (
    .A(_0019_),
    .B(buffer2[31]),
    .Y(_0350_)
  );
  NAND _0908_ (
    .A(_0349_),
    .B(_0350_),
    .Y(_0004_[31])
  );
  NAND _0909_ (
    .A(valid_input),
    .B(buffer0[0]),
    .Y(_0351_)
  );
  NAND _0910_ (
    .A(_0019_),
    .B(buffer1[0]),
    .Y(_0352_)
  );
  NAND _0911_ (
    .A(_0351_),
    .B(_0352_),
    .Y(_0003_[0])
  );
  NAND _0912_ (
    .A(valid_input),
    .B(buffer0[1]),
    .Y(_0353_)
  );
  NAND _0913_ (
    .A(_0019_),
    .B(buffer1[1]),
    .Y(_0354_)
  );
  NAND _0914_ (
    .A(_0353_),
    .B(_0354_),
    .Y(_0003_[1])
  );
  NAND _0915_ (
    .A(valid_input),
    .B(buffer0[2]),
    .Y(_0355_)
  );
  NAND _0916_ (
    .A(_0019_),
    .B(buffer1[2]),
    .Y(_0356_)
  );
  NAND _0917_ (
    .A(_0355_),
    .B(_0356_),
    .Y(_0003_[2])
  );
  NAND _0918_ (
    .A(valid_input),
    .B(buffer0[3]),
    .Y(_0357_)
  );
  NAND _0919_ (
    .A(_0019_),
    .B(buffer1[3]),
    .Y(_0358_)
  );
  NAND _0920_ (
    .A(_0357_),
    .B(_0358_),
    .Y(_0003_[3])
  );
  NAND _0921_ (
    .A(valid_input),
    .B(buffer0[4]),
    .Y(_0359_)
  );
  NAND _0922_ (
    .A(_0019_),
    .B(buffer1[4]),
    .Y(_0360_)
  );
  NAND _0923_ (
    .A(_0359_),
    .B(_0360_),
    .Y(_0003_[4])
  );
  NAND _0924_ (
    .A(valid_input),
    .B(buffer0[5]),
    .Y(_0361_)
  );
  NAND _0925_ (
    .A(_0019_),
    .B(buffer1[5]),
    .Y(_0362_)
  );
  NAND _0926_ (
    .A(_0361_),
    .B(_0362_),
    .Y(_0003_[5])
  );
  NAND _0927_ (
    .A(valid_input),
    .B(buffer0[6]),
    .Y(_0363_)
  );
  NAND _0928_ (
    .A(_0019_),
    .B(buffer1[6]),
    .Y(_0364_)
  );
  NAND _0929_ (
    .A(_0363_),
    .B(_0364_),
    .Y(_0003_[6])
  );
  NAND _0930_ (
    .A(valid_input),
    .B(buffer0[7]),
    .Y(_0365_)
  );
  NAND _0931_ (
    .A(_0019_),
    .B(buffer1[7]),
    .Y(_0366_)
  );
  NAND _0932_ (
    .A(_0365_),
    .B(_0366_),
    .Y(_0003_[7])
  );
  NAND _0933_ (
    .A(valid_input),
    .B(buffer0[8]),
    .Y(_0367_)
  );
  NAND _0934_ (
    .A(_0019_),
    .B(buffer1[8]),
    .Y(_0368_)
  );
  NAND _0935_ (
    .A(_0367_),
    .B(_0368_),
    .Y(_0003_[8])
  );
  NAND _0936_ (
    .A(valid_input),
    .B(buffer0[9]),
    .Y(_0369_)
  );
  NAND _0937_ (
    .A(_0019_),
    .B(buffer1[9]),
    .Y(_0370_)
  );
  NAND _0938_ (
    .A(_0369_),
    .B(_0370_),
    .Y(_0003_[9])
  );
  NAND _0939_ (
    .A(valid_input),
    .B(buffer0[10]),
    .Y(_0371_)
  );
  NAND _0940_ (
    .A(_0019_),
    .B(buffer1[10]),
    .Y(_0372_)
  );
  NAND _0941_ (
    .A(_0371_),
    .B(_0372_),
    .Y(_0003_[10])
  );
  NAND _0942_ (
    .A(valid_input),
    .B(buffer0[11]),
    .Y(_0373_)
  );
  NAND _0943_ (
    .A(_0019_),
    .B(buffer1[11]),
    .Y(_0374_)
  );
  NAND _0944_ (
    .A(_0373_),
    .B(_0374_),
    .Y(_0003_[11])
  );
  NAND _0945_ (
    .A(valid_input),
    .B(buffer0[12]),
    .Y(_0375_)
  );
  NAND _0946_ (
    .A(_0019_),
    .B(buffer1[12]),
    .Y(_0376_)
  );
  NAND _0947_ (
    .A(_0375_),
    .B(_0376_),
    .Y(_0003_[12])
  );
  NAND _0948_ (
    .A(valid_input),
    .B(buffer0[13]),
    .Y(_0377_)
  );
  NAND _0949_ (
    .A(_0019_),
    .B(buffer1[13]),
    .Y(_0378_)
  );
  NAND _0950_ (
    .A(_0377_),
    .B(_0378_),
    .Y(_0003_[13])
  );
  NAND _0951_ (
    .A(valid_input),
    .B(buffer0[14]),
    .Y(_0379_)
  );
  NAND _0952_ (
    .A(_0019_),
    .B(buffer1[14]),
    .Y(_0380_)
  );
  NAND _0953_ (
    .A(_0379_),
    .B(_0380_),
    .Y(_0003_[14])
  );
  NAND _0954_ (
    .A(valid_input),
    .B(buffer0[15]),
    .Y(_0381_)
  );
  NAND _0955_ (
    .A(_0019_),
    .B(buffer1[15]),
    .Y(_0382_)
  );
  NAND _0956_ (
    .A(_0381_),
    .B(_0382_),
    .Y(_0003_[15])
  );
  NAND _0957_ (
    .A(valid_input),
    .B(buffer0[16]),
    .Y(_0383_)
  );
  NAND _0958_ (
    .A(_0019_),
    .B(buffer1[16]),
    .Y(_0384_)
  );
  NAND _0959_ (
    .A(_0383_),
    .B(_0384_),
    .Y(_0003_[16])
  );
  NAND _0960_ (
    .A(valid_input),
    .B(buffer0[17]),
    .Y(_0385_)
  );
  NAND _0961_ (
    .A(_0019_),
    .B(buffer1[17]),
    .Y(_0386_)
  );
  NAND _0962_ (
    .A(_0385_),
    .B(_0386_),
    .Y(_0003_[17])
  );
  NAND _0963_ (
    .A(valid_input),
    .B(buffer0[18]),
    .Y(_0387_)
  );
  NAND _0964_ (
    .A(_0019_),
    .B(buffer1[18]),
    .Y(_0388_)
  );
  NAND _0965_ (
    .A(_0387_),
    .B(_0388_),
    .Y(_0003_[18])
  );
  NAND _0966_ (
    .A(valid_input),
    .B(buffer0[19]),
    .Y(_0389_)
  );
  NAND _0967_ (
    .A(_0019_),
    .B(buffer1[19]),
    .Y(_0390_)
  );
  NAND _0968_ (
    .A(_0389_),
    .B(_0390_),
    .Y(_0003_[19])
  );
  NAND _0969_ (
    .A(valid_input),
    .B(buffer0[20]),
    .Y(_0391_)
  );
  NAND _0970_ (
    .A(_0019_),
    .B(buffer1[20]),
    .Y(_0392_)
  );
  NAND _0971_ (
    .A(_0391_),
    .B(_0392_),
    .Y(_0003_[20])
  );
  NAND _0972_ (
    .A(valid_input),
    .B(buffer0[21]),
    .Y(_0393_)
  );
  NAND _0973_ (
    .A(_0019_),
    .B(buffer1[21]),
    .Y(_0394_)
  );
  NAND _0974_ (
    .A(_0393_),
    .B(_0394_),
    .Y(_0003_[21])
  );
  NAND _0975_ (
    .A(valid_input),
    .B(buffer0[22]),
    .Y(_0395_)
  );
  NAND _0976_ (
    .A(_0019_),
    .B(buffer1[22]),
    .Y(_0396_)
  );
  NAND _0977_ (
    .A(_0395_),
    .B(_0396_),
    .Y(_0003_[22])
  );
  NAND _0978_ (
    .A(valid_input),
    .B(buffer0[23]),
    .Y(_0397_)
  );
  NAND _0979_ (
    .A(_0019_),
    .B(buffer1[23]),
    .Y(_0398_)
  );
  NAND _0980_ (
    .A(_0397_),
    .B(_0398_),
    .Y(_0003_[23])
  );
  NAND _0981_ (
    .A(valid_input),
    .B(buffer0[24]),
    .Y(_0399_)
  );
  NAND _0982_ (
    .A(_0019_),
    .B(buffer1[24]),
    .Y(_0400_)
  );
  NAND _0983_ (
    .A(_0399_),
    .B(_0400_),
    .Y(_0003_[24])
  );
  NAND _0984_ (
    .A(valid_input),
    .B(buffer0[25]),
    .Y(_0401_)
  );
  NAND _0985_ (
    .A(_0019_),
    .B(buffer1[25]),
    .Y(_0402_)
  );
  NAND _0986_ (
    .A(_0401_),
    .B(_0402_),
    .Y(_0003_[25])
  );
  NAND _0987_ (
    .A(valid_input),
    .B(buffer0[26]),
    .Y(_0403_)
  );
  NAND _0988_ (
    .A(_0019_),
    .B(buffer1[26]),
    .Y(_0404_)
  );
  NAND _0989_ (
    .A(_0403_),
    .B(_0404_),
    .Y(_0003_[26])
  );
  NAND _0990_ (
    .A(valid_input),
    .B(buffer0[27]),
    .Y(_0405_)
  );
  NAND _0991_ (
    .A(_0019_),
    .B(buffer1[27]),
    .Y(_0406_)
  );
  NAND _0992_ (
    .A(_0405_),
    .B(_0406_),
    .Y(_0003_[27])
  );
  NAND _0993_ (
    .A(valid_input),
    .B(buffer0[28]),
    .Y(_0407_)
  );
  NAND _0994_ (
    .A(_0019_),
    .B(buffer1[28]),
    .Y(_0408_)
  );
  NAND _0995_ (
    .A(_0407_),
    .B(_0408_),
    .Y(_0003_[28])
  );
  NAND _0996_ (
    .A(valid_input),
    .B(buffer0[29]),
    .Y(_0409_)
  );
  NAND _0997_ (
    .A(_0019_),
    .B(buffer1[29]),
    .Y(_0410_)
  );
  NAND _0998_ (
    .A(_0409_),
    .B(_0410_),
    .Y(_0003_[29])
  );
  NAND _0999_ (
    .A(valid_input),
    .B(buffer0[30]),
    .Y(_0411_)
  );
  NAND _1000_ (
    .A(_0019_),
    .B(buffer1[30]),
    .Y(_0412_)
  );
  NAND _1001_ (
    .A(_0411_),
    .B(_0412_),
    .Y(_0003_[30])
  );
  NAND _1002_ (
    .A(valid_input),
    .B(buffer0[31]),
    .Y(_0413_)
  );
  NAND _1003_ (
    .A(_0019_),
    .B(buffer1[31]),
    .Y(_0011_)
  );
  NAND _1004_ (
    .A(_0413_),
    .B(_0011_),
    .Y(_0003_[31])
  );
  NAND _1005_ (
    .A(valid_input),
    .B(data_input[0]),
    .Y(_0012_)
  );
  NOT _1006_ (
    .A(_0012_),
    .Y(_0002_[0])
  );
  NAND _1007_ (
    .A(valid_input),
    .B(data_input[1]),
    .Y(_0013_)
  );
  NOT _1008_ (
    .A(_0013_),
    .Y(_0002_[1])
  );
  NAND _1009_ (
    .A(valid_input),
    .B(_0020_),
    .Y(_0002_[2])
  );
  NAND _1010_ (
    .A(valid_input),
    .B(_0021_),
    .Y(_0002_[3])
  );
  NAND _1011_ (
    .A(valid_input),
    .B(_0022_),
    .Y(_0002_[4])
  );
  NAND _1012_ (
    .A(valid_input),
    .B(_0023_),
    .Y(_0002_[5])
  );
  NAND _1013_ (
    .A(valid_input),
    .B(data_input[6]),
    .Y(_0014_)
  );
  NOT _1014_ (
    .A(_0014_),
    .Y(_0002_[6])
  );
  NAND _1015_ (
    .A(valid_input),
    .B(_0024_),
    .Y(_0002_[7])
  );
  NOR _1016_ (
    .A(valid_input),
    .B(sincout),
    .Y(_0015_)
  );
  NOR _1017_ (
    .A(_0091_),
    .B(_0015_),
    .Y(_0009_)
  );
  NAND _1018_ (
    .A(sinc),
    .B(boomer4),
    .Y(_0016_)
  );
  NAND _1019_ (
    .A(boomer5),
    .B(_0018_),
    .Y(_0017_)
  );
  NAND _1020_ (
    .A(_0016_),
    .B(_0017_),
    .Y(_0001_)
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1021_ (
    .C(clk_4f),
    .D(_0007_[28]),
    .Q(buffer5[28])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1022_ (
    .C(clk_4f),
    .D(_0007_[29]),
    .Q(buffer5[29])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1023_ (
    .C(clk_4f),
    .D(_0007_[30]),
    .Q(buffer5[30])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1024_ (
    .C(clk_4f),
    .D(_0007_[31]),
    .Q(buffer5[31])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1025_ (
    .C(clk_4f),
    .D(valid_input),
    .Q(boomer0)
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1026_ (
    .C(clk_4f),
    .D(boomer0),
    .Q(boomer1)
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1027_ (
    .C(clk_4f),
    .D(boomer1),
    .Q(boomer2)
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1028_ (
    .C(clk_4f),
    .D(boomer2),
    .Q(boomer3)
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1029_ (
    .C(clk_4f),
    .D(_0000_),
    .Q(boomer4)
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1030_ (
    .C(clk_4f),
    .D(_0001_),
    .Q(boomer5)
  );
  (* src = "lib/m8_32.v:52" *)
  DFF _1031_ (
    .C(clk_f),
    .D(_0008_[0]),
    .Q(data_8_32[0])
  );
  (* src = "lib/m8_32.v:52" *)
  DFF _1032_ (
    .C(clk_f),
    .D(_0008_[1]),
    .Q(data_8_32[1])
  );
  (* src = "lib/m8_32.v:52" *)
  DFF _1033_ (
    .C(clk_f),
    .D(_0008_[2]),
    .Q(data_8_32[2])
  );
  (* src = "lib/m8_32.v:52" *)
  DFF _1034_ (
    .C(clk_f),
    .D(_0008_[3]),
    .Q(data_8_32[3])
  );
  (* src = "lib/m8_32.v:52" *)
  DFF _1035_ (
    .C(clk_f),
    .D(_0008_[4]),
    .Q(data_8_32[4])
  );
  (* src = "lib/m8_32.v:52" *)
  DFF _1036_ (
    .C(clk_f),
    .D(_0008_[5]),
    .Q(data_8_32[5])
  );
  (* src = "lib/m8_32.v:52" *)
  DFF _1037_ (
    .C(clk_f),
    .D(_0008_[6]),
    .Q(data_8_32[6])
  );
  (* src = "lib/m8_32.v:52" *)
  DFF _1038_ (
    .C(clk_f),
    .D(_0008_[7]),
    .Q(data_8_32[7])
  );
  (* src = "lib/m8_32.v:52" *)
  DFF _1039_ (
    .C(clk_f),
    .D(_0008_[8]),
    .Q(data_8_32[8])
  );
  (* src = "lib/m8_32.v:52" *)
  DFF _1040_ (
    .C(clk_f),
    .D(_0008_[9]),
    .Q(data_8_32[9])
  );
  (* src = "lib/m8_32.v:52" *)
  DFF _1041_ (
    .C(clk_f),
    .D(_0008_[10]),
    .Q(data_8_32[10])
  );
  (* src = "lib/m8_32.v:52" *)
  DFF _1042_ (
    .C(clk_f),
    .D(_0008_[11]),
    .Q(data_8_32[11])
  );
  (* src = "lib/m8_32.v:52" *)
  DFF _1043_ (
    .C(clk_f),
    .D(_0008_[12]),
    .Q(data_8_32[12])
  );
  (* src = "lib/m8_32.v:52" *)
  DFF _1044_ (
    .C(clk_f),
    .D(_0008_[13]),
    .Q(data_8_32[13])
  );
  (* src = "lib/m8_32.v:52" *)
  DFF _1045_ (
    .C(clk_f),
    .D(_0008_[14]),
    .Q(data_8_32[14])
  );
  (* src = "lib/m8_32.v:52" *)
  DFF _1046_ (
    .C(clk_f),
    .D(_0008_[15]),
    .Q(data_8_32[15])
  );
  (* src = "lib/m8_32.v:52" *)
  DFF _1047_ (
    .C(clk_f),
    .D(_0008_[16]),
    .Q(data_8_32[16])
  );
  (* src = "lib/m8_32.v:52" *)
  DFF _1048_ (
    .C(clk_f),
    .D(_0008_[17]),
    .Q(data_8_32[17])
  );
  (* src = "lib/m8_32.v:52" *)
  DFF _1049_ (
    .C(clk_f),
    .D(_0008_[18]),
    .Q(data_8_32[18])
  );
  (* src = "lib/m8_32.v:52" *)
  DFF _1050_ (
    .C(clk_f),
    .D(_0008_[19]),
    .Q(data_8_32[19])
  );
  (* src = "lib/m8_32.v:52" *)
  DFF _1051_ (
    .C(clk_f),
    .D(_0008_[20]),
    .Q(data_8_32[20])
  );
  (* src = "lib/m8_32.v:52" *)
  DFF _1052_ (
    .C(clk_f),
    .D(_0008_[21]),
    .Q(data_8_32[21])
  );
  (* src = "lib/m8_32.v:52" *)
  DFF _1053_ (
    .C(clk_f),
    .D(_0008_[22]),
    .Q(data_8_32[22])
  );
  (* src = "lib/m8_32.v:52" *)
  DFF _1054_ (
    .C(clk_f),
    .D(_0008_[23]),
    .Q(data_8_32[23])
  );
  (* src = "lib/m8_32.v:52" *)
  DFF _1055_ (
    .C(clk_f),
    .D(_0008_[24]),
    .Q(data_8_32[24])
  );
  (* src = "lib/m8_32.v:52" *)
  DFF _1056_ (
    .C(clk_f),
    .D(_0008_[25]),
    .Q(data_8_32[25])
  );
  (* src = "lib/m8_32.v:52" *)
  DFF _1057_ (
    .C(clk_f),
    .D(_0008_[26]),
    .Q(data_8_32[26])
  );
  (* src = "lib/m8_32.v:52" *)
  DFF _1058_ (
    .C(clk_f),
    .D(_0008_[27]),
    .Q(data_8_32[27])
  );
  (* src = "lib/m8_32.v:52" *)
  DFF _1059_ (
    .C(clk_f),
    .D(_0008_[28]),
    .Q(data_8_32[28])
  );
  (* src = "lib/m8_32.v:52" *)
  DFF _1060_ (
    .C(clk_f),
    .D(_0008_[29]),
    .Q(data_8_32[29])
  );
  (* src = "lib/m8_32.v:52" *)
  DFF _1061_ (
    .C(clk_f),
    .D(_0008_[30]),
    .Q(data_8_32[30])
  );
  (* src = "lib/m8_32.v:52" *)
  DFF _1062_ (
    .C(clk_f),
    .D(_0008_[31]),
    .Q(data_8_32[31])
  );
  (* src = "lib/m8_32.v:52" *)
  DFF _1063_ (
    .C(clk_f),
    .D(_0010_),
    .Q(valid_8_32)
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1064_ (
    .C(clk_4f),
    .D(_0009_),
    .Q(sincout)
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1065_ (
    .C(clk_4f),
    .D(_0004_[0]),
    .Q(buffer2[0])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1066_ (
    .C(clk_4f),
    .D(_0004_[1]),
    .Q(buffer2[1])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1067_ (
    .C(clk_4f),
    .D(_0004_[2]),
    .Q(buffer2[2])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1068_ (
    .C(clk_4f),
    .D(_0004_[3]),
    .Q(buffer2[3])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1069_ (
    .C(clk_4f),
    .D(_0004_[4]),
    .Q(buffer2[4])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1070_ (
    .C(clk_4f),
    .D(_0004_[5]),
    .Q(buffer2[5])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1071_ (
    .C(clk_4f),
    .D(_0004_[6]),
    .Q(buffer2[6])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1072_ (
    .C(clk_4f),
    .D(_0004_[7]),
    .Q(buffer2[7])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1073_ (
    .C(clk_4f),
    .D(_0004_[8]),
    .Q(buffer2[8])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1074_ (
    .C(clk_4f),
    .D(_0004_[9]),
    .Q(buffer2[9])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1075_ (
    .C(clk_4f),
    .D(_0004_[10]),
    .Q(buffer2[10])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1076_ (
    .C(clk_4f),
    .D(_0004_[11]),
    .Q(buffer2[11])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1077_ (
    .C(clk_4f),
    .D(_0004_[12]),
    .Q(buffer2[12])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1078_ (
    .C(clk_4f),
    .D(_0004_[13]),
    .Q(buffer2[13])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1079_ (
    .C(clk_4f),
    .D(_0004_[14]),
    .Q(buffer2[14])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1080_ (
    .C(clk_4f),
    .D(_0004_[15]),
    .Q(buffer2[15])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1081_ (
    .C(clk_4f),
    .D(_0004_[16]),
    .Q(buffer2[16])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1082_ (
    .C(clk_4f),
    .D(_0004_[17]),
    .Q(buffer2[17])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1083_ (
    .C(clk_4f),
    .D(_0004_[18]),
    .Q(buffer2[18])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1084_ (
    .C(clk_4f),
    .D(_0004_[19]),
    .Q(buffer2[19])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1085_ (
    .C(clk_4f),
    .D(_0004_[20]),
    .Q(buffer2[20])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1086_ (
    .C(clk_4f),
    .D(_0004_[21]),
    .Q(buffer2[21])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1087_ (
    .C(clk_4f),
    .D(_0004_[22]),
    .Q(buffer2[22])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1088_ (
    .C(clk_4f),
    .D(_0004_[23]),
    .Q(buffer2[23])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1089_ (
    .C(clk_4f),
    .D(_0004_[24]),
    .Q(buffer2[24])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1090_ (
    .C(clk_4f),
    .D(_0004_[25]),
    .Q(buffer2[25])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1091_ (
    .C(clk_4f),
    .D(_0004_[26]),
    .Q(buffer2[26])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1092_ (
    .C(clk_4f),
    .D(_0004_[27]),
    .Q(buffer2[27])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1093_ (
    .C(clk_4f),
    .D(_0004_[28]),
    .Q(buffer2[28])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1094_ (
    .C(clk_4f),
    .D(_0004_[29]),
    .Q(buffer2[29])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1095_ (
    .C(clk_4f),
    .D(_0004_[30]),
    .Q(buffer2[30])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1096_ (
    .C(clk_4f),
    .D(_0004_[31]),
    .Q(buffer2[31])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1097_ (
    .C(clk_4f),
    .D(_0002_[0]),
    .Q(buffer0[0])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1098_ (
    .C(clk_4f),
    .D(_0002_[1]),
    .Q(buffer0[1])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1099_ (
    .C(clk_4f),
    .D(_0002_[2]),
    .Q(buffer0[2])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1100_ (
    .C(clk_4f),
    .D(_0002_[3]),
    .Q(buffer0[3])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1101_ (
    .C(clk_4f),
    .D(_0002_[4]),
    .Q(buffer0[4])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1102_ (
    .C(clk_4f),
    .D(_0002_[5]),
    .Q(buffer0[5])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1103_ (
    .C(clk_4f),
    .D(_0002_[6]),
    .Q(buffer0[6])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1104_ (
    .C(clk_4f),
    .D(_0002_[7]),
    .Q(buffer0[7])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1105_ (
    .C(clk_4f),
    .D(buffer0[0]),
    .Q(buffer0[8])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1106_ (
    .C(clk_4f),
    .D(buffer0[1]),
    .Q(buffer0[9])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1107_ (
    .C(clk_4f),
    .D(buffer0[2]),
    .Q(buffer0[10])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1108_ (
    .C(clk_4f),
    .D(buffer0[3]),
    .Q(buffer0[11])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1109_ (
    .C(clk_4f),
    .D(buffer0[4]),
    .Q(buffer0[12])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1110_ (
    .C(clk_4f),
    .D(buffer0[5]),
    .Q(buffer0[13])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1111_ (
    .C(clk_4f),
    .D(buffer0[6]),
    .Q(buffer0[14])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1112_ (
    .C(clk_4f),
    .D(buffer0[7]),
    .Q(buffer0[15])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1113_ (
    .C(clk_4f),
    .D(buffer0[8]),
    .Q(buffer0[16])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1114_ (
    .C(clk_4f),
    .D(buffer0[9]),
    .Q(buffer0[17])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1115_ (
    .C(clk_4f),
    .D(buffer0[10]),
    .Q(buffer0[18])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1116_ (
    .C(clk_4f),
    .D(buffer0[11]),
    .Q(buffer0[19])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1117_ (
    .C(clk_4f),
    .D(buffer0[12]),
    .Q(buffer0[20])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1118_ (
    .C(clk_4f),
    .D(buffer0[13]),
    .Q(buffer0[21])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1119_ (
    .C(clk_4f),
    .D(buffer0[14]),
    .Q(buffer0[22])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1120_ (
    .C(clk_4f),
    .D(buffer0[15]),
    .Q(buffer0[23])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1121_ (
    .C(clk_4f),
    .D(buffer0[16]),
    .Q(buffer0[24])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1122_ (
    .C(clk_4f),
    .D(buffer0[17]),
    .Q(buffer0[25])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1123_ (
    .C(clk_4f),
    .D(buffer0[18]),
    .Q(buffer0[26])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1124_ (
    .C(clk_4f),
    .D(buffer0[19]),
    .Q(buffer0[27])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1125_ (
    .C(clk_4f),
    .D(buffer0[20]),
    .Q(buffer0[28])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1126_ (
    .C(clk_4f),
    .D(buffer0[21]),
    .Q(buffer0[29])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1127_ (
    .C(clk_4f),
    .D(buffer0[22]),
    .Q(buffer0[30])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1128_ (
    .C(clk_4f),
    .D(buffer0[23]),
    .Q(buffer0[31])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1129_ (
    .C(clk_4f),
    .D(_0003_[0]),
    .Q(buffer1[0])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1130_ (
    .C(clk_4f),
    .D(_0003_[1]),
    .Q(buffer1[1])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1131_ (
    .C(clk_4f),
    .D(_0003_[2]),
    .Q(buffer1[2])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1132_ (
    .C(clk_4f),
    .D(_0003_[3]),
    .Q(buffer1[3])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1133_ (
    .C(clk_4f),
    .D(_0003_[4]),
    .Q(buffer1[4])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1134_ (
    .C(clk_4f),
    .D(_0003_[5]),
    .Q(buffer1[5])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1135_ (
    .C(clk_4f),
    .D(_0003_[6]),
    .Q(buffer1[6])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1136_ (
    .C(clk_4f),
    .D(_0003_[7]),
    .Q(buffer1[7])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1137_ (
    .C(clk_4f),
    .D(_0003_[8]),
    .Q(buffer1[8])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1138_ (
    .C(clk_4f),
    .D(_0003_[9]),
    .Q(buffer1[9])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1139_ (
    .C(clk_4f),
    .D(_0003_[10]),
    .Q(buffer1[10])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1140_ (
    .C(clk_4f),
    .D(_0003_[11]),
    .Q(buffer1[11])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1141_ (
    .C(clk_4f),
    .D(_0003_[12]),
    .Q(buffer1[12])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1142_ (
    .C(clk_4f),
    .D(_0003_[13]),
    .Q(buffer1[13])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1143_ (
    .C(clk_4f),
    .D(_0003_[14]),
    .Q(buffer1[14])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1144_ (
    .C(clk_4f),
    .D(_0003_[15]),
    .Q(buffer1[15])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1145_ (
    .C(clk_4f),
    .D(_0003_[16]),
    .Q(buffer1[16])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1146_ (
    .C(clk_4f),
    .D(_0003_[17]),
    .Q(buffer1[17])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1147_ (
    .C(clk_4f),
    .D(_0003_[18]),
    .Q(buffer1[18])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1148_ (
    .C(clk_4f),
    .D(_0003_[19]),
    .Q(buffer1[19])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1149_ (
    .C(clk_4f),
    .D(_0003_[20]),
    .Q(buffer1[20])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1150_ (
    .C(clk_4f),
    .D(_0003_[21]),
    .Q(buffer1[21])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1151_ (
    .C(clk_4f),
    .D(_0003_[22]),
    .Q(buffer1[22])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1152_ (
    .C(clk_4f),
    .D(_0003_[23]),
    .Q(buffer1[23])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1153_ (
    .C(clk_4f),
    .D(_0003_[24]),
    .Q(buffer1[24])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1154_ (
    .C(clk_4f),
    .D(_0003_[25]),
    .Q(buffer1[25])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1155_ (
    .C(clk_4f),
    .D(_0003_[26]),
    .Q(buffer1[26])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1156_ (
    .C(clk_4f),
    .D(_0003_[27]),
    .Q(buffer1[27])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1157_ (
    .C(clk_4f),
    .D(_0003_[28]),
    .Q(buffer1[28])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1158_ (
    .C(clk_4f),
    .D(_0003_[29]),
    .Q(buffer1[29])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1159_ (
    .C(clk_4f),
    .D(_0003_[30]),
    .Q(buffer1[30])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1160_ (
    .C(clk_4f),
    .D(_0003_[31]),
    .Q(buffer1[31])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1161_ (
    .C(clk_4f),
    .D(_0005_[0]),
    .Q(buffer3[0])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1162_ (
    .C(clk_4f),
    .D(_0005_[1]),
    .Q(buffer3[1])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1163_ (
    .C(clk_4f),
    .D(_0005_[2]),
    .Q(buffer3[2])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1164_ (
    .C(clk_4f),
    .D(_0005_[3]),
    .Q(buffer3[3])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1165_ (
    .C(clk_4f),
    .D(_0005_[4]),
    .Q(buffer3[4])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1166_ (
    .C(clk_4f),
    .D(_0005_[5]),
    .Q(buffer3[5])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1167_ (
    .C(clk_4f),
    .D(_0005_[6]),
    .Q(buffer3[6])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1168_ (
    .C(clk_4f),
    .D(_0005_[7]),
    .Q(buffer3[7])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1169_ (
    .C(clk_4f),
    .D(_0005_[8]),
    .Q(buffer3[8])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1170_ (
    .C(clk_4f),
    .D(_0005_[9]),
    .Q(buffer3[9])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1171_ (
    .C(clk_4f),
    .D(_0005_[10]),
    .Q(buffer3[10])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1172_ (
    .C(clk_4f),
    .D(_0005_[11]),
    .Q(buffer3[11])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1173_ (
    .C(clk_4f),
    .D(_0005_[12]),
    .Q(buffer3[12])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1174_ (
    .C(clk_4f),
    .D(_0005_[13]),
    .Q(buffer3[13])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1175_ (
    .C(clk_4f),
    .D(_0005_[14]),
    .Q(buffer3[14])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1176_ (
    .C(clk_4f),
    .D(_0005_[15]),
    .Q(buffer3[15])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1177_ (
    .C(clk_4f),
    .D(_0005_[16]),
    .Q(buffer3[16])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1178_ (
    .C(clk_4f),
    .D(_0005_[17]),
    .Q(buffer3[17])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1179_ (
    .C(clk_4f),
    .D(_0005_[18]),
    .Q(buffer3[18])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1180_ (
    .C(clk_4f),
    .D(_0005_[19]),
    .Q(buffer3[19])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1181_ (
    .C(clk_4f),
    .D(_0005_[20]),
    .Q(buffer3[20])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1182_ (
    .C(clk_4f),
    .D(_0005_[21]),
    .Q(buffer3[21])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1183_ (
    .C(clk_4f),
    .D(_0005_[22]),
    .Q(buffer3[22])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1184_ (
    .C(clk_4f),
    .D(_0005_[23]),
    .Q(buffer3[23])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1185_ (
    .C(clk_4f),
    .D(_0005_[24]),
    .Q(buffer3[24])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1186_ (
    .C(clk_4f),
    .D(_0005_[25]),
    .Q(buffer3[25])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1187_ (
    .C(clk_4f),
    .D(_0005_[26]),
    .Q(buffer3[26])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1188_ (
    .C(clk_4f),
    .D(_0005_[27]),
    .Q(buffer3[27])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1189_ (
    .C(clk_4f),
    .D(_0005_[28]),
    .Q(buffer3[28])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1190_ (
    .C(clk_4f),
    .D(_0005_[29]),
    .Q(buffer3[29])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1191_ (
    .C(clk_4f),
    .D(_0005_[30]),
    .Q(buffer3[30])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1192_ (
    .C(clk_4f),
    .D(_0005_[31]),
    .Q(buffer3[31])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1193_ (
    .C(clk_4f),
    .D(_0006_[0]),
    .Q(buffer4[0])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1194_ (
    .C(clk_4f),
    .D(_0006_[1]),
    .Q(buffer4[1])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1195_ (
    .C(clk_4f),
    .D(_0006_[2]),
    .Q(buffer4[2])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1196_ (
    .C(clk_4f),
    .D(_0006_[3]),
    .Q(buffer4[3])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1197_ (
    .C(clk_4f),
    .D(_0006_[4]),
    .Q(buffer4[4])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1198_ (
    .C(clk_4f),
    .D(_0006_[5]),
    .Q(buffer4[5])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1199_ (
    .C(clk_4f),
    .D(_0006_[6]),
    .Q(buffer4[6])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1200_ (
    .C(clk_4f),
    .D(_0006_[7]),
    .Q(buffer4[7])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1201_ (
    .C(clk_4f),
    .D(_0006_[8]),
    .Q(buffer4[8])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1202_ (
    .C(clk_4f),
    .D(_0006_[9]),
    .Q(buffer4[9])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1203_ (
    .C(clk_4f),
    .D(_0006_[10]),
    .Q(buffer4[10])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1204_ (
    .C(clk_4f),
    .D(_0006_[11]),
    .Q(buffer4[11])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1205_ (
    .C(clk_4f),
    .D(_0006_[12]),
    .Q(buffer4[12])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1206_ (
    .C(clk_4f),
    .D(_0006_[13]),
    .Q(buffer4[13])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1207_ (
    .C(clk_4f),
    .D(_0006_[14]),
    .Q(buffer4[14])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1208_ (
    .C(clk_4f),
    .D(_0006_[15]),
    .Q(buffer4[15])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1209_ (
    .C(clk_4f),
    .D(_0006_[16]),
    .Q(buffer4[16])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1210_ (
    .C(clk_4f),
    .D(_0006_[17]),
    .Q(buffer4[17])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1211_ (
    .C(clk_4f),
    .D(_0006_[18]),
    .Q(buffer4[18])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1212_ (
    .C(clk_4f),
    .D(_0006_[19]),
    .Q(buffer4[19])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1213_ (
    .C(clk_4f),
    .D(_0006_[20]),
    .Q(buffer4[20])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1214_ (
    .C(clk_4f),
    .D(_0006_[21]),
    .Q(buffer4[21])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1215_ (
    .C(clk_4f),
    .D(_0006_[22]),
    .Q(buffer4[22])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1216_ (
    .C(clk_4f),
    .D(_0006_[23]),
    .Q(buffer4[23])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1217_ (
    .C(clk_4f),
    .D(_0006_[24]),
    .Q(buffer4[24])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1218_ (
    .C(clk_4f),
    .D(_0006_[25]),
    .Q(buffer4[25])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1219_ (
    .C(clk_4f),
    .D(_0006_[26]),
    .Q(buffer4[26])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1220_ (
    .C(clk_4f),
    .D(_0006_[27]),
    .Q(buffer4[27])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1221_ (
    .C(clk_4f),
    .D(_0006_[28]),
    .Q(buffer4[28])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1222_ (
    .C(clk_4f),
    .D(_0006_[29]),
    .Q(buffer4[29])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1223_ (
    .C(clk_4f),
    .D(_0006_[30]),
    .Q(buffer4[30])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1224_ (
    .C(clk_4f),
    .D(_0006_[31]),
    .Q(buffer4[31])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1225_ (
    .C(clk_4f),
    .D(_0007_[0]),
    .Q(buffer5[0])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1226_ (
    .C(clk_4f),
    .D(_0007_[1]),
    .Q(buffer5[1])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1227_ (
    .C(clk_4f),
    .D(_0007_[2]),
    .Q(buffer5[2])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1228_ (
    .C(clk_4f),
    .D(_0007_[3]),
    .Q(buffer5[3])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1229_ (
    .C(clk_4f),
    .D(_0007_[4]),
    .Q(buffer5[4])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1230_ (
    .C(clk_4f),
    .D(_0007_[5]),
    .Q(buffer5[5])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1231_ (
    .C(clk_4f),
    .D(_0007_[6]),
    .Q(buffer5[6])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1232_ (
    .C(clk_4f),
    .D(_0007_[7]),
    .Q(buffer5[7])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1233_ (
    .C(clk_4f),
    .D(_0007_[8]),
    .Q(buffer5[8])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1234_ (
    .C(clk_4f),
    .D(_0007_[9]),
    .Q(buffer5[9])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1235_ (
    .C(clk_4f),
    .D(_0007_[10]),
    .Q(buffer5[10])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1236_ (
    .C(clk_4f),
    .D(_0007_[11]),
    .Q(buffer5[11])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1237_ (
    .C(clk_4f),
    .D(_0007_[12]),
    .Q(buffer5[12])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1238_ (
    .C(clk_4f),
    .D(_0007_[13]),
    .Q(buffer5[13])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1239_ (
    .C(clk_4f),
    .D(_0007_[14]),
    .Q(buffer5[14])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1240_ (
    .C(clk_4f),
    .D(_0007_[15]),
    .Q(buffer5[15])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1241_ (
    .C(clk_4f),
    .D(_0007_[16]),
    .Q(buffer5[16])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1242_ (
    .C(clk_4f),
    .D(_0007_[17]),
    .Q(buffer5[17])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1243_ (
    .C(clk_4f),
    .D(_0007_[18]),
    .Q(buffer5[18])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1244_ (
    .C(clk_4f),
    .D(_0007_[19]),
    .Q(buffer5[19])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1245_ (
    .C(clk_4f),
    .D(_0007_[20]),
    .Q(buffer5[20])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1246_ (
    .C(clk_4f),
    .D(_0007_[21]),
    .Q(buffer5[21])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1247_ (
    .C(clk_4f),
    .D(_0007_[22]),
    .Q(buffer5[22])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1248_ (
    .C(clk_4f),
    .D(_0007_[23]),
    .Q(buffer5[23])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1249_ (
    .C(clk_4f),
    .D(_0007_[24]),
    .Q(buffer5[24])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1250_ (
    .C(clk_4f),
    .D(_0007_[25]),
    .Q(buffer5[25])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1251_ (
    .C(clk_4f),
    .D(_0007_[26]),
    .Q(buffer5[26])
  );
  (* src = "lib/m8_32.v:21" *)
  DFF _1252_ (
    .C(clk_4f),
    .D(_0007_[27]),
    .Q(buffer5[27])
  );
  assign _0002_[31:8] = buffer0[23:0];
endmodule

(* src = "lib/paralelo_serial.v:1" *)
module paralelo_serial(clk_4f, clk_32f, data_in, valid_in, reset, data_out);
  (* src = "lib/paralelo_serial.v:11" *)
  wire [7:0] _000_;
  (* src = "lib/paralelo_serial.v:19" *)
  wire _001_;
  (* src = "lib/paralelo_serial.v:19" *)
  wire [2:0] _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  (* src = "lib/paralelo_serial.v:2" *)
  input clk_32f;
  (* src = "lib/paralelo_serial.v:1" *)
  input clk_4f;
  (* src = "lib/paralelo_serial.v:9" *)
  wire [7:0] data2send;
  (* src = "lib/paralelo_serial.v:3" *)
  input [7:0] data_in;
  (* src = "lib/paralelo_serial.v:6" *)
  output data_out;
  (* src = "lib/paralelo_serial.v:5" *)
  input reset;
  (* src = "lib/paralelo_serial.v:8" *)
  wire [2:0] selector;
  (* src = "lib/paralelo_serial.v:4" *)
  input valid_in;
  NOT _046_ (
    .A(data_in[2]),
    .Y(_003_)
  );
  NOT _047_ (
    .A(data_in[3]),
    .Y(_004_)
  );
  NOT _048_ (
    .A(data_in[4]),
    .Y(_005_)
  );
  NOT _049_ (
    .A(data_in[5]),
    .Y(_006_)
  );
  NOT _050_ (
    .A(data_in[7]),
    .Y(_007_)
  );
  NOT _051_ (
    .A(reset),
    .Y(_008_)
  );
  NOT _052_ (
    .A(data2send[6]),
    .Y(_009_)
  );
  NOT _053_ (
    .A(data2send[7]),
    .Y(_010_)
  );
  NOT _054_ (
    .A(selector[0]),
    .Y(_011_)
  );
  NOT _055_ (
    .A(selector[1]),
    .Y(_012_)
  );
  NOT _056_ (
    .A(selector[2]),
    .Y(_013_)
  );
  NAND _057_ (
    .A(data_in[1]),
    .B(valid_in),
    .Y(_014_)
  );
  NOT _058_ (
    .A(_014_),
    .Y(_000_[1])
  );
  NAND _059_ (
    .A(valid_in),
    .B(_003_),
    .Y(_000_[2])
  );
  NAND _060_ (
    .A(valid_in),
    .B(_004_),
    .Y(_000_[3])
  );
  NAND _061_ (
    .A(valid_in),
    .B(_005_),
    .Y(_000_[4])
  );
  NAND _062_ (
    .A(valid_in),
    .B(_006_),
    .Y(_000_[5])
  );
  NAND _063_ (
    .A(valid_in),
    .B(data_in[6]),
    .Y(_015_)
  );
  NOT _064_ (
    .A(_015_),
    .Y(_000_[6])
  );
  NAND _065_ (
    .A(valid_in),
    .B(_007_),
    .Y(_000_[7])
  );
  NOR _066_ (
    .A(_008_),
    .B(selector[0]),
    .Y(_002_[0])
  );
  NAND _067_ (
    .A(selector[0]),
    .B(selector[1]),
    .Y(_016_)
  );
  NOT _068_ (
    .A(_016_),
    .Y(_017_)
  );
  NOR _069_ (
    .A(selector[0]),
    .B(selector[1]),
    .Y(_018_)
  );
  NOT _070_ (
    .A(_018_),
    .Y(_019_)
  );
  NAND _071_ (
    .A(reset),
    .B(_019_),
    .Y(_020_)
  );
  NOR _072_ (
    .A(_017_),
    .B(_020_),
    .Y(_002_[1])
  );
  NOR _073_ (
    .A(_013_),
    .B(_016_),
    .Y(_021_)
  );
  NAND _074_ (
    .A(_013_),
    .B(_016_),
    .Y(_022_)
  );
  NAND _075_ (
    .A(reset),
    .B(_022_),
    .Y(_023_)
  );
  NOR _076_ (
    .A(_021_),
    .B(_023_),
    .Y(_002_[2])
  );
  NOR _077_ (
    .A(data2send[1]),
    .B(_013_),
    .Y(_024_)
  );
  NOR _078_ (
    .A(data2send[5]),
    .B(selector[2]),
    .Y(_025_)
  );
  NOR _079_ (
    .A(_024_),
    .B(_025_),
    .Y(_026_)
  );
  NAND _080_ (
    .A(_011_),
    .B(_026_),
    .Y(_027_)
  );
  NAND _081_ (
    .A(data2send[0]),
    .B(selector[2]),
    .Y(_028_)
  );
  NAND _082_ (
    .A(data2send[4]),
    .B(_013_),
    .Y(_029_)
  );
  NAND _083_ (
    .A(_028_),
    .B(_029_),
    .Y(_030_)
  );
  NAND _084_ (
    .A(selector[0]),
    .B(_030_),
    .Y(_031_)
  );
  NAND _085_ (
    .A(_027_),
    .B(_031_),
    .Y(_032_)
  );
  NAND _086_ (
    .A(selector[1]),
    .B(_032_),
    .Y(_033_)
  );
  NAND _087_ (
    .A(_010_),
    .B(_013_),
    .Y(_034_)
  );
  NOR _088_ (
    .A(data2send[3]),
    .B(_013_),
    .Y(_035_)
  );
  NAND _089_ (
    .A(_018_),
    .B(_034_),
    .Y(_036_)
  );
  NOR _090_ (
    .A(_035_),
    .B(_036_),
    .Y(_037_)
  );
  NAND _091_ (
    .A(data2send[2]),
    .B(selector[2]),
    .Y(_038_)
  );
  NOT _092_ (
    .A(_038_),
    .Y(_039_)
  );
  NOR _093_ (
    .A(_009_),
    .B(selector[2]),
    .Y(_040_)
  );
  NOR _094_ (
    .A(_039_),
    .B(_040_),
    .Y(_041_)
  );
  NAND _095_ (
    .A(selector[0]),
    .B(_012_),
    .Y(_042_)
  );
  NOR _096_ (
    .A(_041_),
    .B(_042_),
    .Y(_043_)
  );
  NOR _097_ (
    .A(_037_),
    .B(_043_),
    .Y(_044_)
  );
  NAND _098_ (
    .A(_033_),
    .B(_044_),
    .Y(_001_)
  );
  NAND _099_ (
    .A(valid_in),
    .B(data_in[0]),
    .Y(_045_)
  );
  NOT _100_ (
    .A(_045_),
    .Y(_000_[0])
  );
  (* src = "lib/paralelo_serial.v:19" *)
  DFF _101_ (
    .C(clk_32f),
    .D(_001_),
    .Q(data_out)
  );
  (* src = "lib/paralelo_serial.v:19" *)
  DFF _102_ (
    .C(clk_32f),
    .D(_002_[0]),
    .Q(selector[0])
  );
  (* src = "lib/paralelo_serial.v:19" *)
  DFF _103_ (
    .C(clk_32f),
    .D(_002_[1]),
    .Q(selector[1])
  );
  (* src = "lib/paralelo_serial.v:19" *)
  DFF _104_ (
    .C(clk_32f),
    .D(_002_[2]),
    .Q(selector[2])
  );
  (* src = "lib/paralelo_serial.v:11" *)
  DFF _105_ (
    .C(clk_4f),
    .D(_000_[0]),
    .Q(data2send[0])
  );
  (* src = "lib/paralelo_serial.v:11" *)
  DFF _106_ (
    .C(clk_4f),
    .D(_000_[1]),
    .Q(data2send[1])
  );
  (* src = "lib/paralelo_serial.v:11" *)
  DFF _107_ (
    .C(clk_4f),
    .D(_000_[2]),
    .Q(data2send[2])
  );
  (* src = "lib/paralelo_serial.v:11" *)
  DFF _108_ (
    .C(clk_4f),
    .D(_000_[3]),
    .Q(data2send[3])
  );
  (* src = "lib/paralelo_serial.v:11" *)
  DFF _109_ (
    .C(clk_4f),
    .D(_000_[4]),
    .Q(data2send[4])
  );
  (* src = "lib/paralelo_serial.v:11" *)
  DFF _110_ (
    .C(clk_4f),
    .D(_000_[5]),
    .Q(data2send[5])
  );
  (* src = "lib/paralelo_serial.v:11" *)
  DFF _111_ (
    .C(clk_4f),
    .D(_000_[6]),
    .Q(data2send[6])
  );
  (* src = "lib/paralelo_serial.v:11" *)
  DFF _112_ (
    .C(clk_4f),
    .D(_000_[7]),
    .Q(data2send[7])
  );
endmodule

(* src = "lib/serial_paralelo.v:1" *)
module serial_paralelo(data_in, clk_4f, clk_32f, reset, valid_out, data_out);
  (* src = "lib/serial_paralelo.v:11" *)
  wire _000_;
  (* src = "lib/serial_paralelo.v:11" *)
  wire [2:0] _001_;
  (* src = "lib/serial_paralelo.v:11" *)
  wire [4:0] _002_;
  (* src = "lib/serial_paralelo.v:11" *)
  wire [7:0] _003_;
  (* src = "lib/serial_paralelo.v:11" *)
  wire [7:0] _004_;
  (* src = "lib/serial_paralelo.v:11" *)
  wire _005_;
  (* src = "lib/serial_paralelo.v:11" *)
  (* unused_bits = "7" *)
  wire [7:0] _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  (* src = "lib/serial_paralelo.v:10" *)
  wire active;
  (* src = "lib/serial_paralelo.v:7" *)
  wire [2:0] bc_counter;
  (* src = "lib/serial_paralelo.v:3" *)
  input clk_32f;
  (* src = "lib/serial_paralelo.v:2" *)
  input clk_4f;
  (* src = "lib/serial_paralelo.v:9" *)
  wire [4:0] counter;
  (* src = "lib/serial_paralelo.v:8" *)
  wire [7:0] data2send;
  (* src = "lib/serial_paralelo.v:1" *)
  input data_in;
  (* src = "lib/serial_paralelo.v:6" *)
  output [7:0] data_out;
  (* src = "lib/serial_paralelo.v:4" *)
  input reset;
  (* src = "lib/serial_paralelo.v:5" *)
  output valid_out;
  (* src = "lib/serial_paralelo.v:8" *)
  (* unused_bits = "7" *)
  wire [7:0] wait_buffer;
  NOT _117_ (
    .A(counter[2]),
    .Y(_095_)
  );
  NOT _118_ (
    .A(counter[4]),
    .Y(_096_)
  );
  NOT _119_ (
    .A(reset),
    .Y(_097_)
  );
  NOT _120_ (
    .A(bc_counter[0]),
    .Y(_098_)
  );
  NOT _121_ (
    .A(bc_counter[1]),
    .Y(_099_)
  );
  NOT _122_ (
    .A(data2send[2]),
    .Y(_100_)
  );
  NOT _123_ (
    .A(active),
    .Y(_101_)
  );
  NOT _124_ (
    .A(counter[0]),
    .Y(_102_)
  );
  NOT _125_ (
    .A(counter[1]),
    .Y(_103_)
  );
  NAND _126_ (
    .A(data_in),
    .B(reset),
    .Y(_104_)
  );
  NOT _127_ (
    .A(_104_),
    .Y(_006_[0])
  );
  NAND _128_ (
    .A(reset),
    .B(wait_buffer[0]),
    .Y(_105_)
  );
  NOT _129_ (
    .A(_105_),
    .Y(_006_[1])
  );
  NAND _130_ (
    .A(reset),
    .B(wait_buffer[1]),
    .Y(_106_)
  );
  NOT _131_ (
    .A(_106_),
    .Y(_006_[2])
  );
  NAND _132_ (
    .A(reset),
    .B(wait_buffer[2]),
    .Y(_107_)
  );
  NOT _133_ (
    .A(_107_),
    .Y(_006_[3])
  );
  NAND _134_ (
    .A(reset),
    .B(wait_buffer[3]),
    .Y(_108_)
  );
  NOT _135_ (
    .A(_108_),
    .Y(_006_[4])
  );
  NAND _136_ (
    .A(reset),
    .B(wait_buffer[4]),
    .Y(_109_)
  );
  NOT _137_ (
    .A(_109_),
    .Y(_006_[5])
  );
  NAND _138_ (
    .A(reset),
    .B(wait_buffer[5]),
    .Y(_110_)
  );
  NOT _139_ (
    .A(_110_),
    .Y(_006_[6])
  );
  NOR _140_ (
    .A(_097_),
    .B(counter[0]),
    .Y(_002_[0])
  );
  NAND _141_ (
    .A(counter[0]),
    .B(counter[1]),
    .Y(_111_)
  );
  NOT _142_ (
    .A(_111_),
    .Y(_112_)
  );
  NOR _143_ (
    .A(counter[0]),
    .B(counter[1]),
    .Y(_113_)
  );
  NAND _144_ (
    .A(_102_),
    .B(_103_),
    .Y(_114_)
  );
  NAND _145_ (
    .A(reset),
    .B(_114_),
    .Y(_115_)
  );
  NOR _146_ (
    .A(_112_),
    .B(_115_),
    .Y(_002_[1])
  );
  NOR _147_ (
    .A(_095_),
    .B(_111_),
    .Y(_116_)
  );
  NAND _148_ (
    .A(_095_),
    .B(_111_),
    .Y(_007_)
  );
  NAND _149_ (
    .A(reset),
    .B(_007_),
    .Y(_008_)
  );
  NOR _150_ (
    .A(_116_),
    .B(_008_),
    .Y(_002_[2])
  );
  NAND _151_ (
    .A(_096_),
    .B(counter[3]),
    .Y(_009_)
  );
  NAND _152_ (
    .A(_095_),
    .B(_113_),
    .Y(_010_)
  );
  NOR _153_ (
    .A(_114_),
    .B(_009_),
    .Y(_011_)
  );
  NOR _154_ (
    .A(_009_),
    .B(_010_),
    .Y(_012_)
  );
  NAND _155_ (
    .A(_095_),
    .B(_011_),
    .Y(_013_)
  );
  NOR _156_ (
    .A(_097_),
    .B(_012_),
    .Y(_014_)
  );
  NOT _157_ (
    .A(_014_),
    .Y(_015_)
  );
  NAND _158_ (
    .A(counter[3]),
    .B(_116_),
    .Y(_016_)
  );
  NOR _159_ (
    .A(counter[3]),
    .B(_116_),
    .Y(_017_)
  );
  NOT _160_ (
    .A(_017_),
    .Y(_018_)
  );
  NAND _161_ (
    .A(_016_),
    .B(_018_),
    .Y(_019_)
  );
  NOR _162_ (
    .A(_015_),
    .B(_019_),
    .Y(_002_[3])
  );
  NOR _163_ (
    .A(_096_),
    .B(_016_),
    .Y(_020_)
  );
  NAND _164_ (
    .A(_096_),
    .B(_016_),
    .Y(_021_)
  );
  NAND _165_ (
    .A(reset),
    .B(_021_),
    .Y(_022_)
  );
  NOR _166_ (
    .A(_020_),
    .B(_022_),
    .Y(_002_[4])
  );
  NAND _167_ (
    .A(data2send[0]),
    .B(_014_),
    .Y(_023_)
  );
  NOR _168_ (
    .A(_097_),
    .B(_013_),
    .Y(_024_)
  );
  NAND _169_ (
    .A(reset),
    .B(_012_),
    .Y(_025_)
  );
  NAND _170_ (
    .A(data_in),
    .B(_024_),
    .Y(_026_)
  );
  NAND _171_ (
    .A(_023_),
    .B(_026_),
    .Y(_003_[0])
  );
  NAND _172_ (
    .A(data2send[1]),
    .B(_014_),
    .Y(_027_)
  );
  NAND _173_ (
    .A(wait_buffer[0]),
    .B(_024_),
    .Y(_028_)
  );
  NAND _174_ (
    .A(_027_),
    .B(_028_),
    .Y(_003_[1])
  );
  NAND _175_ (
    .A(data2send[2]),
    .B(_014_),
    .Y(_029_)
  );
  NAND _176_ (
    .A(wait_buffer[1]),
    .B(_024_),
    .Y(_030_)
  );
  NAND _177_ (
    .A(_029_),
    .B(_030_),
    .Y(_003_[2])
  );
  NAND _178_ (
    .A(data2send[3]),
    .B(_014_),
    .Y(_031_)
  );
  NAND _179_ (
    .A(wait_buffer[2]),
    .B(_024_),
    .Y(_032_)
  );
  NAND _180_ (
    .A(_031_),
    .B(_032_),
    .Y(_003_[3])
  );
  NAND _181_ (
    .A(data2send[4]),
    .B(_014_),
    .Y(_033_)
  );
  NAND _182_ (
    .A(wait_buffer[3]),
    .B(_024_),
    .Y(_034_)
  );
  NAND _183_ (
    .A(_033_),
    .B(_034_),
    .Y(_003_[4])
  );
  NAND _184_ (
    .A(data2send[5]),
    .B(_014_),
    .Y(_035_)
  );
  NAND _185_ (
    .A(wait_buffer[4]),
    .B(_024_),
    .Y(_036_)
  );
  NAND _186_ (
    .A(_035_),
    .B(_036_),
    .Y(_003_[5])
  );
  NAND _187_ (
    .A(data2send[6]),
    .B(_014_),
    .Y(_037_)
  );
  NAND _188_ (
    .A(wait_buffer[5]),
    .B(_024_),
    .Y(_038_)
  );
  NAND _189_ (
    .A(_037_),
    .B(_038_),
    .Y(_003_[6])
  );
  NAND _190_ (
    .A(data2send[7]),
    .B(_014_),
    .Y(_039_)
  );
  NAND _191_ (
    .A(wait_buffer[6]),
    .B(_024_),
    .Y(_040_)
  );
  NAND _192_ (
    .A(_039_),
    .B(_040_),
    .Y(_003_[7])
  );
  NOR _193_ (
    .A(_098_),
    .B(_013_),
    .Y(_041_)
  );
  NAND _194_ (
    .A(data2send[3]),
    .B(data2send[4]),
    .Y(_042_)
  );
  NAND _195_ (
    .A(data2send[5]),
    .B(data2send[7]),
    .Y(_043_)
  );
  NOR _196_ (
    .A(_042_),
    .B(_043_),
    .Y(_044_)
  );
  NOT _197_ (
    .A(_044_),
    .Y(_045_)
  );
  NOR _198_ (
    .A(data2send[1]),
    .B(data2send[6]),
    .Y(_046_)
  );
  NOR _199_ (
    .A(data2send[0]),
    .B(_100_),
    .Y(_047_)
  );
  NAND _200_ (
    .A(_046_),
    .B(_047_),
    .Y(_048_)
  );
  NOR _201_ (
    .A(_045_),
    .B(_048_),
    .Y(_049_)
  );
  NOT _202_ (
    .A(_049_),
    .Y(_050_)
  );
  NOR _203_ (
    .A(_098_),
    .B(_099_),
    .Y(_051_)
  );
  NOR _204_ (
    .A(bc_counter[2]),
    .B(_051_),
    .Y(_052_)
  );
  NOT _205_ (
    .A(_052_),
    .Y(_053_)
  );
  NAND _206_ (
    .A(_049_),
    .B(_052_),
    .Y(_054_)
  );
  NOR _207_ (
    .A(bc_counter[2]),
    .B(active),
    .Y(_055_)
  );
  NAND _208_ (
    .A(_051_),
    .B(_055_),
    .Y(_056_)
  );
  NOT _209_ (
    .A(_056_),
    .Y(_057_)
  );
  NAND _210_ (
    .A(_054_),
    .B(_056_),
    .Y(_058_)
  );
  NAND _211_ (
    .A(_041_),
    .B(_058_),
    .Y(_059_)
  );
  NOR _212_ (
    .A(_013_),
    .B(_054_),
    .Y(_060_)
  );
  NOR _213_ (
    .A(bc_counter[0]),
    .B(_060_),
    .Y(_061_)
  );
  NAND _214_ (
    .A(reset),
    .B(_059_),
    .Y(_062_)
  );
  NOR _215_ (
    .A(_061_),
    .B(_062_),
    .Y(_001_[0])
  );
  NOR _216_ (
    .A(bc_counter[1]),
    .B(_041_),
    .Y(_063_)
  );
  NOR _217_ (
    .A(_054_),
    .B(_063_),
    .Y(_064_)
  );
  NOR _218_ (
    .A(_013_),
    .B(_056_),
    .Y(_065_)
  );
  NAND _219_ (
    .A(_012_),
    .B(_057_),
    .Y(_066_)
  );
  NAND _220_ (
    .A(bc_counter[1]),
    .B(_066_),
    .Y(_067_)
  );
  NOR _221_ (
    .A(_060_),
    .B(_067_),
    .Y(_068_)
  );
  NOR _222_ (
    .A(_064_),
    .B(_068_),
    .Y(_069_)
  );
  NOR _223_ (
    .A(_097_),
    .B(_069_),
    .Y(_001_[1])
  );
  NOR _224_ (
    .A(bc_counter[2]),
    .B(_065_),
    .Y(_070_)
  );
  NOR _225_ (
    .A(_097_),
    .B(_070_),
    .Y(_001_[2])
  );
  NOR _226_ (
    .A(active),
    .B(_065_),
    .Y(_071_)
  );
  NOR _227_ (
    .A(_097_),
    .B(_071_),
    .Y(_000_)
  );
  NOR _228_ (
    .A(_101_),
    .B(_052_),
    .Y(_072_)
  );
  NAND _229_ (
    .A(active),
    .B(_053_),
    .Y(_073_)
  );
  NOR _230_ (
    .A(_025_),
    .B(_073_),
    .Y(_074_)
  );
  NAND _231_ (
    .A(_024_),
    .B(_072_),
    .Y(_075_)
  );
  NOR _232_ (
    .A(_049_),
    .B(_075_),
    .Y(_076_)
  );
  NAND _233_ (
    .A(_050_),
    .B(_074_),
    .Y(_077_)
  );
  NAND _234_ (
    .A(valid_out),
    .B(_075_),
    .Y(_078_)
  );
  NAND _235_ (
    .A(_077_),
    .B(_078_),
    .Y(_005_)
  );
  NOR _236_ (
    .A(data_out[0]),
    .B(_074_),
    .Y(_079_)
  );
  NOR _237_ (
    .A(data2send[0]),
    .B(_075_),
    .Y(_080_)
  );
  NOR _238_ (
    .A(_079_),
    .B(_080_),
    .Y(_004_[0])
  );
  NAND _239_ (
    .A(data_out[1]),
    .B(_075_),
    .Y(_081_)
  );
  NAND _240_ (
    .A(data2send[1]),
    .B(_076_),
    .Y(_082_)
  );
  NAND _241_ (
    .A(_081_),
    .B(_082_),
    .Y(_004_[1])
  );
  NAND _242_ (
    .A(data2send[2]),
    .B(_074_),
    .Y(_083_)
  );
  NAND _243_ (
    .A(data_out[2]),
    .B(_075_),
    .Y(_084_)
  );
  NAND _244_ (
    .A(_083_),
    .B(_084_),
    .Y(_004_[2])
  );
  NOR _245_ (
    .A(data_out[3]),
    .B(_074_),
    .Y(_085_)
  );
  NOR _246_ (
    .A(data2send[3]),
    .B(_077_),
    .Y(_086_)
  );
  NOR _247_ (
    .A(_085_),
    .B(_086_),
    .Y(_004_[3])
  );
  NOR _248_ (
    .A(data_out[4]),
    .B(_074_),
    .Y(_087_)
  );
  NOR _249_ (
    .A(data2send[4]),
    .B(_077_),
    .Y(_088_)
  );
  NOR _250_ (
    .A(_087_),
    .B(_088_),
    .Y(_004_[4])
  );
  NOR _251_ (
    .A(data_out[5]),
    .B(_074_),
    .Y(_089_)
  );
  NOR _252_ (
    .A(data2send[5]),
    .B(_077_),
    .Y(_090_)
  );
  NOR _253_ (
    .A(_089_),
    .B(_090_),
    .Y(_004_[5])
  );
  NAND _254_ (
    .A(data_out[6]),
    .B(_075_),
    .Y(_091_)
  );
  NAND _255_ (
    .A(data2send[6]),
    .B(_076_),
    .Y(_092_)
  );
  NAND _256_ (
    .A(_091_),
    .B(_092_),
    .Y(_004_[6])
  );
  NAND _257_ (
    .A(data2send[7]),
    .B(_074_),
    .Y(_093_)
  );
  NAND _258_ (
    .A(data_out[7]),
    .B(_075_),
    .Y(_094_)
  );
  NAND _259_ (
    .A(_093_),
    .B(_094_),
    .Y(_004_[7])
  );
  (* src = "lib/serial_paralelo.v:11" *)
  DFF _260_ (
    .C(clk_32f),
    .D(_004_[0]),
    .Q(data_out[0])
  );
  (* src = "lib/serial_paralelo.v:11" *)
  DFF _261_ (
    .C(clk_32f),
    .D(_004_[1]),
    .Q(data_out[1])
  );
  (* src = "lib/serial_paralelo.v:11" *)
  DFF _262_ (
    .C(clk_32f),
    .D(_004_[2]),
    .Q(data_out[2])
  );
  (* src = "lib/serial_paralelo.v:11" *)
  DFF _263_ (
    .C(clk_32f),
    .D(_004_[3]),
    .Q(data_out[3])
  );
  (* src = "lib/serial_paralelo.v:11" *)
  DFF _264_ (
    .C(clk_32f),
    .D(_004_[4]),
    .Q(data_out[4])
  );
  (* src = "lib/serial_paralelo.v:11" *)
  DFF _265_ (
    .C(clk_32f),
    .D(_004_[5]),
    .Q(data_out[5])
  );
  (* src = "lib/serial_paralelo.v:11" *)
  DFF _266_ (
    .C(clk_32f),
    .D(_004_[6]),
    .Q(data_out[6])
  );
  (* src = "lib/serial_paralelo.v:11" *)
  DFF _267_ (
    .C(clk_32f),
    .D(_004_[7]),
    .Q(data_out[7])
  );
  (* src = "lib/serial_paralelo.v:11" *)
  DFF _268_ (
    .C(clk_32f),
    .D(_005_),
    .Q(valid_out)
  );
  (* src = "lib/serial_paralelo.v:11" *)
  DFF _269_ (
    .C(clk_32f),
    .D(_000_),
    .Q(active)
  );
  (* src = "lib/serial_paralelo.v:11" *)
  DFF _270_ (
    .C(clk_32f),
    .D(_001_[0]),
    .Q(bc_counter[0])
  );
  (* src = "lib/serial_paralelo.v:11" *)
  DFF _271_ (
    .C(clk_32f),
    .D(_001_[1]),
    .Q(bc_counter[1])
  );
  (* src = "lib/serial_paralelo.v:11" *)
  DFF _272_ (
    .C(clk_32f),
    .D(_001_[2]),
    .Q(bc_counter[2])
  );
  (* src = "lib/serial_paralelo.v:11" *)
  DFF _273_ (
    .C(clk_32f),
    .D(_003_[0]),
    .Q(data2send[0])
  );
  (* src = "lib/serial_paralelo.v:11" *)
  DFF _274_ (
    .C(clk_32f),
    .D(_003_[1]),
    .Q(data2send[1])
  );
  (* src = "lib/serial_paralelo.v:11" *)
  DFF _275_ (
    .C(clk_32f),
    .D(_003_[2]),
    .Q(data2send[2])
  );
  (* src = "lib/serial_paralelo.v:11" *)
  DFF _276_ (
    .C(clk_32f),
    .D(_003_[3]),
    .Q(data2send[3])
  );
  (* src = "lib/serial_paralelo.v:11" *)
  DFF _277_ (
    .C(clk_32f),
    .D(_003_[4]),
    .Q(data2send[4])
  );
  (* src = "lib/serial_paralelo.v:11" *)
  DFF _278_ (
    .C(clk_32f),
    .D(_003_[5]),
    .Q(data2send[5])
  );
  (* src = "lib/serial_paralelo.v:11" *)
  DFF _279_ (
    .C(clk_32f),
    .D(_003_[6]),
    .Q(data2send[6])
  );
  (* src = "lib/serial_paralelo.v:11" *)
  DFF _280_ (
    .C(clk_32f),
    .D(_003_[7]),
    .Q(data2send[7])
  );
  (* src = "lib/serial_paralelo.v:11" *)
  DFF _281_ (
    .C(clk_32f),
    .D(_002_[0]),
    .Q(counter[0])
  );
  (* src = "lib/serial_paralelo.v:11" *)
  DFF _282_ (
    .C(clk_32f),
    .D(_002_[1]),
    .Q(counter[1])
  );
  (* src = "lib/serial_paralelo.v:11" *)
  DFF _283_ (
    .C(clk_32f),
    .D(_002_[2]),
    .Q(counter[2])
  );
  (* src = "lib/serial_paralelo.v:11" *)
  DFF _284_ (
    .C(clk_32f),
    .D(_002_[3]),
    .Q(counter[3])
  );
  (* src = "lib/serial_paralelo.v:11" *)
  DFF _285_ (
    .C(clk_32f),
    .D(_002_[4]),
    .Q(counter[4])
  );
  (* src = "lib/serial_paralelo.v:11" *)
  DFF _286_ (
    .C(clk_32f),
    .D(_006_[0]),
    .Q(wait_buffer[0])
  );
  (* src = "lib/serial_paralelo.v:11" *)
  DFF _287_ (
    .C(clk_32f),
    .D(_006_[1]),
    .Q(wait_buffer[1])
  );
  (* src = "lib/serial_paralelo.v:11" *)
  DFF _288_ (
    .C(clk_32f),
    .D(_006_[2]),
    .Q(wait_buffer[2])
  );
  (* src = "lib/serial_paralelo.v:11" *)
  DFF _289_ (
    .C(clk_32f),
    .D(_006_[3]),
    .Q(wait_buffer[3])
  );
  (* src = "lib/serial_paralelo.v:11" *)
  DFF _290_ (
    .C(clk_32f),
    .D(_006_[4]),
    .Q(wait_buffer[4])
  );
  (* src = "lib/serial_paralelo.v:11" *)
  DFF _291_ (
    .C(clk_32f),
    .D(_006_[5]),
    .Q(wait_buffer[5])
  );
  (* src = "lib/serial_paralelo.v:11" *)
  DFF _292_ (
    .C(clk_32f),
    .D(_006_[6]),
    .Q(wait_buffer[6])
  );
endmodule
